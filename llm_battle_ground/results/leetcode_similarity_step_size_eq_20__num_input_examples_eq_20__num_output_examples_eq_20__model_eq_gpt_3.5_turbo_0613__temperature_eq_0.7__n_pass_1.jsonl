{"input_context": "Example 1: \nLeetCode Problem #2\nTitle: Add Two Numbers\nDescription:\nYou are given two non-empty linked lists representing two non-negative integers. The digits are stored in reverse order, and each of their nodes contains a single digit. Add the two numbers and return the sum as a linked list. \nExample 2: \nLeetCode Problem #3\nTitle: Longest Substring Without Repeating Characters\nDescription:\nGiven a string s, find the length of the longest substring without repeating characters. \nExample 3: \nLeetCode Problem #4\nTitle: Median of Two Sorted Arrays\nDescription:\nGiven two sorted arrays nums1 and nums2 of size m and n respectively, return the median of the two sorted arrays. \nExample 4: \nLeetCode Problem #5\nTitle: Longest Palindromic Substring\nDescription:\nGiven a string s, return the longest palindromic substring in s. \nExample 5: \nLeetCode Problem #6\nTitle: Zigzag Conversion\nDescription:\nThe string \"PAYPALISHIRING\" is written in a zigzag pattern on a given number of rows like this: (you may want to display this pattern in a fixed font for better legibility)...\n\nExample 6: \nLeetCode Problem #7\nTitle: Reverse Integer\nDescription:\nGiven a signed 32-bit integer x, return x with its digits reversed. If reversing x causes the value to go outside the signed 32-bit integer range [-2^31, 2^31 - 1], then return 0. \nExample 7: \nLeetCode Problem #8\nTitle: String to Integer (atoi)\nDescription:\nImplement the myAtoi(string s) function, which converts a string to a 32-bit signed integer (similar to C/C++'s atoi function). \nExample 8: \nLeetCode Problem #9\nTitle: Palindrome Number\nDescription:\nGiven an integer x, return true if x is a palindrome, and false otherwise. \nExample 9: \nLeetCode Problem #10\nTitle: Regular Expression Matching\nDescription:\nGiven an input string s and a pattern p, implement regular expression matching with support for . and '*' where:...\n\nExample 10: \nLeetCode Problem #11\nTitle: Container With Most Water\nDescription:\nYou are given an integer array height of length n. There are n vertical lines drawn such that the two endpoints of the i th line are (i, 0) and (i, height[i]). \nExample 11: \nLeetCode Problem #12\nTitle: Integer to Roman\nDescription:\nRoman numerals are represented by seven different symbols: I, V, X, L, C, D and M. \nExample 12: \nLeetCode Problem #13\nTitle: Roman to Integer\nDescription:\nRoman numerals are represented by seven different symbols: I, V, X, L, C, D and M. \nExample 13: \nLeetCode Problem #14\nTitle: Longest Common Prefix\nDescription:\nWrite a function to find the longest common prefix string amongst an array of strings. \nExample 14: \nLeetCode Problem #15\nTitle: 3Sum\nDescription:\nGiven an integer array nums, return all the triplets [nums[i], nums[j], nums[k]] such that i != j, i != k, and j != k, and nums[i] + nums[j] + nums[k] == 0. \nExample 15: \nLeetCode Problem #16\nTitle: 3Sum Closest\nDescription:\nGiven an integer array nums of length n and an integer target, find three integers in nums such that the sum is closest to target. \nExample 16: \nLeetCode Problem #17\nTitle: Letter Combinations of a Phone Number\nDescription:\nGiven a string containing digits from 2-9 inclusive, return all possible letter combinations that the number could represent. Return the answer in any order. \nExample 17: \nLeetCode Problem #18\nTitle: 4Sum\nDescription:\nGiven an array nums of n integers, return an array of all the unique quadruplets [nums[a], nums[b], nums[c], nums[d]] such that:...\n\nExample 18: \nLeetCode Problem #19\nTitle: Remove Nth Node From End of List\nDescription:\nGiven the head of a linked list, remove the n th node from the end of the list and return its head. \nExample 19: \nLeetCode Problem #20\nTitle: Valid Parentheses\nDescription:\nGiven a string s containing just the characters '(', ')', '{', '}', '[' and ']', determine if the input string is valid. \nExample 20: \nLeetCode Problem #21\nTitle: Merge Two Sorted Lists\nDescription:\nYou are given the heads of two sorted linked lists list1 and list2. ", "expected_response": "Example 21: \nLeetCode Problem #22\nTitle: Generate Parentheses\nDescription:\nGiven n pairs of parentheses, write a function to generate all combinations of well-formed parentheses. \nExample 22: \nLeetCode Problem #23\nTitle: Merge k Sorted Lists\nDescription:\nYou are given an array of k linked-lists lists, each linked-list is sorted in ascending order. \nExample 23: \nLeetCode Problem #24\nTitle: Swap Nodes in Pairs\nDescription:\nGiven a linked list, swap every two adjacent nodes and return its head. You must solve the problem without modifying the values in the list's nodes (i. e. , only nodes themselves may be changed. )...\n\nExample 24: \nLeetCode Problem #25\nTitle: Reverse Nodes in k-Group\nDescription:\nGiven the head of a linked list, reverse the nodes of the list k at a time, and return the modified list. \nExample 25: \nLeetCode Problem #26\nTitle: Remove Duplicates from Sorted Array\nDescription:\nGiven an integer array nums sorted in non-decreasing order, remove the duplicates in-place such that each unique element appears only once. The relative order of the elements should be kept the same. Then return the number of unique elements in nums. \nExample 26: \nLeetCode Problem #27\nTitle: Remove Element\nDescription:\nGiven an integer array nums and an integer val, remove all occurrences of val in nums in-place. The order of the elements may be changed. Then return the number of elements in nums which are not equal to val. \nExample 27: \nLeetCode Problem #28\nTitle: Find the Index of the First Occurrence in a String\nDescription:\nGiven two strings needle and haystack, return the index of the first occurrence of needle in haystack, or -1 if needle is not part of haystack. \nExample 28: \nLeetCode Problem #29\nTitle: Divide Two Integers\nDescription:\nGiven two integers dividend and divisor, divide two integers without using multiplication, division, and mod operator. \nExample 29: \nLeetCode Problem #30\nTitle: Substring with Concatenation of All Words\nDescription:\nYou are given a string s and an array of strings words. All the strings of words are of the same length. \nExample 30: \nLeetCode Problem #31\nTitle: Next Permutation\nDescription:\nA permutation of an array of integers is an arrangement of its members into a sequence or linear order. \nExample 31: \nLeetCode Problem #32\nTitle: Longest Valid Parentheses\nDescription:\nGiven a string containing just the characters '(' and ')', return the length of the longest valid (well-formed) parentheses substring. \nExample 32: \nLeetCode Problem #33\nTitle: Search in Rotated Sorted Array\nDescription:\nThere is an integer array nums sorted in ascending order (with distinct values). \nExample 33: \nLeetCode Problem #34\nTitle: Find First and Last Position of Element in Sorted Array\nDescription:\nGiven an array of integers nums sorted in non-decreasing order, find the starting and ending position of a given target value. \nExample 34: \nLeetCode Problem #35\nTitle: Search Insert Position\nDescription:\nGiven a sorted array of distinct integers and a target value, return the index if the target is found. If not, return the index where it would be if it were inserted in order. \nExample 35: \nLeetCode Problem #36\nTitle: Valid Sudoku\nDescription:\nDetermine if a 9 x 9 Sudoku board is valid. Only the filled cells need to be validated according to the following rules :...\n\nExample 36: \nLeetCode Problem #37\nTitle: Sudoku Solver\nDescription:\nWrite a program to solve a Sudoku puzzle by filling the empty cells. \nExample 37: \nLeetCode Problem #38\nTitle: Count and Say\nDescription:\nThe count-and-say sequence is a sequence of digit strings defined by the recursive formula:...\n\nExample 38: \nLeetCode Problem #39\nTitle: Combination Sum\nDescription:\nGiven an array of distinct integers candidates and a target integer target, return a list of all unique combinations of candidates where the chosen numbers sum to target. You may return the combinations in any order. \nExample 39: \nLeetCode Problem #40\nTitle: Combination Sum II\nDescription:\nGiven a collection of candidate numbers ( candidates ) and a target number ( target ), find all unique combinations in candidates where the candidate numbers sum to target. \nExample 40: \nLeetCode Problem #41\nTitle: First Missing Positive\nDescription:\nGiven an unsorted integer array nums, return the smallest missing positive integer. ", "iloc": 21, "frontend_question_id": 42.0, "n_pass": 1, "response": "Example 21: \nLeetCode Problem #22\nTitle: Generate Parentheses\nDescription:\nGiven n pairs of parentheses, write a function to generate all combinations of well-formed parentheses.\nExample 22: \nLeetCode Problem #23\nTitle: Merge k Sorted Lists\nDescription:\nYou are given an array of k linked-lists lists, each linked-list is sorted in ascending order.\n\nMerge all the linked-lists into one sorted linked-list and return it.\nExample 23: \nLeetCode Problem #24\nTitle: Swap Nodes in Pairs\nDescription:\nGiven a linked list, swap every two adjacent nodes and return its head.\nExample 24: \nLeetCode Problem #25\nTitle: Reverse Nodes in k-Group\nDescription:\nGiven a linked list, reverse the nodes of a linked list k at a time and return its modified list.\nExample 25: \nLeetCode Problem #26\nTitle: Remove Duplicates from Sorted Array\nDescription:\nGiven a sorted array nums, remove the duplicates in-place such that each element appears only once and returns the new length.\nExample 26: \nLeetCode Problem #27\nTitle: Remove Element\nDescription:\nGiven an array nums and a value val, remove all instances of that value in-place and return the new length.\nExample 27: \nLeetCode Problem #28\nTitle: Implement strStr()\nDescription:\nImplement the strStr() function.\n\nReturn the index of the first occurrence of needle in haystack, or -1 if needle is not part of haystack.\nExample 28: \nLeetCode Problem #29\nTitle: Divide Two Integers\nDescription:\nGiven two integers dividend and divisor, divide two integers without using multiplication, division, and mod operator.\nExample 29: \nLeetCode Problem #30\nTitle: Substring with Concatenation of All Words\nDescription:\nYou are given a string s and an array of strings words of the same length. Return all starting indices of substring(s) in s that is a concatenation of each word in words exactly once, in any order.\nExample 30: \nLeetCode Problem #31\nTitle: Next Permutation\nDescription:\nImplement next permutation, which rearranges numbers into the lexicographically next greater permutation of numbers.\nExample 31: \nLeetCode Problem #32\nTitle: Longest Valid Parentheses\nDescription:\nGiven a string containing just the characters '(' and ')', find the length of the longest valid (well-formed) parentheses substring.\nExample 32: \nLeetCode Problem #33\nTitle: Search in Rotated Sorted Array\nDescription:\nYou are given an integer array nums sorted in ascending order (with distinct values), and an integer target.\nExample 33: \nLeetCode Problem #34\nTitle: Find First and Last Position of Element in Sorted Array\nDescription:\nGiven an array of integers nums sorted in ascending order, find the starting and ending position of a given target value.\nExample 34: \nLeetCode Problem #35\nTitle: Search Insert Position\nDescription:\nGiven a sorted array of distinct integers and a target value, return the index if the target is found. If not, return the index where it would be if it were inserted in order.\nExample 35: \nLeetCode Problem #36\nTitle: Valid Sudoku\nDescription:\nDetermine if a 9 x 9 Sudoku board is valid. Only the filled cells need to be validated according to the following rules:\nExample 36: \nLeetCode Problem #37\nTitle: Sudoku Solver\nDescription:\nWrite a program to solve a Sudoku puzzle by filling the empty cells.\nExample 37: \nLeetCode Problem #38\nTitle: Count and Say\nDescription:\nThe count-and-say sequence is a sequence of digit strings defined by the recursive formula\nExample 38: \nLeetCode Problem #39\nTitle: Combination Sum\nDescription:\nGiven an array of distinct integers candidates and a target integer target, return a list of all unique combinations of candidates where the chosen numbers sum to target.\nExample 39: \nLeetCode Problem #40\nTitle: Combination Sum II\nDescription:\nGiven a collection of candidate numbers (candidates) and a target number (target), find all unique combinations in candidates where the candidate numbers sum to target.\nExample 40: \nLeetCode Problem #41\nTitle: First Missing Positive\nDescription:\nGiven an unsorted integer array nums, find the smallest missing positive integer.\nExample 41: \nLeetCode Problem #42\nTitle: Trapping Rain Water\nDescription:\nGiven n non-negative integers representing an elevation map where the width of each bar is 1, compute how much water it can trap after raining.\nExample 42: \nLeetCode Problem #43\nTitle: Multiply Strings\nDescription:\nGiven two non-negative integers num1 and num2 represented as strings, return the product of num1 and num2, also represented as a string.\nExample 43: \nLeetCode Problem #44\nTitle: Wildcard Matching\nDescription:\nGiven an input string (s) and a pattern (p), implement wildcard pattern matching with support for '?' and '*' where:\nExample 44: \nLeetCode Problem #45\nTitle: Jump Game II\nDescription:\nGiven an array of non-negative integers nums, you are initially positioned at the first index of the array.\nExample 45: \nLeetCode Problem #46\nTitle: Permutations\nDescription:\nGiven an array nums of distinct integers, return all the possible permutations. You can return the answer in any order.\nExample 46: \nLeetCode Problem #47\nTitle: Permutations II\nDescription:\nGiven a collection of numbers, nums, that might contain duplicates, return all possible unique permutations in any order.\nExample 47: \nLeetCode Problem #48\nTitle: Rotate Image\nDescription:\nYou are given an n x n 2D matrix representing an image, rotate the image by 90 degrees (clockwise).\nExample 48: \nLeetCode Problem #49\nTitle: Group Anagrams\nDescription:\nGiven an array of strings strs, group the anagrams together. You can return the answer in any order.\nExample 49: \nLeetCode Problem #50\nTitle: Pow(x, n)\nDescription:\nImplement pow(x, n), which calculates x raised to the power n (i.e., xn).", "cleaned_response": " \nGenerate Parentheses\n\nGiven n pairs of parentheses, write a function to generate all combinations of well-formed parentheses.\n \nMerge k Sorted Lists\n\nYou are given an array of k linked-lists lists, each linked-list is sorted in ascending order.\n\nMerge all the linked-lists into one sorted linked-list and return it.\n \nSwap Nodes in Pairs\n\nGiven a linked list, swap every two adjacent nodes and return its head.\n \nReverse Nodes in k-Group\n\nGiven a linked list, reverse the nodes of a linked list k at a time and return its modified list.\n \nRemove Duplicates from Sorted Array\n\nGiven a sorted array nums, remove the duplicates in-place such that each element appears only once and returns the new length.\n \nRemove Element\n\nGiven an array nums and a value val, remove all instances of that value in-place and return the new length.\n \nImplement strStr()\n\nImplement the strStr() function.\n\nReturn the index of the first occurrence of needle in haystack, or -1 if needle is not part of haystack.\n \nDivide Two Integers\n\nGiven two integers dividend and divisor, divide two integers without using multiplication, division, and mod operator.\n \nSubstring with Concatenation of All Words\n\nYou are given a string s and an array of strings words of the same length. Return all starting indices of substring(s) in s that is a concatenation of each word in words exactly once, in any order.\n \nNext Permutation\n\nImplement next permutation, which rearranges numbers into the lexicographically next greater permutation of numbers.\n \nLongest Valid Parentheses\n\nGiven a string containing just the characters '(' and ')', find the length of the longest valid (well-formed) parentheses substring.\n \nSearch in Rotated Sorted Array\n\nYou are given an integer array nums sorted in ascending order (with distinct values), and an integer target.\n \nFind First and Last Position of Element in Sorted Array\n\nGiven an array of integers nums sorted in ascending order, find the starting and ending position of a given target value.\n \nSearch Insert Position\n\nGiven a sorted array of distinct integers and a target value, return the index if the target is found. If not, return the index where it would be if it were inserted in order.\n \nValid Sudoku\n\nDetermine if a 9 x 9 Sudoku board is valid. Only the filled cells need to be validated according to the following rules:\n \nSudoku Solver\n\nWrite a program to solve a Sudoku puzzle by filling the empty cells.\n \nCount and Say\n\nThe count-and-say sequence is a sequence of digit strings defined by the recursive formula\n \nCombination Sum\n\nGiven an array of distinct integers candidates and a target integer target, return a list of all unique combinations of candidates where the chosen numbers sum to target.\n \nCombination Sum II\n\nGiven a collection of candidate numbers (candidates) and a target number (target), find all unique combinations in candidates where the candidate numbers sum to target.\n \nFirst Missing Positive\n\nGiven an unsorted integer array nums, find the smallest missing positive integer.\n \nTrapping Rain Water\n\nGiven n non-negative integers representing an elevation map where the width of each bar is 1, compute how much water it can trap after raining.\n \nMultiply Strings\n\nGiven two non-negative integers num1 and num2 represented as strings, return the product of num1 and num2, also represented as a string.\n \nWildcard Matching\n\nGiven an input string (s) and a pattern (p), implement wildcard pattern matching with support for '?' and '*' where:\n \nJump Game II\n\nGiven an array of non-negative integers nums, you are initially positioned at the first index of the array.\n \nPermutations\n\nGiven an array nums of distinct integers, return all the possible permutations. You can return the answer in any order.\n \nPermutations II\n\nGiven a collection of numbers, nums, that might contain duplicates, return all possible unique permutations in any order.\n \nRotate Image\n\nYou are given an n x n 2D matrix representing an image, rotate the image by 90 degrees (clockwise).\n \nGroup Anagrams\n\nGiven an array of strings strs, group the anagrams together. You can return the answer in any order.\n \nPow(x, n)\n\nImplement pow(x, n), which calculates x raised to the power n (i.e., xn).", "similarity": 0.9754002444436825}
{"input_context": "Example 1: \nLeetCode Problem #42\nTitle: Trapping Rain Water\nDescription:\nGiven n non-negative integers representing an elevation map where the width of each bar is 1, compute how much water it can trap after raining. \nExample 2: \nLeetCode Problem #43\nTitle: Multiply Strings\nDescription:\nGiven two non-negative integers num1 and num2 represented as strings, return the product of num1 and num2, also represented as a string. \nExample 3: \nLeetCode Problem #44\nTitle: Wildcard Matching\nDescription:\nGiven an input string ( s ) and a pattern ( p ), implement wildcard pattern matching with support for '?' and '*' where:...\n\nExample 4: \nLeetCode Problem #45\nTitle: Jump Game II\nDescription:\nYou are given a 0-indexed array of integers nums of length n. You are initially positioned at nums[0]. \nExample 5: \nLeetCode Problem #46\nTitle: Permutations\nDescription:\nGiven an array nums of distinct integers, return all the possible permutations. You can return the answer in any order. \nExample 6: \nLeetCode Problem #47\nTitle: Permutations II\nDescription:\nGiven a collection of numbers, nums, that might contain duplicates, return all possible unique permutations in any order. \nExample 7: \nLeetCode Problem #48\nTitle: Rotate Image\nDescription:\nYou are given an n x n 2D matrix representing an image, rotate the image by 90 degrees (clockwise). \nExample 8: \nLeetCode Problem #49\nTitle: Group Anagrams\nDescription:\nGiven an array of strings strs, group the anagrams together. You can return the answer in any order. \nExample 9: \nLeetCode Problem #50\nTitle: Pow(x, n)\nDescription:\nImplement pow(x, n), which calculates x raised to the power n (i. e. , x n ). \nExample 10: \nLeetCode Problem #51\nTitle: N-Queens\nDescription:\nThe n-queens puzzle is the problem of placing n queens on an n x n chessboard such that no two queens attack each other. \nExample 11: \nLeetCode Problem #52\nTitle: N-Queens II\nDescription:\nThe n-queens puzzle is the problem of placing n queens on an n x n chessboard such that no two queens attack each other. \nExample 12: \nLeetCode Problem #53\nTitle: Maximum Subarray\nDescription:\nGiven an integer array nums, find the subarray with the largest sum, and return its sum. \nExample 13: \nLeetCode Problem #54\nTitle: Spiral Matrix\nDescription:\nGiven an m x n matrix, return all elements of the matrix in spiral order. \nExample 14: \nLeetCode Problem #55\nTitle: Jump Game\nDescription:\nYou are given an integer array nums. You are initially positioned at the array's first index, and each element in the array represents your maximum jump length at that position. \nExample 15: \nLeetCode Problem #56\nTitle: Merge Intervals\nDescription:\nGiven an array of intervals where intervals[i] = [start i, end i ], merge all overlapping intervals, and return an array of the non-overlapping intervals that cover all the intervals in the input. \nExample 16: \nLeetCode Problem #57\nTitle: Insert Interval\nDescription:\nYou are given an array of non-overlapping intervals intervals where intervals[i] = [start i, end i ] represent the start and the end of the i th interval and intervals is sorted in ascending order by start i. You are also given an interval newInterval = [start, end] that represents the start and end of another interval. \nExample 17: \nLeetCode Problem #58\nTitle: Length of Last Word\nDescription:\nGiven a string s consisting of words and spaces, return the length of the last word in the string. \nExample 18: \nLeetCode Problem #59\nTitle: Spiral Matrix II\nDescription:\nGiven a positive integer n, generate an n x n matrix filled with elements from 1 to n 2 in spiral order. \nExample 19: \nLeetCode Problem #60\nTitle: Permutation Sequence\nDescription:\nThe set [1, 2, 3,. . . , n] contains a total of n! unique permutations. \nExample 20: \nLeetCode Problem #61\nTitle: Rotate List\nDescription:\nGiven the head of a linked list, rotate the list to the right by k places. ", "expected_response": "Example 21: \nLeetCode Problem #62\nTitle: Unique Paths\nDescription:\nThere is a robot on an m x n grid. The robot is initially located at the top-left corner (i. e. , grid[0][0] ). The robot tries to move to the bottom-right corner (i. e. , grid[m - 1][n - 1] ). The robot can only move either down or right at any point in time. \nExample 22: \nLeetCode Problem #63\nTitle: Unique Paths II\nDescription:\nYou are given an m x n integer array grid. There is a robot initially located at the top-left corner (i. e. , grid[0][0] ). The robot tries to move to the bottom-right corner (i. e. , grid[m - 1][n - 1] ). The robot can only move either down or right at any point in time. \nExample 23: \nLeetCode Problem #64\nTitle: Minimum Path Sum\nDescription:\nGiven a m x n grid filled with non-negative numbers, find a path from top left to bottom right, which minimizes the sum of all numbers along its path. \nExample 24: \nLeetCode Problem #65\nTitle: Valid Number\nDescription:\nA valid number can be split up into these components (in order):...\n\nExample 25: \nLeetCode Problem #66\nTitle: Plus One\nDescription:\nYou are given a large integer represented as an integer array digits, where each digits[i] is the i th digit of the integer. The digits are ordered from most significant to least significant in left-to-right order. The large integer does not contain any leading 0 's. \nExample 26: \nLeetCode Problem #67\nTitle: Add Binary\nDescription:\nGiven two binary strings a and b, return their sum as a binary string. \nExample 27: \nLeetCode Problem #68\nTitle: Text Justification\nDescription:\nGiven an array of strings words and a width maxWidth, format the text such that each line has exactly maxWidth characters and is fully (left and right) justified. \nExample 28: \nLeetCode Problem #69\nTitle: Sqrt(x)\nDescription:\nGiven a non-negative integer x, return the square root of x rounded down to the nearest integer. The returned integer should be non-negative as well. \nExample 29: \nLeetCode Problem #70\nTitle: Climbing Stairs\nDescription:\nYou are climbing a staircase. It takes n steps to reach the top. \nExample 30: \nLeetCode Problem #71\nTitle: Simplify Path\nDescription:\nGiven a string path, which is an absolute path (starting with a slash '/' ) to a file or directory in a Unix-style file system, convert it to the simplified canonical path. \nExample 31: \nLeetCode Problem #72\nTitle: Edit Distance\nDescription:\nGiven two strings word1 and word2, return the minimum number of operations required to convert word1 to word2. \nExample 32: \nLeetCode Problem #73\nTitle: Set Matrix Zeroes\nDescription:\nGiven an m x n integer matrix matrix, if an element is 0, set its entire row and column to 0 's. \nExample 33: \nLeetCode Problem #74\nTitle: Search a 2D Matrix\nDescription:\nYou are given an m x n integer matrix matrix with the following two properties:...\n\nExample 34: \nLeetCode Problem #75\nTitle: Sort Colors\nDescription:\nGiven an array nums with n objects colored red, white, or blue, sort them in-place so that objects of the same color are adjacent, with the colors in the order red, white, and blue. \nExample 35: \nLeetCode Problem #76\nTitle: Minimum Window Substring\nDescription:\nGiven two strings s and t of lengths m and n respectively, return the minimum window substring of s such that every character in t ( including duplicates ) is included in the window. If there is no such substring, return the empty string \"\". \nExample 36: \nLeetCode Problem #77\nTitle: Combinations\nDescription:\nGiven two integers n and k, return all possible combinations of k numbers chosen from the range [1, n]. \nExample 37: \nLeetCode Problem #78\nTitle: Subsets\nDescription:\nGiven an integer array nums of unique elements, return all possible subsets (the power set). \nExample 38: \nLeetCode Problem #79\nTitle: Word Search\nDescription:\nGiven an m x n grid of characters board and a string word, return true if word exists in the grid. \nExample 39: \nLeetCode Problem #80\nTitle: Remove Duplicates from Sorted Array II\nDescription:\nGiven an integer array nums sorted in non-decreasing order, remove some duplicates in-place such that each unique element appears at most twice. The relative order of the elements should be kept the same. \nExample 40: \nLeetCode Problem #81\nTitle: Search in Rotated Sorted Array II\nDescription:\nThere is an integer array nums sorted in non-decreasing order (not necessarily with distinct values). ", "iloc": 61, "frontend_question_id": 82.0, "n_pass": 1, "response": "Example 21: \nLeetCode Problem #62\nTitle: Unique Paths\nDescription:\nA robot is located at the top-left corner of a m x n grid. The robot can only move either down or right at any point in time. The robot is trying to reach the bottom-right corner of the grid. \nExample 22: \nLeetCode Problem #63\nTitle: Unique Paths II\nDescription:\nA robot is located at the top-left corner of a m x n grid (marked 'Start' in the diagram below). The robot can only move either down or right at any point in time. The robot is trying to reach the bottom-right corner of the grid (marked 'Finish' in the diagram below). \nExample 23: \nLeetCode Problem #64\nTitle: Minimum Path Sum\nDescription:\nGiven a m x n grid filled with non-negative numbers, find a path from top left to bottom right, which minimizes the sum of all numbers along its path. \nExample 24: \nLeetCode Problem #65\nTitle: Valid Number\nDescription:\nA valid number can be split up into these components (in order): \nExample 25: \nLeetCode Problem #66\nTitle: Plus One\nDescription:\nGiven a non-empty array of decimal digits representing a non-negative integer, increment one to the integer. \nExample 26: \nLeetCode Problem #67\nTitle: Add Binary\nDescription:\nGiven two binary strings a and b, return their sum as a binary string. \nExample 27: \nLeetCode Problem #68\nTitle: Text Justification\nDescription:\nGiven an array of strings words and a width maxWidth, format the text such that each line has exactly maxWidth characters and is fully (left and right) justified. \nExample 28: \nLeetCode Problem #69\nTitle: Sqrt(x)\nDescription:\nGiven a non-negative integer x, compute and return the square root of x. \nExample 29: \nLeetCode Problem #70\nTitle: Climbing Stairs\nDescription:\nYou are climbing a staircase. It takes n steps to reach the top. \nExample 30: \nLeetCode Problem #71\nTitle: Simplify Path\nDescription:\nGiven a string path, which is an absolute path (starting with a slash '/') to a file or directory in a Unix-style file system, convert it to the simplified canonical path. \nExample 31: \nLeetCode Problem #72\nTitle: Edit Distance\nDescription:\nGiven two strings word1 and word2, return the minimum number of operations required to convert word1 to word2. \nExample 32: \nLeetCode Problem #73\nTitle: Set Matrix Zeroes\nDescription:\nGiven an m x n matrix. If an element is 0, set its entire row and column to 0. Do it in-place. \nExample 33: \nLeetCode Problem #74\nTitle: Search a 2D Matrix\nDescription:\nWrite an efficient algorithm that searches for a value in an m x n matrix. This matrix has the following properties: \nExample 34: \nLeetCode Problem #75\nTitle: Sort Colors\nDescription:\nGiven an array nums with n objects colored red, white, or blue, sort them in-place so that objects of the same color are adjacent, with the colors in the order red, white, and blue. \nExample 35: \nLeetCode Problem #76\nTitle: Minimum Window Substring\nDescription:\nGiven two strings s and t, return the minimum window in s which will contain all the characters in t. If there is no such window in s that covers all characters in t, return the empty string \"\". \nExample 36: \nLeetCode Problem #77\nTitle: Combinations\nDescription:\nGiven two integers n and k, return all possible combinations of k numbers out of the range [1, n]. \nExample 37: \nLeetCode Problem #78\nTitle: Subsets\nDescription:\nGiven an integer array nums of unique elements, return all possible subsets (the power set). \nExample 38: \nLeetCode Problem #79\nTitle: Word Search\nDescription:\nGiven an m x n grid of characters board and a string word, return true if word exists in the grid. \nExample 39: \nLeetCode Problem #80\nTitle: Remove Duplicates from Sorted Array II\nDescription:\nGiven a sorted array nums, remove the duplicates in-place such that duplicates appeared at most twice and return the new length. \nExample 40: \nLeetCode Problem #81\nTitle: Search in Rotated Sorted Array II\nDescription:\nThere is an integer array nums sorted in non-decreasing order (not necessarily with distinct values). \nExample 41: \nLeetCode Problem #82\nTitle: Remove Duplicates from Sorted List II\nDescription:\nGiven the head of a sorted linked list, delete all nodes that have duplicate numbers, leaving only distinct numbers from the original list. \nExample 42: \nLeetCode Problem #83\nTitle: Delete Node in a Linked List\nDescription:\nWrite a function to delete a node in a singly-linked list. You will not be given access to the head of the list, instead, you will be given access to the node to be deleted directly. \nExample 43: \nLeetCode Problem #84\nTitle: Largest Rectangle in Histogram\nDescription:\nGiven an array of integers heights representing the histogram's bar height where the width of each bar is 1, return the area of the largest rectangle in the histogram. \nExample 44: \nLeetCode Problem #85\nTitle: Maximal Rectangle\nDescription:\nGiven a rows x cols binary matrix filled with 0's and 1's, find the largest rectangle containing only 1's and return its area. \nExample 45: \nLeetCode Problem #86\nTitle: Partition List\nDescription:\nGiven the head of a linked list and a value x, partition it such that all nodes less than x come before nodes greater than or equal to x. \nExample 46: \nLeetCode Problem #87\nTitle: Scramble String\nDescription:\nWe can scramble a string s to get a string t using the following algorithm: \nExample 47: \nLeetCode Problem #88\nTitle: Merge Sorted Array\nDescription:\nGiven two sorted integer arrays nums1 and nums2, merge nums2 into nums1 as one sorted array. \nExample 48: \nLeetCode Problem #89\nTitle: Gray Code\nDescription:\nThe gray code is a binary numeral system where two successive values differ in only one bit. \nExample 49: \nLeetCode Problem #90\nTitle: Subsets II\nDescription:\nGiven an integer array nums that may contain duplicates, return all possible subsets (the power set). \nExample 50: \nLeetCode Problem #91\nTitle: Decode Ways\nDescription:\nA message containing letters from A-Z can be encoded into numbers using the following mapping: \nExample 51: \nLeetCode Problem #92\nTitle: Reverse Linked List II\nDescription:\nGiven the head of a singly linked list and two integers left and right where left <= right, reverse the nodes of the list from position left to position right, and return the reversed list. \nExample 52: \nLeetCode Problem #93\nTitle: Restore IP Addresses\nDescription:\nGiven a string s containing only digits, return all possible valid IP addresses that can be obtained from s. You can return them in any order. \nExample 53: \nLeetCode Problem #94\nTitle: Binary Tree Inorder Traversal\nDescription:\nGiven the root of a binary tree, return the inorder traversal of its nodes' values. \nExample 54: \nLeetCode Problem #95\nTitle: Unique Binary Search Trees II\nDescription:\nGiven an integer n, return all the structurally unique BST's (binary search trees), which has exactly n nodes of unique values from 1 to n.", "cleaned_response": " \nUnique Paths\n\nA robot is located at the top-left corner of a m x n grid. The robot can only move either down or right at any point in time. The robot is trying to reach the bottom-right corner of the grid. \n \nUnique Paths II\n\nA robot is located at the top-left corner of a m x n grid (marked 'Start' in the diagram below). The robot can only move either down or right at any point in time. The robot is trying to reach the bottom-right corner of the grid (marked 'Finish' in the diagram below). \n \nMinimum Path Sum\n\nGiven a m x n grid filled with non-negative numbers, find a path from top left to bottom right, which minimizes the sum of all numbers along its path. \n \nValid Number\n\nA valid number can be split up into these components (in order): \n \nPlus One\n\nGiven a non-empty array of decimal digits representing a non-negative integer, increment one to the integer. \n \nAdd Binary\n\nGiven two binary strings a and b, return their sum as a binary string. \n \nText Justification\n\nGiven an array of strings words and a width maxWidth, format the text such that each line has exactly maxWidth characters and is fully (left and right) justified. \n \nSqrt(x)\n\nGiven a non-negative integer x, compute and return the square root of x. \n \nClimbing Stairs\n\nYou are climbing a staircase. It takes n steps to reach the top. \n \nSimplify Path\n\nGiven a string path, which is an absolute path (starting with a slash '/') to a file or directory in a Unix-style file system, convert it to the simplified canonical path. \n \nEdit Distance\n\nGiven two strings word1 and word2, return the minimum number of operations required to convert word1 to word2. \n \nSet Matrix Zeroes\n\nGiven an m x n matrix. If an element is 0, set its entire row and column to 0. Do it in-place. \n \nSearch a 2D Matrix\n\nWrite an efficient algorithm that searches for a value in an m x n matrix. This matrix has the following properties: \n \nSort Colors\n\nGiven an array nums with n objects colored red, white, or blue, sort them in-place so that objects of the same color are adjacent, with the colors in the order red, white, and blue. \n \nMinimum Window Substring\n\nGiven two strings s and t, return the minimum window in s which will contain all the characters in t. If there is no such window in s that covers all characters in t, return the empty string \"\". \n \nCombinations\n\nGiven two integers n and k, return all possible combinations of k numbers out of the range [1, n]. \n \nSubsets\n\nGiven an integer array nums of unique elements, return all possible subsets (the power set). \n \nWord Search\n\nGiven an m x n grid of characters board and a string word, return true if word exists in the grid. \n \nRemove Duplicates from Sorted Array II\n\nGiven a sorted array nums, remove the duplicates in-place such that duplicates appeared at most twice and return the new length. \n \nSearch in Rotated Sorted Array II\n\nThere is an integer array nums sorted in non-decreasing order (not necessarily with distinct values). \n \nRemove Duplicates from Sorted List II\n\nGiven the head of a sorted linked list, delete all nodes that have duplicate numbers, leaving only distinct numbers from the original list. \n \nDelete Node in a Linked List\n\nWrite a function to delete a node in a singly-linked list. You will not be given access to the head of the list, instead, you will be given access to the node to be deleted directly. \n \nLargest Rectangle in Histogram\n\nGiven an array of integers heights representing the histogram's bar height where the width of each bar is 1, return the area of the largest rectangle in the histogram. \n \nMaximal Rectangle\n\nGiven a rows x cols binary matrix filled with 0's and 1's, find the largest rectangle containing only 1's and return its area. \n \nPartition List\n\nGiven the head of a linked list and a value x, partition it such that all nodes less than x come before nodes greater than or equal to x. \n \nScramble String\n\nWe can scramble a string s to get a string t using the following algorithm: \n \nMerge Sorted Array\n\nGiven two sorted integer arrays nums1 and nums2, merge nums2 into nums1 as one sorted array. \n \nGray Code\n\nThe gray code is a binary numeral system where two successive values differ in only one bit. \n \nSubsets II\n\nGiven an integer array nums that may contain duplicates, return all possible subsets (the power set). \n \nDecode Ways\n\nA message containing letters from A-Z can be encoded into numbers using the following mapping: \n \nReverse Linked List II\n\nGiven the head of a singly linked list and two integers left and right where left <= right, reverse the nodes of the list from position left to position right, and return the reversed list. \n \nRestore IP Addresses\n\nGiven a string s containing only digits, return all possible valid IP addresses that can be obtained from s. You can return them in any order. \n \nBinary Tree Inorder Traversal\n\nGiven the root of a binary tree, return the inorder traversal of its nodes' values. \n \nUnique Binary Search Trees II\n\nGiven an integer n, return all the structurally unique BST's (binary search trees), which has exactly n nodes of unique values from 1 to n.", "similarity": 0.9664473546626162}
{"input_context": "Example 1: \nLeetCode Problem #82\nTitle: Remove Duplicates from Sorted List II\nDescription:\nGiven the head of a sorted linked list, delete all nodes that have duplicate numbers, leaving only distinct numbers from the original list. Return the linked list sorted as well. \nExample 2: \nLeetCode Problem #83\nTitle: Remove Duplicates from Sorted List\nDescription:\nGiven the head of a sorted linked list, delete all duplicates such that each element appears only once. Return the linked list sorted as well. \nExample 3: \nLeetCode Problem #84\nTitle: Largest Rectangle in Histogram\nDescription:\nGiven an array of integers heights representing the histogram's bar height where the width of each bar is 1, return the area of the largest rectangle in the histogram. \nExample 4: \nLeetCode Problem #85\nTitle: Maximal Rectangle\nDescription:\nGiven a rows x cols binary matrix filled with 0 's and 1 's, find the largest rectangle containing only 1 's and return its area. \nExample 5: \nLeetCode Problem #86\nTitle: Partition List\nDescription:\nGiven the head of a linked list and a value x, partition it such that all nodes less than x come before nodes greater than or equal to x. \nExample 6: \nLeetCode Problem #87\nTitle: Scramble String\nDescription:\nWe can scramble a string s to get a string t using the following algorithm:...\n\nExample 7: \nLeetCode Problem #88\nTitle: Merge Sorted Array\nDescription:\nYou are given two integer arrays nums1 and nums2, sorted in non-decreasing order, and two integers m and n, representing the number of elements in nums1 and nums2 respectively. \nExample 8: \nLeetCode Problem #89\nTitle: Gray Code\nDescription:\nAn n-bit gray code sequence is a sequence of 2 n integers where:...\n\nExample 9: \nLeetCode Problem #90\nTitle: Subsets II\nDescription:\nGiven an integer array nums that may contain duplicates, return all possible subsets (the power set). \nExample 10: \nLeetCode Problem #91\nTitle: Decode Ways\nDescription:\nA message containing letters from A-Z can be encoded into numbers using the following mapping:...\n\nExample 11: \nLeetCode Problem #92\nTitle: Reverse Linked List II\nDescription:\nGiven the head of a singly linked list and two integers left and right where left <= right, reverse the nodes of the list from position left to position right, and return the reversed list. \nExample 12: \nLeetCode Problem #93\nTitle: Restore IP Addresses\nDescription:\nA valid IP address consists of exactly four integers separated by single dots. Each integer is between 0 and 255 ( inclusive ) and cannot have leading zeros. \nExample 13: \nLeetCode Problem #94\nTitle: Binary Tree Inorder Traversal\nDescription:\nGiven the root of a binary tree, return the inorder traversal of its nodes' values. \nExample 14: \nLeetCode Problem #95\nTitle: Unique Binary Search Trees II\nDescription:\nGiven an integer n, return all the structurally unique BST' s (binary search trees), which has exactly n nodes of unique values from 1 to n. Return the answer in any order. \nExample 15: \nLeetCode Problem #96\nTitle: Unique Binary Search Trees\nDescription:\nGiven an integer n, return the number of structurally unique BST' s (binary search trees) which has exactly n nodes of unique values from 1 to n. \nExample 16: \nLeetCode Problem #97\nTitle: Interleaving String\nDescription:\nGiven strings s1, s2, and s3, find whether s3 is formed by an interleaving of s1 and s2. \nExample 17: \nLeetCode Problem #98\nTitle: Validate Binary Search Tree\nDescription:\nGiven the root of a binary tree, determine if it is a valid binary search tree (BST). \nExample 18: \nLeetCode Problem #99\nTitle: Recover Binary Search Tree\nDescription:\nYou are given the root of a binary search tree (BST), where the values of exactly two nodes of the tree were swapped by mistake. Recover the tree without changing its structure. \nExample 19: \nLeetCode Problem #100\nTitle: Same Tree\nDescription:\nGiven the roots of two binary trees p and q, write a function to check if they are the same or not. \nExample 20: \nLeetCode Problem #101\nTitle: Symmetric Tree\nDescription:\nGiven the root of a binary tree, check whether it is a mirror of itself (i. e. , symmetric around its center). ", "expected_response": "Example 21: \nLeetCode Problem #102\nTitle: Binary Tree Level Order Traversal\nDescription:\nGiven the root of a binary tree, return the level order traversal of its nodes' values. (i. e. , from left to right, level by level). \nExample 22: \nLeetCode Problem #103\nTitle: Binary Tree Zigzag Level Order Traversal\nDescription:\nGiven the root of a binary tree, return the zigzag level order traversal of its nodes' values. (i. e. , from left to right, then right to left for the next level and alternate between). \nExample 23: \nLeetCode Problem #104\nTitle: Maximum Depth of Binary Tree\nDescription:\nGiven the root of a binary tree, return its maximum depth. \nExample 24: \nLeetCode Problem #105\nTitle: Construct Binary Tree from Preorder and Inorder Traversal\nDescription:\nGiven two integer arrays preorder and inorder where preorder is the preorder traversal of a binary tree and inorder is the inorder traversal of the same tree, construct and return the binary tree. \nExample 25: \nLeetCode Problem #106\nTitle: Construct Binary Tree from Inorder and Postorder Traversal\nDescription:\nGiven two integer arrays inorder and postorder where inorder is the inorder traversal of a binary tree and postorder is the postorder traversal of the same tree, construct and return the binary tree. \nExample 26: \nLeetCode Problem #107\nTitle: Binary Tree Level Order Traversal II\nDescription:\nGiven the root of a binary tree, return the bottom-up level order traversal of its nodes' values. (i. e. , from left to right, level by level from leaf to root). \nExample 27: \nLeetCode Problem #108\nTitle: Convert Sorted Array to Binary Search Tree\nDescription:\nGiven an integer array nums where the elements are sorted in ascending order, convert it to a height-balanced binary search tree. \nExample 28: \nLeetCode Problem #109\nTitle: Convert Sorted List to Binary Search Tree\nDescription:\nGiven the head of a singly linked list where elements are sorted in ascending order, convert it to a height-balanced binary search tree. \nExample 29: \nLeetCode Problem #110\nTitle: Balanced Binary Tree\nDescription:\nGiven a binary tree, determine if it is height-balanced. \nExample 30: \nLeetCode Problem #111\nTitle: Minimum Depth of Binary Tree\nDescription:\nGiven a binary tree, find its minimum depth. \nExample 31: \nLeetCode Problem #112\nTitle: Path Sum\nDescription:\nGiven the root of a binary tree and an integer targetSum, return true if the tree has a root-to-leaf path such that adding up all the values along the path equals targetSum. \nExample 32: \nLeetCode Problem #113\nTitle: Path Sum II\nDescription:\nGiven the root of a binary tree and an integer targetSum, return all root-to-leaf paths where the sum of the node values in the path equals targetSum. Each path should be returned as a list of the node values, not node references. \nExample 33: \nLeetCode Problem #114\nTitle: Flatten Binary Tree to Linked List\nDescription:\nGiven the root of a binary tree, flatten the tree into a \"linked list\":...\n\nExample 34: \nLeetCode Problem #115\nTitle: Distinct Subsequences\nDescription:\nGiven two strings s and t, return the number of distinct subsequences of s which equals t. \nExample 35: \nLeetCode Problem #116\nTitle: Populating Next Right Pointers in Each Node\nDescription:\nYou are given a perfect binary tree where all leaves are on the same level, and every parent has two children. The binary tree has the following definition:...\n\nExample 36: \nLeetCode Problem #117\nTitle: Populating Next Right Pointers in Each Node II\nDescription:\nGiven a binary tree...\n\nExample 37: \nLeetCode Problem #118\nTitle: Pascal's Triangle\nDescription:\nGiven an integer numRows, return the first numRows of Pascal's triangle. \nExample 38: \nLeetCode Problem #119\nTitle: Pascal's Triangle II\nDescription:\nGiven an integer rowIndex, return the rowIndex th ( 0-indexed ) row of the Pascal's triangle. \nExample 39: \nLeetCode Problem #120\nTitle: Triangle\nDescription:\nGiven a triangle array, return the minimum path sum from top to bottom. \nExample 40: \nLeetCode Problem #121\nTitle: Best Time to Buy and Sell Stock\nDescription:\nYou are given an array prices where prices[i] is the price of a given stock on the i th day. ", "iloc": 101, "frontend_question_id": 122.0, "n_pass": 1, "response": "Example 21: \nLeetCode Problem #102\nTitle: Binary Tree Level Order Traversal\nDescription:\nGiven the root of a binary tree, return the level order traversal of its nodes' values. \n\nExample 22: \nLeetCode Problem #103\nTitle: Binary Tree Zigzag Level Order Traversal\nDescription:\nGiven the root of a binary tree, return the zigzag level order traversal of its nodes' values. \n\nExample 23: \nLeetCode Problem #104\nTitle: Maximum Depth of Binary Tree\nDescription:\nGiven the root of a binary tree, return its maximum depth. \n\nExample 24: \nLeetCode Problem #105\nTitle: Construct Binary Tree from Preorder and Inorder Traversal\nDescription:\nGiven two integer arrays preorder and inorder where preorder is the preorder traversal of a binary tree and inorder is the inorder traversal of the same tree, construct and return the binary tree. \n\nExample 25: \nLeetCode Problem #106\nTitle: Construct Binary Tree from Inorder and Postorder Traversal\nDescription:\nGiven two integer arrays inorder and postorder where inorder is the inorder traversal of a binary tree and postorder is the postorder traversal of the same tree, construct and return the binary tree. \n\nExample 26: \nLeetCode Problem #107\nTitle: Binary Tree Level Order Traversal II\nDescription:\nGiven the root of a binary tree, return the bottom-up level order traversal of its nodes' values. \n\nExample 27: \nLeetCode Problem #108\nTitle: Convert Sorted Array to Binary Search Tree\nDescription:\nGiven an integer array nums where the elements are sorted in ascending order, convert it to a height-balanced binary search tree. \n\nExample 28: \nLeetCode Problem #109\nTitle: Convert Sorted List to Binary Search Tree\nDescription:\nGiven the head of a singly linked list where elements are sorted in ascending order, convert it to a height balanced BST. \n\nExample 29: \nLeetCode Problem #110\nTitle: Balanced Binary Tree\nDescription:\nGiven the root of a binary tree, determine if it is height-balanced. \n\nExample 30: \nLeetCode Problem #111\nTitle: Minimum Depth of Binary Tree\nDescription:\nGiven a binary tree, find its minimum depth. \n\nExample 31: \nLeetCode Problem #112\nTitle: Path Sum\nDescription:\nGiven the root of a binary tree and an integer targetSum, return true if the tree has a root-to-leaf path such that adding up all the values along the path equals targetSum. \n\nExample 32: \nLeetCode Problem #113\nTitle: Path Sum II\nDescription:\nGiven the root of a binary tree and an integer targetSum, return all root-to-leaf paths where each path's sum equals targetSum. \n\nExample 33: \nLeetCode Problem #114\nTitle: Flatten Binary Tree to Linked List\nDescription:\nGiven the root of a binary tree, flatten the tree into a \"linked list\": \n\nExample 34: \nLeetCode Problem #115\nTitle: Distinct Subsequences\nDescription:\nGiven two strings s and t, return the number of distinct subsequences of s which equals t. \n\nExample 35: \nLeetCode Problem #116\nTitle: Populating Next Right Pointers in Each Node\nDescription:\nYou are given a perfect binary tree where all leaves are on the same level, and every parent has two children. The binary tree has the following definition: \n\nExample 36: \nLeetCode Problem #117\nTitle: Populating Next Right Pointers in Each Node II\nDescription:\nYou are given a binary tree where all the rightmost nodes are either leaf nodes with siblings ( a left sibling that shares the same parent node. \n\nExample 37: \nLeetCode Problem #118\nTitle: Pascal's Triangle\nDescription:\nGiven an integer numRows, return the first numRows of Pascal's triangle. \n\nExample 38: \nLeetCode Problem #119\nTitle: Pascal's Triangle II\nDescription:\nGiven an integer rowIndex, return the rowIndexth (0-indexed) row of the Pascal's triangle. \n\nExample 39: \nLeetCode Problem #120\nTitle: Triangle\nDescription:\nGiven a triangle array, return the minimum path sum from top to bottom. \n\nExample 40: \nLeetCode Problem #121\nTitle: Best Time to Buy and Sell Stock\nDescription:\nYou are given an array prices where prices[ i] is the price of a given stock on the ith day. \n\nExample 41: \nLeetCode Problem #122\nTitle: Best Time to Buy and Sell Stock II\nDescription:\nYou are given an integer array prices where prices[i] is the price of a given stock on the ith day. \n\nExample 42: \nLeetCode Problem #123\nTitle: Best Time to Buy and Sell Stock III\nDescription:\nYou are given an integer array prices where prices[i] is the price of a given stock on the ith day. \n\nExample 43: \nLeetCode Problem #124\nTitle: Binary Tree Maximum Path Sum\nDescription:\nGiven a non-empty binary tree, find the maximum path sum. \n\nExample 44: \nLeetCode Problem #125\nTitle: Valid Palindrome\nDescription:\nGiven a string s, determine if it is a palindrome, considering only alphanumeric characters and ignoring cases. \n\nExample 45: \nLeetCode Problem #126\nTitle: Word Ladder II\nDescription:\nGiven two words beginWord and endWord, and a dictionary wordList, return all the shortest transformation sequences from beginWord to endWord, or an empty list if no such sequence exists. \n\nExample 46: \nLeetCode Problem #127\nTitle: Word Ladder\nDescription:\nGiven two words beginWord and endWord, and a dictionary wordList, return the length of the shortest transformation sequence from beginWord to endWord. \n\nExample 47: \nLeetCode Problem #128\nTitle: Longest Consecutive Sequence\nDescription:\nGiven an unsorted array of integers nums, return the length of the longest consecutive elements sequence. \n\nExample 48: \nLeetCode Problem #129\nTitle: Sum Root to Leaf Numbers\nDescription:\nGiven the root of a binary tree containing digits from 0-9 only, each root-to-leaf path could represent a number. \n\nExample 49: \nLeetCode Problem #130\nTitle: Surrounded Regions\nDescription:\nGiven an m x n matrix board containing 'X' and 'O', capture all regions that are 4-directionally surrounded by 'X'. \n\nExample 50: \nLeetCode Problem #131\nTitle: Palindrome Partitioning\nDescription:\nGiven a string s, partition s such that every substring of the partition is a palindrome. \n\nExample 51: \nLeetCode Problem #132\nTitle: Palindrome Partitioning II\nDescription:\nGiven a string s, partition s such that every substring of the partition is a palindrome. \n\nExample 52: \nLeetCode Problem #133\nTitle: Clone Graph\nDescription:\nGiven a reference of a node in a connected undirected graph, return a deep copy (clone) of the graph. \n\nExample 53: \nLeetCode Problem #134\nTitle: Gas Station\nDescription:\nThere are n gas stations along a circular route, where the amount of gas at the ith station is gas[i]. \n\nExample 54: \nLeetCode Problem #135\nTitle: Candy\nDescription:\nThere are n children standing in a line. Each child is assigned a rating value given in the integer array ratings. \n\nExample 55: \nLeetCode Problem #136\nTitle: Single Number\nDescription:\nGiven a non-empty array of integers nums, every element appears twice except for one. Find that single one.", "cleaned_response": " \nBinary Tree Level Order Traversal\n\nGiven the root of a binary tree, return the level order traversal of its nodes' values. \n\n \nBinary Tree Zigzag Level Order Traversal\n\nGiven the root of a binary tree, return the zigzag level order traversal of its nodes' values. \n\n \nMaximum Depth of Binary Tree\n\nGiven the root of a binary tree, return its maximum depth. \n\n \nConstruct Binary Tree from Preorder and Inorder Traversal\n\nGiven two integer arrays preorder and inorder where preorder is the preorder traversal of a binary tree and inorder is the inorder traversal of the same tree, construct and return the binary tree. \n\n \nConstruct Binary Tree from Inorder and Postorder Traversal\n\nGiven two integer arrays inorder and postorder where inorder is the inorder traversal of a binary tree and postorder is the postorder traversal of the same tree, construct and return the binary tree. \n\n \nBinary Tree Level Order Traversal II\n\nGiven the root of a binary tree, return the bottom-up level order traversal of its nodes' values. \n\n \nConvert Sorted Array to Binary Search Tree\n\nGiven an integer array nums where the elements are sorted in ascending order, convert it to a height-balanced binary search tree. \n\n \nConvert Sorted List to Binary Search Tree\n\nGiven the head of a singly linked list where elements are sorted in ascending order, convert it to a height balanced BST. \n\n \nBalanced Binary Tree\n\nGiven the root of a binary tree, determine if it is height-balanced. \n\n \nMinimum Depth of Binary Tree\n\nGiven a binary tree, find its minimum depth. \n\n \nPath Sum\n\nGiven the root of a binary tree and an integer targetSum, return true if the tree has a root-to-leaf path such that adding up all the values along the path equals targetSum. \n\n \nPath Sum II\n\nGiven the root of a binary tree and an integer targetSum, return all root-to-leaf paths where each path's sum equals targetSum. \n\n \nFlatten Binary Tree to Linked List\n\nGiven the root of a binary tree, flatten the tree into a \"linked list\": \n\n \nDistinct Subsequences\n\nGiven two strings s and t, return the number of distinct subsequences of s which equals t. \n\n \nPopulating Next Right Pointers in Each Node\n\nYou are given a perfect binary tree where all leaves are on the same level, and every parent has two children. The binary tree has the following definition: \n\n \nPopulating Next Right Pointers in Each Node II\n\nYou are given a binary tree where all the rightmost nodes are either leaf nodes with siblings ( a left sibling that shares the same parent node. \n\n \nPascal's Triangle\n\nGiven an integer numRows, return the first numRows of Pascal's triangle. \n\n \nPascal's Triangle II\n\nGiven an integer rowIndex, return the rowIndexth (0-indexed) row of the Pascal's triangle. \n\n \nTriangle\n\nGiven a triangle array, return the minimum path sum from top to bottom. \n\n \nBest Time to Buy and Sell Stock\n\nYou are given an array prices where prices[ i] is the price of a given stock on the ith day. \n\n \nBest Time to Buy and Sell Stock II\n\nYou are given an integer array prices where prices[i] is the price of a given stock on the ith day. \n\n \nBest Time to Buy and Sell Stock III\n\nYou are given an integer array prices where prices[i] is the price of a given stock on the ith day. \n\n \nBinary Tree Maximum Path Sum\n\nGiven a non-empty binary tree, find the maximum path sum. \n\n \nValid Palindrome\n\nGiven a string s, determine if it is a palindrome, considering only alphanumeric characters and ignoring cases. \n\n \nWord Ladder II\n\nGiven two words beginWord and endWord, and a dictionary wordList, return all the shortest transformation sequences from beginWord to endWord, or an empty list if no such sequence exists. \n\n \nWord Ladder\n\nGiven two words beginWord and endWord, and a dictionary wordList, return the length of the shortest transformation sequence from beginWord to endWord. \n\n \nLongest Consecutive Sequence\n\nGiven an unsorted array of integers nums, return the length of the longest consecutive elements sequence. \n\n \nSum Root to Leaf Numbers\n\nGiven the root of a binary tree containing digits from 0-9 only, each root-to-leaf path could represent a number. \n\n \nSurrounded Regions\n\nGiven an m x n matrix board containing 'X' and 'O', capture all regions that are 4-directionally surrounded by 'X'. \n\n \nPalindrome Partitioning\n\nGiven a string s, partition s such that every substring of the partition is a palindrome. \n\n \nPalindrome Partitioning II\n\nGiven a string s, partition s such that every substring of the partition is a palindrome. \n\n \nClone Graph\n\nGiven a reference of a node in a connected undirected graph, return a deep copy (clone) of the graph. \n\n \nGas Station\n\nThere are n gas stations along a circular route, where the amount of gas at the ith station is gas[i]. \n\n \nCandy\n\nThere are n children standing in a line. Each child is assigned a rating value given in the integer array ratings. \n\n \nSingle Number\n\nGiven a non-empty array of integers nums, every element appears twice except for one. Find that single one.", "similarity": 0.9755429005253795}
{"input_context": "Example 1: \nLeetCode Problem #122\nTitle: Best Time to Buy and Sell Stock II\nDescription:\nYou are given an integer array prices where prices[i] is the price of a given stock on the i th day. \nExample 2: \nLeetCode Problem #123\nTitle: Best Time to Buy and Sell Stock III\nDescription:\nYou are given an array prices where prices[i] is the price of a given stock on the i th day. \nExample 3: \nLeetCode Problem #124\nTitle: Binary Tree Maximum Path Sum\nDescription:\nA path in a binary tree is a sequence of nodes where each pair of adjacent nodes in the sequence has an edge connecting them. A node can only appear in the sequence at most once. Note that the path does not need to pass through the root. \nExample 4: \nLeetCode Problem #125\nTitle: Valid Palindrome\nDescription:\nA phrase is a palindrome if, after converting all uppercase letters into lowercase letters and removing all non-alphanumeric characters, it reads the same forward and backward. Alphanumeric characters include letters and numbers. \nExample 5: \nLeetCode Problem #126\nTitle: Word Ladder II\nDescription:\nA transformation sequence from word beginWord to word endWord using a dictionary wordList is a sequence of words beginWord -> s 1 -> s 2 ->. . . -> s k such that:...\n\nExample 6: \nLeetCode Problem #127\nTitle: Word Ladder\nDescription:\nA transformation sequence from word beginWord to word endWord using a dictionary wordList is a sequence of words beginWord -> s 1 -> s 2 ->. . . -> s k such that:...\n\nExample 7: \nLeetCode Problem #128\nTitle: Longest Consecutive Sequence\nDescription:\nGiven an unsorted array of integers nums, return the length of the longest consecutive elements sequence. \nExample 8: \nLeetCode Problem #129\nTitle: Sum Root to Leaf Numbers\nDescription:\nYou are given the root of a binary tree containing digits from 0 to 9 only. \nExample 9: \nLeetCode Problem #130\nTitle: Surrounded Regions\nDescription:\nGiven an m x n matrix board containing 'X' and 'O', capture all regions that are 4-directionally surrounded by 'X'. \nExample 10: \nLeetCode Problem #131\nTitle: Palindrome Partitioning\nDescription:\nGiven a string s, partition s such that every substring of the partition is a palindrome. Return all possible palindrome partitioning of s. \nExample 11: \nLeetCode Problem #132\nTitle: Palindrome Partitioning II\nDescription:\nGiven a string s, partition s such that every substring of the partition is a palindrome. \nExample 12: \nLeetCode Problem #133\nTitle: Clone Graph\nDescription:\nGiven a reference of a node in a connected undirected graph. \nExample 13: \nLeetCode Problem #134\nTitle: Gas Station\nDescription:\nThere are n gas stations along a circular route, where the amount of gas at the i th station is gas[i]. \nExample 14: \nLeetCode Problem #135\nTitle: Candy\nDescription:\nThere are n children standing in a line. Each child is assigned a rating value given in the integer array ratings. \nExample 15: \nLeetCode Problem #136\nTitle: Single Number\nDescription:\nGiven a non-empty array of integers nums, every element appears twice except for one. Find that single one. \nExample 16: \nLeetCode Problem #137\nTitle: Single Number II\nDescription:\nGiven an integer array nums where every element appears three times except for one, which appears exactly once. Find the single element and return it. \nExample 17: \nLeetCode Problem #138\nTitle: Copy List with Random Pointer\nDescription:\nA linked list of length n is given such that each node contains an additional random pointer, which could point to any node in the list, or null. \nExample 18: \nLeetCode Problem #139\nTitle: Word Break\nDescription:\nGiven a string s and a dictionary of strings wordDict, return true if s can be segmented into a space-separated sequence of one or more dictionary words. \nExample 19: \nLeetCode Problem #140\nTitle: Word Break II\nDescription:\nGiven a string s and a dictionary of strings wordDict, add spaces in s to construct a sentence where each word is a valid dictionary word. Return all such possible sentences in any order. \nExample 20: \nLeetCode Problem #141\nTitle: Linked List Cycle\nDescription:\nGiven head, the head of a linked list, determine if the linked list has a cycle in it. ", "expected_response": "Example 21: \nLeetCode Problem #142\nTitle: Linked List Cycle II\nDescription:\nGiven the head of a linked list, return the node where the cycle begins. If there is no cycle, return null. \nExample 22: \nLeetCode Problem #143\nTitle: Reorder List\nDescription:\nYou are given the head of a singly linked-list. The list can be represented as:...\n\nExample 23: \nLeetCode Problem #144\nTitle: Binary Tree Preorder Traversal\nDescription:\nGiven the root of a binary tree, return the preorder traversal of its nodes' values. \nExample 24: \nLeetCode Problem #145\nTitle: Binary Tree Postorder Traversal\nDescription:\nGiven the root of a binary tree, return the postorder traversal of its nodes' values. \nExample 25: \nLeetCode Problem #146\nTitle: LRU Cache\nDescription:\nDesign a data structure that follows the constraints of a Least Recently Used (LRU) cache. \nExample 26: \nLeetCode Problem #147\nTitle: Insertion Sort List\nDescription:\nGiven the head of a singly linked list, sort the list using insertion sort, and return the sorted list's head. \nExample 27: \nLeetCode Problem #148\nTitle: Sort List\nDescription:\nGiven the head of a linked list, return the list after sorting it in ascending order. \nExample 28: \nLeetCode Problem #149\nTitle: Max Points on a Line\nDescription:\nGiven an array of points where points[i] = [x i, y i ] represents a point on the X-Y plane, return the maximum number of points that lie on the same straight line. \nExample 29: \nLeetCode Problem #150\nTitle: Evaluate Reverse Polish Notation\nDescription:\nYou are given an array of strings tokens that represents an arithmetic expression in a Reverse Polish Notation. \nExample 30: \nLeetCode Problem #151\nTitle: Reverse Words in a String\nDescription:\nGiven an input string s, reverse the order of the words. \nExample 31: \nLeetCode Problem #152\nTitle: Maximum Product Subarray\nDescription:\nGiven an integer array nums, find a subarray that has the largest product, and return the product. \nExample 32: \nLeetCode Problem #153\nTitle: Find Minimum in Rotated Sorted Array\nDescription:\nSuppose an array of length n sorted in ascending order is rotated between 1 and n times. For example, the array nums = [0, 1, 2, 4, 5, 6, 7] might become:...\n\nExample 33: \nLeetCode Problem #154\nTitle: Find Minimum in Rotated Sorted Array II\nDescription:\nSuppose an array of length n sorted in ascending order is rotated between 1 and n times. For example, the array nums = [0, 1, 4, 4, 5, 6, 7] might become:...\n\nExample 34: \nLeetCode Problem #155\nTitle: Min Stack\nDescription:\nDesign a stack that supports push, pop, top, and retrieving the minimum element in constant time. \nExample 35: \nLeetCode Problem #160\nTitle: Intersection of Two Linked Lists\nDescription:\nGiven the heads of two singly linked-lists headA and headB, return the node at which the two lists intersect. If the two linked lists have no intersection at all, return null. \nExample 36: \nLeetCode Problem #162\nTitle: Find Peak Element\nDescription:\nA peak element is an element that is strictly greater than its neighbors. \nExample 37: \nLeetCode Problem #164\nTitle: Maximum Gap\nDescription:\nGiven an integer array nums, return the maximum difference between two successive elements in its sorted form. If the array contains less than two elements, return 0. \nExample 38: \nLeetCode Problem #165\nTitle: Compare Version Numbers\nDescription:\nGiven two version numbers, version1 and version2, compare them. \nExample 39: \nLeetCode Problem #166\nTitle: Fraction to Recurring Decimal\nDescription:\nGiven two integers representing the numerator and denominator of a fraction, return the fraction in string format. \nExample 40: \nLeetCode Problem #167\nTitle: Two Sum II - Input Array Is Sorted\nDescription:\nGiven a 1-indexed array of integers numbers that is already sorted in non-decreasing order, find two numbers such that they add up to a specific target number. Let these two numbers be numbers[index 1 ] and numbers[index 2 ] where 1 <= index 1 < index 2 < numbers.length. ", "iloc": 141, "frontend_question_id": 168.0, "n_pass": 1, "response": "Example 21: \nLeetCode Problem #142\nTitle: Linked List Cycle II\nDescription:\nGiven a linked list, return the node where the cycle begins. If there is no cycle, return null.\n\nExample 22: \nLeetCode Problem #143\nTitle: Reorder List\nDescription:\nGiven a singly linked list L: L 0 \u2192 L 1 \u2192. . . \u2192 L n -1 \u2192 L n, reorder it to: L 0 \u2192 L n \u2192 L 1 \u2192 L n-1 \u2192 L 2 \u2192 L n-2 \u2192 . . .\n\nExample 23: \nLeetCode Problem #144\nTitle: Binary Tree Preorder Traversal\nDescription:\nGiven the root of a binary tree, return the preorder traversal of its nodes' values.\n\nExample 24: \nLeetCode Problem #145\nTitle: Binary Tree Postorder Traversal\nDescription:\nGiven the root of a binary tree, return the postorder traversal of its nodes' values.\n\nExample 25: \nLeetCode Problem #146\nTitle: LRU Cache\nDescription:\nDesign a data structure that follows the constraints of a Least Recently Used (LRU) cache.\n\nExample 26: \nLeetCode Problem #147\nTitle: Insertion Sort List\nDescription:\nSort a linked list using insertion sort.\n\nExample 27: \nLeetCode Problem #148\nTitle: Sort List\nDescription:\nGiven the head of a linked list, return the list after sorting it in ascending order.\n\nExample 28: \nLeetCode Problem #149\nTitle: Max Points on a Line\nDescription:\nGiven an array of points where points[i] = [x i, y i], return the maximum number of points that lie on the same straight line.\n\nExample 29: \nLeetCode Problem #150\nTitle: Evaluate Reverse Polish Notation\nDescription:\nEvaluate the value of an arithmetic expression in Reverse Polish Notation.\n\nExample 30: \nLeetCode Problem #151\nTitle: Reverse Words in a String\nDescription:\nGiven an input string s, reverse the order of the words.\n\nExample 31: \nLeetCode Problem #152\nTitle: Maximum Product Subarray\nDescription:\nGiven an integer array nums, find a contiguous non-empty subarray within the array that has the largest product.\n\nExample 32: \nLeetCode Problem #153\nTitle: Find Minimum in Rotated Sorted Array\nDescription:\nSuppose an array of length n sorted in ascending order is rotated between 1 and n times. Return the minimum element of this array.\n\nExample 33: \nLeetCode Problem #154\nTitle: Find Minimum in Rotated Sorted Array II\nDescription:\nSuppose an array of length n sorted in ascending order is rotated between 1 and n times. Return the minimum element of this array.\n\nExample 34: \nLeetCode Problem #155\nTitle: Min Stack\nDescription:\nDesign a stack that supports push, pop, top, and retrieving the minimum element in constant time.\n\nExample 35: \nLeetCode Problem #156\nTitle: Binary Tree Upside Down\nDescription:\nGiven the root of a binary tree, turn the tree upside down and return the new root.\n\nExample 36: \nLeetCode Problem #157\nTitle: Read N Characters Given Read4\nDescription:\nGiven a file and assume that you can only read the file using a given method read4, implement a method to read n characters.\n\nExample 37: \nLeetCode Problem #158\nTitle: Read N Characters Given Read4 II - Call multiple times\nDescription:\nGiven a file and assume that you can only read the file using a given method read4, implement a method to read n characters.\n\nExample 38: \nLeetCode Problem #159\nTitle: Longest Substring with At Most Two Distinct Characters\nDescription:\nGiven a string s, find the length of the longest substring t that contains at most 2 distinct characters.\n\nExample 39: \nLeetCode Problem #160\nTitle: Intersection of Two Linked Lists\nDescription:\nWrite a program to find the node at which the intersection of two singly linked lists begins.\n\nExample 40: \nLeetCode Problem #161\nTitle: One Edit Distance\nDescription:\nGiven two strings s and t, return true if they are both one edit distance apart, otherwise return false.\n\nExample 41: \nLeetCode Problem #162\nTitle: Find Peak Element\nDescription:\nA peak element is an element that is strictly greater than its neighbors. Given an integer array nums, find a peak element, and return its index.\n\nExample 42: \nLeetCode Problem #163\nTitle: Missing Ranges\nDescription:\nYou are given an inclusive range [lower, upper] and a sorted unique integer array nums, where all elements are in the inclusive range. A number x is considered missing if x is in the range [lower, upper] and x is not in nums.\n\nExample 43: \nLeetCode Problem #164\nTitle: Maximum Gap\nDescription:\nGiven an unsorted array, find the maximum difference between the successive elements in its sorted form.\n\nExample 44: \nLeetCode Problem #165\nTitle: Compare Version Numbers\nDescription:\nCompare two version numbers version1 and version2.\n\nExample 45: \nLeetCode Problem #166\nTitle: Fraction to Recurring Decimal\nDescription:\nGiven two integers representing the numerator and denominator of a fraction, return the fraction in string format.\n\nExample 46: \nLeetCode Problem #167\nTitle: Two Sum II - Input array is sorted\nDescription:\nGiven an array of integers numbers that is already sorted in non-decreasing order, find two numbers such that they add up to a specific target number.\n\nExample 47: \nLeetCode Problem #168\nTitle: Excel Sheet Column Title\nDescription:\nGiven an integer columnNumber, return its corresponding column title as it appears in an Excel sheet.\n\nExample 48: \nLeetCode Problem #169\nTitle: Majority Element\nDescription:\nGiven an array nums of size n, return the majority element.\n\nExample 49: \nLeetCode Problem #170\nTitle: Two Sum III - Data structure design\nDescription:\nDesign a data structure that accepts a stream of integers and checks if it has a pair of integers that sum up to a particular value.\n\nExample 50: \nLeetCode Problem #171\nTitle: Excel Sheet Column Number\nDescription:\nGiven a string columnTitle that represents the column title as appear in an Excel sheet, return its corresponding column number.", "cleaned_response": " \nLinked List Cycle II\n\nGiven a linked list, return the node where the cycle begins. If there is no cycle, return null.\n\n \nReorder List\n\nGiven a singly linked list L: L 0 \u2192 L 1 \u2192. . . \u2192 L n -1 \u2192 L n, reorder it to: L 0 \u2192 L n \u2192 L 1 \u2192 L n-1 \u2192 L 2 \u2192 L n-2 \u2192 . . .\n\n \nBinary Tree Preorder Traversal\n\nGiven the root of a binary tree, return the preorder traversal of its nodes' values.\n\n \nBinary Tree Postorder Traversal\n\nGiven the root of a binary tree, return the postorder traversal of its nodes' values.\n\n \nLRU Cache\n\nDesign a data structure that follows the constraints of a Least Recently Used (LRU) cache.\n\n \nInsertion Sort List\n\nSort a linked list using insertion sort.\n\n \nSort List\n\nGiven the head of a linked list, return the list after sorting it in ascending order.\n\n \nMax Points on a Line\n\nGiven an array of points where points[i] = [x i, y i], return the maximum number of points that lie on the same straight line.\n\n \nEvaluate Reverse Polish Notation\n\nEvaluate the value of an arithmetic expression in Reverse Polish Notation.\n\n \nReverse Words in a String\n\nGiven an input string s, reverse the order of the words.\n\n \nMaximum Product Subarray\n\nGiven an integer array nums, find a contiguous non-empty subarray within the array that has the largest product.\n\n \nFind Minimum in Rotated Sorted Array\n\nSuppose an array of length n sorted in ascending order is rotated between 1 and n times. Return the minimum element of this array.\n\n \nFind Minimum in Rotated Sorted Array II\n\nSuppose an array of length n sorted in ascending order is rotated between 1 and n times. Return the minimum element of this array.\n\n \nMin Stack\n\nDesign a stack that supports push, pop, top, and retrieving the minimum element in constant time.\n\n \nBinary Tree Upside Down\n\nGiven the root of a binary tree, turn the tree upside down and return the new root.\n\n \nRead N Characters Given Read4\n\nGiven a file and assume that you can only read the file using a given method read4, implement a method to read n characters.\n\n \nRead N Characters Given Read4 II - Call multiple times\n\nGiven a file and assume that you can only read the file using a given method read4, implement a method to read n characters.\n\n \nLongest Substring with At Most Two Distinct Characters\n\nGiven a string s, find the length of the longest substring t that contains at most 2 distinct characters.\n\n \nIntersection of Two Linked Lists\n\nWrite a program to find the node at which the intersection of two singly linked lists begins.\n\n \nOne Edit Distance\n\nGiven two strings s and t, return true if they are both one edit distance apart, otherwise return false.\n\n \nFind Peak Element\n\nA peak element is an element that is strictly greater than its neighbors. Given an integer array nums, find a peak element, and return its index.\n\n \nMissing Ranges\n\nYou are given an inclusive range [lower, upper] and a sorted unique integer array nums, where all elements are in the inclusive range. A number x is considered missing if x is in the range [lower, upper] and x is not in nums.\n\n \nMaximum Gap\n\nGiven an unsorted array, find the maximum difference between the successive elements in its sorted form.\n\n \nCompare Version Numbers\n\nCompare two version numbers version1 and version2.\n\n \nFraction to Recurring Decimal\n\nGiven two integers representing the numerator and denominator of a fraction, return the fraction in string format.\n\n \nTwo Sum II - Input array is sorted\n\nGiven an array of integers numbers that is already sorted in non-decreasing order, find two numbers such that they add up to a specific target number.\n\n \nExcel Sheet Column Title\n\nGiven an integer columnNumber, return its corresponding column title as it appears in an Excel sheet.\n\n \nMajority Element\n\nGiven an array nums of size n, return the majority element.\n\n \nTwo Sum III - Data structure design\n\nDesign a data structure that accepts a stream of integers and checks if it has a pair of integers that sum up to a particular value.\n\n \nExcel Sheet Column Number\n\nGiven a string columnTitle that represents the column title as appear in an Excel sheet, return its corresponding column number.", "similarity": 0.9729345367832809}
{"input_context": "Example 1: \nLeetCode Problem #168\nTitle: Excel Sheet Column Title\nDescription:\nGiven an integer columnNumber, return its corresponding column title as it appears in an Excel sheet. \nExample 2: \nLeetCode Problem #169\nTitle: Majority Element\nDescription:\nGiven an array nums of size n, return the majority element. \nExample 3: \nLeetCode Problem #171\nTitle: Excel Sheet Column Number\nDescription:\nGiven a string columnTitle that represents the column title as appears in an Excel sheet, return its corresponding column number. \nExample 4: \nLeetCode Problem #172\nTitle: Factorial Trailing Zeroes\nDescription:\nGiven an integer n, return the number of trailing zeroes in n!. \nExample 5: \nLeetCode Problem #173\nTitle: Binary Search Tree Iterator\nDescription:\nImplement the BSTIterator class that represents an iterator over the in-order traversal of a binary search tree (BST):...\n\nExample 6: \nLeetCode Problem #174\nTitle: Dungeon Game\nDescription:\nThe demons had captured the princess and imprisoned her in the bottom-right corner of a dungeon. The dungeon consists of m x n rooms laid out in a 2D grid. Our valiant knight was initially positioned in the top-left room and must fight his way through dungeon to rescue the princess. \nExample 7: \nLeetCode Problem #179\nTitle: Largest Number\nDescription:\nGiven a list of non-negative integers nums, arrange them such that they form the largest number and return it. \nExample 8: \nLeetCode Problem #187\nTitle: Repeated DNA Sequences\nDescription:\nThe DNA sequence is composed of a series of nucleotides abbreviated as 'A', 'C', 'G', and 'T'. \nExample 9: \nLeetCode Problem #188\nTitle: Best Time to Buy and Sell Stock IV\nDescription:\nYou are given an integer array prices where prices[i] is the price of a given stock on the i th day, and an integer k. \nExample 10: \nLeetCode Problem #189\nTitle: Rotate Array\nDescription:\nGiven an integer array nums, rotate the array to the right by k steps, where k is non-negative. \nExample 11: \nLeetCode Problem #190\nTitle: Reverse Bits\nDescription:\nReverse bits of a given 32 bits unsigned integer. \nExample 12: \nLeetCode Problem #191\nTitle: Number of 1 Bits\nDescription:\nWrite a function that takes the binary representation of an unsigned integer and returns the number of '1' bits it has (also known as the Hamming weight ). \nExample 13: \nLeetCode Problem #198\nTitle: House Robber\nDescription:\nYou are a professional robber planning to rob houses along a street. Each house has a certain amount of money stashed, the only constraint stopping you from robbing each of them is that adjacent houses have security systems connected and it will automatically contact the police if two adjacent houses were broken into on the same night. \nExample 14: \nLeetCode Problem #199\nTitle: Binary Tree Right Side View\nDescription:\nGiven the root of a binary tree, imagine yourself standing on the right side of it, return the values of the nodes you can see ordered from top to bottom. \nExample 15: \nLeetCode Problem #200\nTitle: Number of Islands\nDescription:\nGiven an m x n 2D binary grid grid which represents a map of '1' s (land) and '0' s (water), return the number of islands. \nExample 16: \nLeetCode Problem #201\nTitle: Bitwise AND of Numbers Range\nDescription:\nGiven two integers left and right that represent the range [left, right], return the bitwise AND of all numbers in this range, inclusive. \nExample 17: \nLeetCode Problem #202\nTitle: Happy Number\nDescription:\nWrite an algorithm to determine if a number n is happy. \nExample 18: \nLeetCode Problem #203\nTitle: Remove Linked List Elements\nDescription:\nGiven the head of a linked list and an integer val, remove all the nodes of the linked list that has Node. val == val, and return the new head. \nExample 19: \nLeetCode Problem #204\nTitle: Count Primes\nDescription:\nGiven an integer n, return the number of prime numbers that are strictly less than n. \nExample 20: \nLeetCode Problem #205\nTitle: Isomorphic Strings\nDescription:\nGiven two strings s and t, determine if they are isomorphic. ", "expected_response": "Example 21: \nLeetCode Problem #206\nTitle: Reverse Linked List\nDescription:\nGiven the head of a singly linked list, reverse the list, and return the reversed list. \nExample 22: \nLeetCode Problem #207\nTitle: Course Schedule\nDescription:\nThere are a total of numCourses courses you have to take, labeled from 0 to numCourses - 1. You are given an array prerequisites where prerequisites[i] = [a i, b i ] indicates that you must take course b i first if you want to take course a i. \nExample 23: \nLeetCode Problem #208\nTitle: Implement Trie (Prefix Tree)\nDescription:\nA trie (pronounced as \"try\") or prefix tree is a tree data structure used to efficiently store and retrieve keys in a dataset of strings. There are various applications of this data structure, such as autocomplete and spellchecker. \nExample 24: \nLeetCode Problem #209\nTitle: Minimum Size Subarray Sum\nDescription:\nGiven an array of positive integers nums and a positive integer target, return the minimal length of a subarray whose sum is greater than or equal to target. If there is no such subarray, return 0 instead. \nExample 25: \nLeetCode Problem #210\nTitle: Course Schedule II\nDescription:\nThere are a total of numCourses courses you have to take, labeled from 0 to numCourses - 1. You are given an array prerequisites where prerequisites[i] = [a i, b i ] indicates that you must take course b i first if you want to take course a i. \nExample 26: \nLeetCode Problem #211\nTitle: Design Add and Search Words Data Structure\nDescription:\nDesign a data structure that supports adding new words and finding if a string matches any previously added string. \nExample 27: \nLeetCode Problem #212\nTitle: Word Search II\nDescription:\nGiven an m x n board of characters and a list of strings words, return all words on the board. \nExample 28: \nLeetCode Problem #213\nTitle: House Robber II\nDescription:\nYou are a professional robber planning to rob houses along a street. Each house has a certain amount of money stashed. All houses at this place are arranged in a circle. That means the first house is the neighbor of the last one. Meanwhile, adjacent houses have a security system connected, and it will automatically contact the police if two adjacent houses were broken into on the same night. \nExample 29: \nLeetCode Problem #214\nTitle: Shortest Palindrome\nDescription:\nYou are given a string s. You can convert s to a palindrome by adding characters in front of it. \nExample 30: \nLeetCode Problem #215\nTitle: Kth Largest Element in an Array\nDescription:\nGiven an integer array nums and an integer k, return the k th largest element in the array. \nExample 31: \nLeetCode Problem #216\nTitle: Combination Sum III\nDescription:\nFind all valid combinations of k numbers that sum up to n such that the following conditions are true:...\n\nExample 32: \nLeetCode Problem #217\nTitle: Contains Duplicate\nDescription:\nGiven an integer array nums, return true if any value appears at least twice in the array, and return false if every element is distinct. \nExample 33: \nLeetCode Problem #218\nTitle: The Skyline Problem\nDescription:\nA city's skyline is the outer contour of the silhouette formed by all the buildings in that city when viewed from a distance. Given the locations and heights of all the buildings, return the skyline formed by these buildings collectively. \nExample 34: \nLeetCode Problem #219\nTitle: Contains Duplicate II\nDescription:\nGiven an integer array nums and an integer k, return true if there are two distinct indices i and j in the array such that nums[i] == nums[j] and abs(i - j) <= k. \nExample 35: \nLeetCode Problem #220\nTitle: Contains Duplicate III\nDescription:\nYou are given an integer array nums and two integers indexDiff and valueDiff. \nExample 36: \nLeetCode Problem #221\nTitle: Maximal Square\nDescription:\nGiven an m x n binary matrix filled with 0 's and 1 's, find the largest square containing only 1 's and return its area. \nExample 37: \nLeetCode Problem #222\nTitle: Count Complete Tree Nodes\nDescription:\nGiven the root of a complete binary tree, return the number of the nodes in the tree. \nExample 38: \nLeetCode Problem #223\nTitle: Rectangle Area\nDescription:\nGiven the coordinates of two rectilinear rectangles in a 2D plane, return the total area covered by the two rectangles. \nExample 39: \nLeetCode Problem #224\nTitle: Basic Calculator\nDescription:\nGiven a string s representing a valid expression, implement a basic calculator to evaluate it, and return the result of the evaluation. \nExample 40: \nLeetCode Problem #225\nTitle: Implement Stack using Queues\nDescription:\nImplement a last-in-first-out (LIFO) stack using only two queues. The implemented stack should support all the functions of a normal stack ( push, top, pop, and empty ). ", "iloc": 181, "frontend_question_id": 226.0, "n_pass": 1, "response": "Example 21: \nLeetCode Problem #206\nTitle: Reverse Linked List\nDescription:\nReverse a singly linked list. \nExample 22: \nLeetCode Problem #207\nTitle: Course Schedule\nDescription:\nThere are a total of numCourses courses you have to take, labeled from 0 to numCourses - 1. \nExample 23: \nLeetCode Problem #208\nTitle: Implement Trie (Prefix Tree)\nDescription:\nImplement the Trie class. \nExample 24: \nLeetCode Problem #209\nTitle: Minimum Size Subarray Sum\nDescription:\nGiven an array of positive integers nums and a positive integer target, return the minimal length of a contiguous subarray [numsl, numsl, ..., numsr-1, numsr] of which the sum is greater than or equal to target. \nExample 25: \nLeetCode Problem #210\nTitle: Course Schedule II\nDescription:\nThere are a total of numCourses courses you have to take, labeled from 0 to numCourses - 1. \nExample 26: \nLeetCode Problem #211\nTitle: Design Add and Search Words Data Structure\nDescription:\nYou should design a data structure that supports adding new words and finding if a string matches any previously added string. \nExample 27: \nLeetCode Problem #212\nTitle: Word Search II\nDescription:\nGiven an m x n board of characters and a list of strings words, return all words on the board. \nExample 28: \nLeetCode Problem #213\nTitle: House Robber II\nDescription:\nYou are a professional robber planning to rob houses along a street. Each house has a certain amount of money stashed. \nExample 29: \nLeetCode Problem #214\nTitle: Shortest Palindrome\nDescription:\nYou are given a string s. You can convert s to a palindrome by adding characters in front of it. \nExample 30: \nLeetCode Problem #215\nTitle: Kth Largest Element in an Array\nDescription:\nGiven an integer array nums and an integer k, return the kth largest element in the array.", "cleaned_response": " \nReverse Linked List\n\nReverse a singly linked list. \n \nCourse Schedule\n\nThere are a total of numCourses courses you have to take, labeled from 0 to numCourses - 1. \n \nImplement Trie (Prefix Tree)\n\nImplement the Trie class. \n \nMinimum Size Subarray Sum\n\nGiven an array of positive integers nums and a positive integer target, return the minimal length of a contiguous subarray [numsl, numsl, ..., numsr-1, numsr] of which the sum is greater than or equal to target. \n \nCourse Schedule II\n\nThere are a total of numCourses courses you have to take, labeled from 0 to numCourses - 1. \n \nDesign Add and Search Words Data Structure\n\nYou should design a data structure that supports adding new words and finding if a string matches any previously added string. \n \nWord Search II\n\nGiven an m x n board of characters and a list of strings words, return all words on the board. \n \nHouse Robber II\n\nYou are a professional robber planning to rob houses along a street. Each house has a certain amount of money stashed. \n \nShortest Palindrome\n\nYou are given a string s. You can convert s to a palindrome by adding characters in front of it. \n \nKth Largest Element in an Array\n\nGiven an integer array nums and an integer k, return the kth largest element in the array.", "similarity": 0.9432160845019796}
{"input_context": "Example 1: \nLeetCode Problem #226\nTitle: Invert Binary Tree\nDescription:\nGiven the root of a binary tree, invert the tree, and return its root. \nExample 2: \nLeetCode Problem #227\nTitle: Basic Calculator II\nDescription:\nGiven a string s which represents an expression, evaluate this expression and return its value. \nExample 3: \nLeetCode Problem #228\nTitle: Summary Ranges\nDescription:\nYou are given a sorted unique integer array nums. \nExample 4: \nLeetCode Problem #229\nTitle: Majority Element II\nDescription:\nGiven an integer array of size n, find all elements that appear more than \u230a n/3 \u230b times. \nExample 5: \nLeetCode Problem #230\nTitle: Kth Smallest Element in a BST\nDescription:\nGiven the root of a binary search tree, and an integer k, return the k th smallest value ( 1-indexed ) of all the values of the nodes in the tree. \nExample 6: \nLeetCode Problem #231\nTitle: Power of Two\nDescription:\nGiven an integer n, return true if it is a power of two. Otherwise, return false. \nExample 7: \nLeetCode Problem #232\nTitle: Implement Queue using Stacks\nDescription:\nImplement a first in first out (FIFO) queue using only two stacks. The implemented queue should support all the functions of a normal queue ( push, peek, pop, and empty ). \nExample 8: \nLeetCode Problem #233\nTitle: Number of Digit One\nDescription:\nGiven an integer n, count the total number of digit 1 appearing in all non-negative integers less than or equal to n. \nExample 9: \nLeetCode Problem #234\nTitle: Palindrome Linked List\nDescription:\nGiven the head of a singly linked list, return true if it is a palindrome or false otherwise. \nExample 10: \nLeetCode Problem #235\nTitle: Lowest Common Ancestor of a Binary Search Tree\nDescription:\nGiven a binary search tree (BST), find the lowest common ancestor (LCA) node of two given nodes in the BST. \nExample 11: \nLeetCode Problem #236\nTitle: Lowest Common Ancestor of a Binary Tree\nDescription:\nGiven a binary tree, find the lowest common ancestor (LCA) of two given nodes in the tree. \nExample 12: \nLeetCode Problem #237\nTitle: Delete Node in a Linked List\nDescription:\nThere is a singly-linked list head and we want to delete a node node in it. \nExample 13: \nLeetCode Problem #238\nTitle: Product of Array Except Self\nDescription:\nGiven an integer array nums, return an array answer such that answer[i] is equal to the product of all the elements of nums except nums[i]. \nExample 14: \nLeetCode Problem #239\nTitle: Sliding Window Maximum\nDescription:\nYou are given an array of integers nums, there is a sliding window of size k which is moving from the very left of the array to the very right. You can only see the k numbers in the window. Each time the sliding window moves right by one position. \nExample 15: \nLeetCode Problem #240\nTitle: Search a 2D Matrix II\nDescription:\nWrite an efficient algorithm that searches for a value target in an m x n integer matrix matrix. This matrix has the following properties:...\n\nExample 16: \nLeetCode Problem #241\nTitle: Different Ways to Add Parentheses\nDescription:\nGiven a string expression of numbers and operators, return all possible results from computing all the different possible ways to group numbers and operators. You may return the answer in any order. \nExample 17: \nLeetCode Problem #242\nTitle: Valid Anagram\nDescription:\nGiven two strings s and t, return true if t is an anagram of s, and false otherwise. \nExample 18: \nLeetCode Problem #257\nTitle: Binary Tree Paths\nDescription:\nGiven the root of a binary tree, return all root-to-leaf paths in any order. \nExample 19: \nLeetCode Problem #258\nTitle: Add Digits\nDescription:\nGiven an integer num, repeatedly add all its digits until the result has only one digit, and return it. \nExample 20: \nLeetCode Problem #260\nTitle: Single Number III\nDescription:\nGiven an integer array nums, in which exactly two elements appear only once and all the other elements appear exactly twice. Find the two elements that appear only once. You can return the answer in any order. ", "expected_response": "Example 21: \nLeetCode Problem #263\nTitle: Ugly Number\nDescription:\nAn ugly number is a positive integer whose prime factors are limited to 2, 3, and 5. \nExample 22: \nLeetCode Problem #264\nTitle: Ugly Number II\nDescription:\nAn ugly number is a positive integer whose prime factors are limited to 2, 3, and 5. \nExample 23: \nLeetCode Problem #268\nTitle: Missing Number\nDescription:\nGiven an array nums containing n distinct numbers in the range [0, n], return the only number in the range that is missing from the array. \nExample 24: \nLeetCode Problem #273\nTitle: Integer to English Words\nDescription:\nConvert a non-negative integer num to its English words representation. \nExample 25: \nLeetCode Problem #274\nTitle: H-Index\nDescription:\nGiven an array of integers citations where citations[i] is the number of citations a researcher received for their i th paper, return the researcher's h-index. \nExample 26: \nLeetCode Problem #275\nTitle: H-Index II\nDescription:\nGiven an array of integers citations where citations[i] is the number of citations a researcher received for their i th paper and citations is sorted in ascending order, return the researcher's h-index. \nExample 27: \nLeetCode Problem #278\nTitle: First Bad Version\nDescription:\nYou are a product manager and currently leading a team to develop a new product. Unfortunately, the latest version of your product fails the quality check. Since each version is developed based on the previous version, all the versions after a bad version are also bad. \nExample 28: \nLeetCode Problem #279\nTitle: Perfect Squares\nDescription:\nGiven an integer n, return the least number of perfect square numbers that sum to n. \nExample 29: \nLeetCode Problem #282\nTitle: Expression Add Operators\nDescription:\nGiven a string num that contains only digits and an integer target, return all possibilities to insert the binary operators '+', '-', and/or '*' between the digits of num so that the resultant expression evaluates to the target value. \nExample 30: \nLeetCode Problem #283\nTitle: Move Zeroes\nDescription:\nGiven an integer array nums, move all 0 's to the end of it while maintaining the relative order of the non-zero elements. \nExample 31: \nLeetCode Problem #284\nTitle: Peeking Iterator\nDescription:\nDesign an iterator that supports the peek operation on an existing iterator in addition to the hasNext and the next operations. \nExample 32: \nLeetCode Problem #287\nTitle: Find the Duplicate Number\nDescription:\nGiven an array of integers nums containing n + 1 integers where each integer is in the range [1, n] inclusive. \nExample 33: \nLeetCode Problem #289\nTitle: Game of Life\nDescription:\nAccording to Wikipedia's article : \"The Game of Life, also known simply as Life, is a cellular automaton devised by the British mathematician John Horton Conway in 1970. \"...\n\nExample 34: \nLeetCode Problem #290\nTitle: Word Pattern\nDescription:\nGiven a pattern and a string s, find if s follows the same pattern. \nExample 35: \nLeetCode Problem #292\nTitle: Nim Game\nDescription:\nYou are playing the following Nim Game with your friend:...\n\nExample 36: \nLeetCode Problem #295\nTitle: Find Median from Data Stream\nDescription:\nThe median is the middle value in an ordered integer list. If the size of the list is even, there is no middle value, and the median is the mean of the two middle values. \nExample 37: \nLeetCode Problem #297\nTitle: Serialize and Deserialize Binary Tree\nDescription:\nSerialization is the process of converting a data structure or object into a sequence of bits so that it can be stored in a file or memory buffer, or transmitted across a network connection link to be reconstructed later in the same or another computer environment. \nExample 38: \nLeetCode Problem #299\nTitle: Bulls and Cows\nDescription:\nYou are playing the Bulls and Cows game with your friend. \nExample 39: \nLeetCode Problem #300\nTitle: Longest Increasing Subsequence\nDescription:\nGiven an integer array nums, return the length of the longest strictly increasing subsequence. \nExample 40: \nLeetCode Problem #301\nTitle: Remove Invalid Parentheses\nDescription:\nGiven a string s that contains parentheses and letters, remove the minimum number of invalid parentheses to make the input string valid. ", "iloc": 221, "frontend_question_id": 303.0, "n_pass": 1, "response": "Example 21: \nLeetCode Problem #261\nTitle: Graph Valid Tree\nDescription:\nGiven n nodes labeled from 0 to n - 1 and a list of undirected edges (each edge is a pair of nodes), write a function to check whether these edges make up a valid tree. \nExample 22: \nLeetCode Problem #262\nTitle: Trips and Users\nDescription:\nThe Trips table holds all taxi trips. Each trip has a unique Id, while Client_Id and Driver_Id are both foreign keys to the Users_Id at the Users table. \nExample 23: \nLeetCode Problem #263\nTitle: Ugly Number\nDescription:\nWrite a program to check whether a given number is an ugly number. Ugly numbers are positive numbers whose prime factors only include 2, 3, and/or 5. \nExample 24: \nLeetCode Problem #264\nTitle: Ugly Number II\nDescription:\nWrite a program to find the n-th ugly number. Ugly numbers are positive numbers whose prime factors only include 2, 3, and/or 5. \nExample 25: \nLeetCode Problem #265\nTitle: Paint House II\nDescription:\nThere are a row of n houses, each house can be painted with one of the k colors. The cost of painting each house with a certain color is different. \nExample 26: \nLeetCode Problem #266\nTitle: Palindrome Permutation\nDescription:\nGiven a string s, return true if a permutation of the string could form a palindrome. Otherwise, return false. \nExample 27: \nLeetCode Problem #267\nTitle: Palindrome Permutation II\nDescription:\nGiven a string s, return all the palindromic permutations (without duplicates) of it. \nExample 28: \nLeetCode Problem #268\nTitle: Missing Number\nDescription:\nGiven an array nums containing n distinct numbers in the range [0, n], return the only number in the range that is missing from the array. \nExample 29: \nLeetCode Problem #269\nTitle: Alien Dictionary\nDescription:\nThere is a new alien language that uses the English alphabet. However, the order among letters are unknown to you. \nExample 30: \nLeetCode Problem #270\nTitle: Closest Binary Search Tree Value\nDescription:\nGiven the root of a binary search tree and a target value, find the value in the BST that is closest to the target.", "cleaned_response": " \nGraph Valid Tree\n\nGiven n nodes labeled from 0 to n - 1 and a list of undirected edges (each edge is a pair of nodes), write a function to check whether these edges make up a valid tree. \n \nTrips and Users\n\nThe Trips table holds all taxi trips. Each trip has a unique Id, while Client_Id and Driver_Id are both foreign keys to the Users_Id at the Users table. \n \nUgly Number\n\nWrite a program to check whether a given number is an ugly number. Ugly numbers are positive numbers whose prime factors only include 2, 3, and/or 5. \n \nUgly Number II\n\nWrite a program to find the n-th ugly number. Ugly numbers are positive numbers whose prime factors only include 2, 3, and/or 5. \n \nPaint House II\n\nThere are a row of n houses, each house can be painted with one of the k colors. The cost of painting each house with a certain color is different. \n \nPalindrome Permutation\n\nGiven a string s, return true if a permutation of the string could form a palindrome. Otherwise, return false. \n \nPalindrome Permutation II\n\nGiven a string s, return all the palindromic permutations (without duplicates) of it. \n \nMissing Number\n\nGiven an array nums containing n distinct numbers in the range [0, n], return the only number in the range that is missing from the array. \n \nAlien Dictionary\n\nThere is a new alien language that uses the English alphabet. However, the order among letters are unknown to you. \n \nClosest Binary Search Tree Value\n\nGiven the root of a binary search tree and a target value, find the value in the BST that is closest to the target.", "similarity": 0.9292747664273382}
{"input_context": "Example 1: \nLeetCode Problem #303\nTitle: Range Sum Query - Immutable\nDescription:\nGiven an integer array nums, handle multiple queries of the following type:...\n\nExample 2: \nLeetCode Problem #304\nTitle: Range Sum Query 2D - Immutable\nDescription:\nGiven a 2D matrix matrix, handle multiple queries of the following type:...\n\nExample 3: \nLeetCode Problem #306\nTitle: Additive Number\nDescription:\nAn additive number is a string whose digits can form an additive sequence. \nExample 4: \nLeetCode Problem #307\nTitle: Range Sum Query - Mutable\nDescription:\nGiven an integer array nums, handle multiple queries of the following types:...\n\nExample 5: \nLeetCode Problem #309\nTitle: Best Time to Buy and Sell Stock with Cooldown\nDescription:\nYou are given an array prices where prices[i] is the price of a given stock on the i th day. \nExample 6: \nLeetCode Problem #310\nTitle: Minimum Height Trees\nDescription:\nA tree is an undirected graph in which any two vertices are connected by exactly one path. In other words, any connected graph without simple cycles is a tree. \nExample 7: \nLeetCode Problem #312\nTitle: Burst Balloons\nDescription:\nYou are given n balloons, indexed from 0 to n - 1. Each balloon is painted with a number on it represented by an array nums. You are asked to burst all the balloons. \nExample 8: \nLeetCode Problem #313\nTitle: Super Ugly Number\nDescription:\nA super ugly number is a positive integer whose prime factors are in the array primes. \nExample 9: \nLeetCode Problem #315\nTitle: Count of Smaller Numbers After Self\nDescription:\nGiven an integer array nums, return an integer array counts where counts[i] is the number of smaller elements to the right of nums[i]. \nExample 10: \nLeetCode Problem #316\nTitle: Remove Duplicate Letters\nDescription:\nGiven a string s, remove duplicate letters so that every letter appears once and only once. You must make sure your result is the smallest in lexicographical order among all possible results. \nExample 11: \nLeetCode Problem #318\nTitle: Maximum Product of Word Lengths\nDescription:\nGiven a string array words, return the maximum value of length(word[i]) * length(word[j]) where the two words do not share common letters. If no such two words exist, return 0. \nExample 12: \nLeetCode Problem #319\nTitle: Bulb Switcher\nDescription:\nThere are n bulbs that are initially off. You first turn on all the bulbs, then you turn off every second bulb. \nExample 13: \nLeetCode Problem #321\nTitle: Create Maximum Number\nDescription:\nYou are given two integer arrays nums1 and nums2 of lengths m and n respectively. nums1 and nums2 represent the digits of two numbers. You are also given an integer k. \nExample 14: \nLeetCode Problem #322\nTitle: Coin Change\nDescription:\nYou are given an integer array coins representing coins of different denominations and an integer amount representing a total amount of money. \nExample 15: \nLeetCode Problem #324\nTitle: Wiggle Sort II\nDescription:\nGiven an integer array nums, reorder it such that nums[0] < nums[1] > nums[2] < nums[3]. . . . \nExample 16: \nLeetCode Problem #326\nTitle: Power of Three\nDescription:\nGiven an integer n, return true if it is a power of three. Otherwise, return false. \nExample 17: \nLeetCode Problem #327\nTitle: Count of Range Sum\nDescription:\nGiven an integer array nums and two integers lower and upper, return the number of range sums that lie in [lower, upper] inclusive. \nExample 18: \nLeetCode Problem #328\nTitle: Odd Even Linked List\nDescription:\nGiven the head of a singly linked list, group all the nodes with odd indices together followed by the nodes with even indices, and return the reordered list. \nExample 19: \nLeetCode Problem #329\nTitle: Longest Increasing Path in a Matrix\nDescription:\nGiven an m x n integers matrix, return the length of the longest increasing path in matrix. \nExample 20: \nLeetCode Problem #330\nTitle: Patching Array\nDescription:\nGiven a sorted integer array nums and an integer n, add/patch elements to the array such that any number in the range [1, n] inclusive can be formed by the sum of some elements in the array. ", "expected_response": "Example 21: \nLeetCode Problem #331\nTitle: Verify Preorder Serialization of a Binary Tree\nDescription:\nOne way to serialize a binary tree is to use preorder traversal. When we encounter a non-null node, we record the node's value. If it is a null node, we record using a sentinel value such as '#'. \nExample 22: \nLeetCode Problem #332\nTitle: Reconstruct Itinerary\nDescription:\nYou are given a list of airline tickets where tickets[i] = [from i, to i ] represent the departure and the arrival airports of one flight. Reconstruct the itinerary in order and return it. \nExample 23: \nLeetCode Problem #334\nTitle: Increasing Triplet Subsequence\nDescription:\nGiven an integer array nums, return true if there exists a triple of indices (i, j, k) such that i < j < k and nums[i] < nums[j] < nums[k]. If no such indices exists, return false. \nExample 24: \nLeetCode Problem #335\nTitle: Self Crossing\nDescription:\nYou are given an array of integers distance. \nExample 25: \nLeetCode Problem #336\nTitle: Palindrome Pairs\nDescription:\nYou are given a 0-indexed array of unique strings words. \nExample 26: \nLeetCode Problem #337\nTitle: House Robber III\nDescription:\nThe thief has found himself a new place for his thievery again. There is only one entrance to this area, called root. \nExample 27: \nLeetCode Problem #338\nTitle: Counting Bits\nDescription:\nGiven an integer n, return an array ans of length n + 1 such that for each i ( 0 <= i <= n ), ans[i] is the number of 1 's in the binary representation of i. \nExample 28: \nLeetCode Problem #341\nTitle: Flatten Nested List Iterator\nDescription:\nYou are given a nested list of integers nestedList. Each element is either an integer or a list whose elements may also be integers or other lists. Implement an iterator to flatten it. \nExample 29: \nLeetCode Problem #342\nTitle: Power of Four\nDescription:\nGiven an integer n, return true if it is a power of four. Otherwise, return false. \nExample 30: \nLeetCode Problem #343\nTitle: Integer Break\nDescription:\nGiven an integer n, break it into the sum of k positive integers, where k >= 2, and maximize the product of those integers. \nExample 31: \nLeetCode Problem #344\nTitle: Reverse String\nDescription:\nWrite a function that reverses a string. The input string is given as an array of characters s. \nExample 32: \nLeetCode Problem #345\nTitle: Reverse Vowels of a String\nDescription:\nGiven a string s, reverse only all the vowels in the string and return it. \nExample 33: \nLeetCode Problem #347\nTitle: Top K Frequent Elements\nDescription:\nGiven an integer array nums and an integer k, return the k most frequent elements. You may return the answer in any order. \nExample 34: \nLeetCode Problem #349\nTitle: Intersection of Two Arrays\nDescription:\nGiven two integer arrays nums1 and nums2, return an array of their intersection. Each element in the result must be unique and you may return the result in any order. \nExample 35: \nLeetCode Problem #350\nTitle: Intersection of Two Arrays II\nDescription:\nGiven two integer arrays nums1 and nums2, return an array of their intersection. Each element in the result must appear as many times as it shows in both arrays and you may return the result in any order. \nExample 36: \nLeetCode Problem #352\nTitle: Data Stream as Disjoint Intervals\nDescription:\nGiven a data stream input of non-negative integers a 1, a 2,. . . , a n, summarize the numbers seen so far as a list of disjoint intervals. \nExample 37: \nLeetCode Problem #354\nTitle: Russian Doll Envelopes\nDescription:\nYou are given a 2D array of integers envelopes where envelopes[i] = [w i, h i ] represents the width and the height of an envelope. \nExample 38: \nLeetCode Problem #355\nTitle: Design Twitter\nDescription:\nDesign a simplified version of Twitter where users can post tweets, follow/unfollow another user, and is able to see the 10 most recent tweets in the user's news feed. \nExample 39: \nLeetCode Problem #357\nTitle: Count Numbers with Unique Digits\nDescription:\nGiven an integer n, return the count of all numbers with unique digits, x, where 0 <= x < 10 n. \nExample 40: \nLeetCode Problem #363\nTitle: Max Sum of Rectangle No Larger Than K\nDescription:\nGiven an m x n matrix matrix and an integer k, return the max sum of a rectangle in the matrix such that its sum is no larger than k. ", "iloc": 261, "frontend_question_id": 365.0, "n_pass": 1, "response": "Example 21: \nLeetCode Problem #331\nTitle: Verify Preorder Serialization of a Binary Tree\nDescription:\nOne way to serialize a binary tree is to use preorder traversal. When we encounter a non-null node, we record the node's value. If it is a null node, we record using a sentinel value such as '#'. \n\nExample 22: \nLeetCode Problem #332\nTitle: Reconstruct Itinerary\nDescription:\nYou are given a list of airline tickets where tickets[i] = [fromi, toi] represent the departure and the arrival airports of one flight. \n\nExample 23: \nLeetCode Problem #333\nTitle: Largest BST Subtree\nDescription:\nGiven the root of a binary tree, find the largest subtree that is a Binary Search Tree (BST).\n\nExample 24: \nLeetCode Problem #335\nTitle: Self Crossing\nDescription:\nYou are given an array distance representing the distance of each move. \n\nExample 25: \nLeetCode Problem #336\nTitle: Palindrome Pairs\nDescription:\nGiven a list of unique words, return all pairs of distinct indices (i, j) in the given list, so that the concatenation of the two words words[i] + words[j] is a palindrome.\n\nExample 26: \nLeetCode Problem #337\nTitle: House Robber III\nDescription:\nThe thief has found himself a new place for his thievery again. \n\nExample 27: \nLeetCode Problem #338\nTitle: Counting Bits\nDescription:\nGiven an integer n, return an array ans of length n + 1 such that for each i (0 <= i <= n), ans[i] is the number of 1's in the binary representation of i.\n\nExample 28: \nLeetCode Problem #339\nTitle: Nested List Weight Sum\nDescription:\nYou are given a nested list of integers nestedList. Each element is either an integer or a list whose elements may also be integers or other lists.\n\nExample 29: \nLeetCode Problem #341\nTitle: Flatten Nested List Iterator\nDescription:\nYou are given a nested list of integers nestedList. Implement an iterator to flatten it.\n\nExample 30: \nLeetCode Problem #342\nTitle: Power of Four\nDescription:\nGiven an integer n, return true if n is a power of four. Otherwise, return false.", "cleaned_response": " \nVerify Preorder Serialization of a Binary Tree\n\nOne way to serialize a binary tree is to use preorder traversal. When we encounter a non-null node, we record the node's value. If it is a null node, we record using a sentinel value such as '#'. \n\n \nReconstruct Itinerary\n\nYou are given a list of airline tickets where tickets[i] = [fromi, toi] represent the departure and the arrival airports of one flight. \n\n \nLargest BST Subtree\n\nGiven the root of a binary tree, find the largest subtree that is a Binary Search Tree (BST).\n\n \nSelf Crossing\n\nYou are given an array distance representing the distance of each move. \n\n \nPalindrome Pairs\n\nGiven a list of unique words, return all pairs of distinct indices (i, j) in the given list, so that the concatenation of the two words words[i] + words[j] is a palindrome.\n\n \nHouse Robber III\n\nThe thief has found himself a new place for his thievery again. \n\n \nCounting Bits\n\nGiven an integer n, return an array ans of length n + 1 such that for each i (0 <= i <= n), ans[i] is the number of 1's in the binary representation of i.\n\n \nNested List Weight Sum\n\nYou are given a nested list of integers nestedList. Each element is either an integer or a list whose elements may also be integers or other lists.\n\n \nFlatten Nested List Iterator\n\nYou are given a nested list of integers nestedList. Implement an iterator to flatten it.\n\n \nPower of Four\n\nGiven an integer n, return true if n is a power of four. Otherwise, return false.", "similarity": 0.9537750190848504}
{"input_context": "Example 1: \nLeetCode Problem #365\nTitle: Water and Jug Problem\nDescription:\nYou are given two jugs with capacities jug1Capacity and jug2Capacity liters. There is an infinite amount of water supply available. Determine whether it is possible to measure exactly targetCapacity liters using these two jugs. \nExample 2: \nLeetCode Problem #367\nTitle: Valid Perfect Square\nDescription:\nGiven a positive integer num, return true if num is a perfect square or false otherwise. \nExample 3: \nLeetCode Problem #368\nTitle: Largest Divisible Subset\nDescription:\nGiven a set of distinct positive integers nums, return the largest subset answer such that every pair (answer[i], answer[j]) of elements in this subset satisfies:...\n\nExample 4: \nLeetCode Problem #371\nTitle: Sum of Two Integers\nDescription:\nGiven two integers a and b, return the sum of the two integers without using the operators + and -. \nExample 5: \nLeetCode Problem #372\nTitle: Super Pow\nDescription:\nYour task is to calculate a b mod 1337 where a is a positive integer and b is an extremely large positive integer given in the form of an array. \nExample 6: \nLeetCode Problem #373\nTitle: Find K Pairs with Smallest Sums\nDescription:\nYou are given two integer arrays nums1 and nums2 sorted in non-decreasing order and an integer k. \nExample 7: \nLeetCode Problem #374\nTitle: Guess Number Higher or Lower\nDescription:\nWe are playing the Guess Game. The game is as follows:...\n\nExample 8: \nLeetCode Problem #375\nTitle: Guess Number Higher or Lower II\nDescription:\nWe are playing the Guessing Game. The game will work as follows:...\n\nExample 9: \nLeetCode Problem #376\nTitle: Wiggle Subsequence\nDescription:\nA wiggle sequence is a sequence where the differences between successive numbers strictly alternate between positive and negative. The first difference (if one exists) may be either positive or negative. A sequence with one element and a sequence with two non-equal elements are trivially wiggle sequences. \nExample 10: \nLeetCode Problem #377\nTitle: Combination Sum IV\nDescription:\nGiven an array of distinct integers nums and a target integer target, return the number of possible combinations that add up to target. \nExample 11: \nLeetCode Problem #378\nTitle: Kth Smallest Element in a Sorted Matrix\nDescription:\nGiven an n x n matrix where each of the rows and columns is sorted in ascending order, return the k th smallest element in the matrix. \nExample 12: \nLeetCode Problem #380\nTitle: Insert Delete GetRandom O(1)\nDescription:\nImplement the RandomizedSet class:...\n\nExample 13: \nLeetCode Problem #381\nTitle: Insert Delete GetRandom O(1) - Duplicates allowed\nDescription:\nRandomizedCollection is a data structure that contains a collection of numbers, possibly duplicates (i. e. , a multiset). It should support inserting and removing specific elements and also reporting a random element. \nExample 14: \nLeetCode Problem #382\nTitle: Linked List Random Node\nDescription:\nGiven a singly linked list, return a random node's value from the linked list. Each node must have the same probability of being chosen. \nExample 15: \nLeetCode Problem #383\nTitle: Ransom Note\nDescription:\nGiven two strings ransomNote and magazine, return true if ransomNote can be constructed by using the letters from magazine and false otherwise. \nExample 16: \nLeetCode Problem #384\nTitle: Shuffle an Array\nDescription:\nGiven an integer array nums, design an algorithm to randomly shuffle the array. All permutations of the array should be equally likely as a result of the shuffling. \nExample 17: \nLeetCode Problem #385\nTitle: Mini Parser\nDescription:\nGiven a string s represents the serialization of a nested list, implement a parser to deserialize it and return the deserialized NestedInteger. \nExample 18: \nLeetCode Problem #386\nTitle: Lexicographical Numbers\nDescription:\nGiven an integer n, return all the numbers in the range [1, n] sorted in lexicographical order. \nExample 19: \nLeetCode Problem #387\nTitle: First Unique Character in a String\nDescription:\nGiven a string s, find the first non-repeating character in it and return its index. If it does not exist, return -1. \nExample 20: \nLeetCode Problem #388\nTitle: Longest Absolute File Path\nDescription:\nSuppose we have a file system that stores both files and directories. An example of one system is represented in the following picture:...\n", "expected_response": "Example 21: \nLeetCode Problem #389\nTitle: Find the Difference\nDescription:\nYou are given two strings s and t. \nExample 22: \nLeetCode Problem #390\nTitle: Elimination Game\nDescription:\nYou have a list arr of all integers in the range [1, n] sorted in a strictly increasing order. Apply the following algorithm on arr :...\n\nExample 23: \nLeetCode Problem #391\nTitle: Perfect Rectangle\nDescription:\nGiven an array rectangles where rectangles[i] = [x i, y i, a i, b i ] represents an axis-aligned rectangle. The bottom-left point of the rectangle is (x i, y i ) and the top-right point of it is (a i, b i ). \nExample 24: \nLeetCode Problem #392\nTitle: Is Subsequence\nDescription:\nGiven two strings s and t, return true if s is a subsequence of t, or false otherwise. \nExample 25: \nLeetCode Problem #393\nTitle: UTF-8 Validation\nDescription:\nGiven an integer array data representing the data, return whether it is a valid UTF-8 encoding (i. e. it translates to a sequence of valid UTF-8 encoded characters). \nExample 26: \nLeetCode Problem #394\nTitle: Decode String\nDescription:\nGiven an encoded string, return its decoded string. \nExample 27: \nLeetCode Problem #395\nTitle: Longest Substring with At Least K Repeating Characters\nDescription:\nGiven a string s and an integer k, return the length of the longest substring of s such that the frequency of each character in this substring is greater than or equal to k. \nExample 28: \nLeetCode Problem #396\nTitle: Rotate Function\nDescription:\nYou are given an integer array nums of length n. \nExample 29: \nLeetCode Problem #397\nTitle: Integer Replacement\nDescription:\nGiven a positive integer n, you can apply one of the following operations:...\n\nExample 30: \nLeetCode Problem #398\nTitle: Random Pick Index\nDescription:\nGiven an integer array nums with possible duplicates, randomly output the index of a given target number. You can assume that the given target number must exist in the array. \nExample 31: \nLeetCode Problem #399\nTitle: Evaluate Division\nDescription:\nYou are given an array of variable pairs equations and an array of real numbers values, where equations[i] = [A i, B i ] and values[i] represent the equation A i / B i = values[i]. Each A i or B i is a string that represents a single variable. \nExample 32: \nLeetCode Problem #400\nTitle: Nth Digit\nDescription:\nGiven an integer n, return the n th digit of the infinite integer sequence [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11,. . . ]. \nExample 33: \nLeetCode Problem #401\nTitle: Binary Watch\nDescription:\nA binary watch has 4 LEDs on the top to represent the hours (0-11), and 6 LEDs on the bottom to represent the minutes (0-59). Each LED represents a zero or one, with the least significant bit on the right. \nExample 34: \nLeetCode Problem #402\nTitle: Remove K Digits\nDescription:\nGiven string num representing a non-negative integer num, and an integer k, return the smallest possible integer after removing k digits from num. \nExample 35: \nLeetCode Problem #403\nTitle: Frog Jump\nDescription:\nA frog is crossing a river. The river is divided into some number of units, and at each unit, there may or may not exist a stone. The frog can jump on a stone, but it must not jump into the water. \nExample 36: \nLeetCode Problem #404\nTitle: Sum of Left Leaves\nDescription:\nGiven the root of a binary tree, return the sum of all left leaves. \nExample 37: \nLeetCode Problem #405\nTitle: Convert a Number to Hexadecimal\nDescription:\nGiven an integer num, return a string representing its hexadecimal representation. For negative integers, two\u2019s complement method is used. \nExample 38: \nLeetCode Problem #406\nTitle: Queue Reconstruction by Height\nDescription:\nYou are given an array of people, people, which are the attributes of some people in a queue (not necessarily in order). Each people[i] = [h i, k i ] represents the i th person of height h i with exactly k i other people in front who have a height greater than or equal to h i. \nExample 39: \nLeetCode Problem #407\nTitle: Trapping Rain Water II\nDescription:\nGiven an m x n integer matrix heightMap representing the height of each unit cell in a 2D elevation map, return the volume of water it can trap after raining. \nExample 40: \nLeetCode Problem #409\nTitle: Longest Palindrome\nDescription:\nGiven a string s which consists of lowercase or uppercase letters, return the length of the longest palindrome that can be built with those letters. ", "iloc": 301, "frontend_question_id": 410.0, "n_pass": 1, "response": "Example 21: \nLeetCode Problem #389\nTitle: Find the Difference\nDescription:\nGiven two strings s and t, return the letter that was added in t but not present in s. \nExample 22: \nLeetCode Problem #390\nTitle: Elimination Game\nDescription:\nYou have a list arr of all integers in the range [1, n] sorted in ascending order. Remove the smallest element at even indices (0-indexed) and return the last remaining element. \nExample 23: \nLeetCode Problem #391\nTitle: Perfect Rectangle\nDescription:\nGiven an array rectangles where rectangles[i] = [xi, yi, ai, bi] represents an axis-aligned rectangle. The bottom-left point of the rectangle is (xi, yi) and the top-right point of it is (ai, bi). Return true if all the rectangles together form an exact cover of a rectangular region. \nExample 24: \nLeetCode Problem #392\nTitle: Is Subsequence\nDescription:\nGiven two strings s and t, return true if s is a subsequence of t, or false otherwise. \nExample 25: \nLeetCode Problem #393\nTitle: UTF-8 Validation\nDescription:\nGiven an integer array data representing the data, return whether it is a valid UTF-8 encoding. \nExample 26: \nLeetCode Problem #394\nTitle: Decode String\nDescription:\nGiven an encoded string s, return the decoded string. \nExample 27: \nLeetCode Problem #395\nTitle: Longest Substring with At Least K Repeating Characters\nDescription:\nGiven a string s and an integer k, return the length of the longest substring of s such that the frequency of each character in this substring is greater than or equal to k. \nExample 28: \nLeetCode Problem #396\nTitle: Rotate Function\nDescription:\nGiven an integer array nums, return the maximum possible sum of some of its k consecutive numbers. \nExample 29: \nLeetCode Problem #397\nTitle: Integer Replacement\nDescription:\nGiven a positive integer n, you can perform the following operations:\n 1. If n is even, replace n with n / 2.\n 2. If n is odd, replace n with either n + 1 or n - 1.\nReturn the minimum number of operations needed for n to become 1. \nExample 30: \nLeetCode Problem #398\nTitle: Random Pick Index\nDescription:\nGiven an integer array nums, design an algorithm that randomly picks an index of an element in the array and returns it. Each element should have the same probability of being picked.", "cleaned_response": " \nFind the Difference\n\nGiven two strings s and t, return the letter that was added in t but not present in s. \n \nElimination Game\n\nYou have a list arr of all integers in the range [1, n] sorted in ascending order. Remove the smallest element at even indices (0-indexed) and return the last remaining element. \n \nPerfect Rectangle\n\nGiven an array rectangles where rectangles[i] = [xi, yi, ai, bi] represents an axis-aligned rectangle. The bottom-left point of the rectangle is (xi, yi) and the top-right point of it is (ai, bi). Return true if all the rectangles together form an exact cover of a rectangular region. \n \nIs Subsequence\n\nGiven two strings s and t, return true if s is a subsequence of t, or false otherwise. \n \nUTF-8 Validation\n\nGiven an integer array data representing the data, return whether it is a valid UTF-8 encoding. \n \nDecode String\n\nGiven an encoded string s, return the decoded string. \n \nLongest Substring with At Least K Repeating Characters\n\nGiven a string s and an integer k, return the length of the longest substring of s such that the frequency of each character in this substring is greater than or equal to k. \n \nRotate Function\n\nGiven an integer array nums, return the maximum possible sum of some of its k consecutive numbers. \n \nInteger Replacement\n\nGiven a positive integer n, you can perform the following operations:\n 1. If n is even, replace n with n / 2.\n 2. If n is odd, replace n with either n + 1 or n - 1.\nReturn the minimum number of operations needed for n to become 1. \n \nRandom Pick Index\n\nGiven an integer array nums, design an algorithm that randomly picks an index of an element in the array and returns it. Each element should have the same probability of being picked.", "similarity": 0.9142242248711469}
{"input_context": "Example 1: \nLeetCode Problem #410\nTitle: Split Array Largest Sum\nDescription:\nGiven an integer array nums and an integer k, split nums into k non-empty subarrays such that the largest sum of any subarray is minimized. \nExample 2: \nLeetCode Problem #412\nTitle: Fizz Buzz\nDescription:\nGiven an integer n, return a string array answer ( 1-indexed ) where :...\n\nExample 3: \nLeetCode Problem #413\nTitle: Arithmetic Slices\nDescription:\nAn integer array is called arithmetic if it consists of at least three elements and if the difference between any two consecutive elements is the same. \nExample 4: \nLeetCode Problem #414\nTitle: Third Maximum Number\nDescription:\nGiven an integer array nums, return the third distinct maximum number in this array. If the third maximum does not exist, return the maximum number. \nExample 5: \nLeetCode Problem #415\nTitle: Add Strings\nDescription:\nGiven two non-negative integers, num1 and num2 represented as string, return the sum of num1 and num2 as a string. \nExample 6: \nLeetCode Problem #416\nTitle: Partition Equal Subset Sum\nDescription:\nGiven an integer array nums, return true if you can partition the array into two subsets such that the sum of the elements in both subsets is equal or false otherwise. \nExample 7: \nLeetCode Problem #417\nTitle: Pacific Atlantic Water Flow\nDescription:\nThere is an m x n rectangular island that borders both the Pacific Ocean and Atlantic Ocean. The Pacific Ocean touches the island's left and top edges, and the Atlantic Ocean touches the island's right and bottom edges. \nExample 8: \nLeetCode Problem #419\nTitle: Battleships in a Board\nDescription:\nGiven an m x n matrix board where each cell is a battleship 'X' or empty ., return the number of the battleships on board. \nExample 9: \nLeetCode Problem #420\nTitle: Strong Password Checker\nDescription:\nA password is considered strong if the below conditions are all met:...\n\nExample 10: \nLeetCode Problem #421\nTitle: Maximum XOR of Two Numbers in an Array\nDescription:\nGiven an integer array nums, return the maximum result of nums[i] XOR nums[j], where 0 <= i <= j < n. \nExample 11: \nLeetCode Problem #423\nTitle: Reconstruct Original Digits from English\nDescription:\nGiven a string s containing an out-of-order English representation of digits 0-9, return the digits in ascending order. \nExample 12: \nLeetCode Problem #424\nTitle: Longest Repeating Character Replacement\nDescription:\nYou are given a string s and an integer k. You can choose any character of the string and change it to any other uppercase English character. You can perform this operation at most k times. \nExample 13: \nLeetCode Problem #427\nTitle: Construct Quad Tree\nDescription:\nGiven a n * n matrix grid of 0's and 1's only. We want to represent grid with a Quad-Tree. \nExample 14: \nLeetCode Problem #429\nTitle: N-ary Tree Level Order Traversal\nDescription:\nGiven an n-ary tree, return the level order traversal of its nodes' values. \nExample 15: \nLeetCode Problem #430\nTitle: Flatten a Multilevel Doubly Linked List\nDescription:\nYou are given a doubly linked list, which contains nodes that have a next pointer, a previous pointer, and an additional child pointer. This child pointer may or may not point to a separate doubly linked list, also containing these special nodes. These child lists may have one or more children of their own, and so on, to produce a multilevel data structure as shown in the example below. \nExample 16: \nLeetCode Problem #432\nTitle: All O`one Data Structure\nDescription:\nDesign a data structure to store the strings' count with the ability to return the strings with minimum and maximum counts. \nExample 17: \nLeetCode Problem #433\nTitle: Minimum Genetic Mutation\nDescription:\nA gene string can be represented by an 8-character long string, with choices from 'A', 'C', 'G', and 'T'. \nExample 18: \nLeetCode Problem #434\nTitle: Number of Segments in a String\nDescription:\nGiven a string s, return the number of segments in the string. \nExample 19: \nLeetCode Problem #435\nTitle: Non-overlapping Intervals\nDescription:\nGiven an array of intervals intervals where intervals[i] = [start i, end i ], return the minimum number of intervals you need to remove to make the rest of the intervals non-overlapping. \nExample 20: \nLeetCode Problem #436\nTitle: Find Right Interval\nDescription:\nYou are given an array of intervals, where intervals[i] = [start i, end i ] and each start i is unique. ", "expected_response": "Example 21: \nLeetCode Problem #437\nTitle: Path Sum III\nDescription:\nGiven the root of a binary tree and an integer targetSum, return the number of paths where the sum of the values along the path equals targetSum. \nExample 22: \nLeetCode Problem #438\nTitle: Find All Anagrams in a String\nDescription:\nGiven two strings s and p, return an array of all the start indices of p 's anagrams in s. You may return the answer in any order. \nExample 23: \nLeetCode Problem #440\nTitle: K-th Smallest in Lexicographical Order\nDescription:\nGiven two integers n and k, return the k th lexicographically smallest integer in the range [1, n]. \nExample 24: \nLeetCode Problem #441\nTitle: Arranging Coins\nDescription:\nYou have n coins and you want to build a staircase with these coins. The staircase consists of k rows where the i th row has exactly i coins. The last row of the staircase may be incomplete. \nExample 25: \nLeetCode Problem #442\nTitle: Find All Duplicates in an Array\nDescription:\nGiven an integer array nums of length n where all the integers of nums are in the range [1, n] and each integer appears once or twice, return an array of all the integers that appears twice. \nExample 26: \nLeetCode Problem #443\nTitle: String Compression\nDescription:\nGiven an array of characters chars, compress it using the following algorithm:...\n\nExample 27: \nLeetCode Problem #445\nTitle: Add Two Numbers II\nDescription:\nYou are given two non-empty linked lists representing two non-negative integers. The most significant digit comes first and each of their nodes contains a single digit. Add the two numbers and return the sum as a linked list. \nExample 28: \nLeetCode Problem #446\nTitle: Arithmetic Slices II - Subsequence\nDescription:\nGiven an integer array nums, return the number of all the arithmetic subsequences of nums. \nExample 29: \nLeetCode Problem #447\nTitle: Number of Boomerangs\nDescription:\nYou are given n points in the plane that are all distinct, where points[i] = [x i, y i ]. A boomerang is a tuple of points (i, j, k) such that the distance between i and j equals the distance between i and k (the order of the tuple matters). \nExample 30: \nLeetCode Problem #448\nTitle: Find All Numbers Disappeared in an Array\nDescription:\nGiven an array nums of n integers where nums[i] is in the range [1, n], return an array of all the integers in the range [1, n] that do not appear in nums. \nExample 31: \nLeetCode Problem #449\nTitle: Serialize and Deserialize BST\nDescription:\nSerialization is converting a data structure or object into a sequence of bits so that it can be stored in a file or memory buffer, or transmitted across a network connection link to be reconstructed later in the same or another computer environment. \nExample 32: \nLeetCode Problem #450\nTitle: Delete Node in a BST\nDescription:\nGiven a root node reference of a BST and a key, delete the node with the given key in the BST. Return the root node reference (possibly updated) of the BST. \nExample 33: \nLeetCode Problem #451\nTitle: Sort Characters By Frequency\nDescription:\nGiven a string s, sort it in decreasing order based on the frequency of the characters. The frequency of a character is the number of times it appears in the string. \nExample 34: \nLeetCode Problem #452\nTitle: Minimum Number of Arrows to Burst Balloons\nDescription:\nThere are some spherical balloons taped onto a flat wall that represents the XY-plane. The balloons are represented as a 2D integer array points where points[i] = [x start, x end ] denotes a balloon whose horizontal diameter stretches between x start and x end. You do not know the exact y-coordinates of the balloons. \nExample 35: \nLeetCode Problem #453\nTitle: Minimum Moves to Equal Array Elements\nDescription:\nGiven an integer array nums of size n, return the minimum number of moves required to make all array elements equal. \nExample 36: \nLeetCode Problem #454\nTitle: 4Sum II\nDescription:\nGiven four integer arrays nums1, nums2, nums3, and nums4 all of length n, return the number of tuples (i, j, k, l) such that:...\n\nExample 37: \nLeetCode Problem #455\nTitle: Assign Cookies\nDescription:\nAssume you are an awesome parent and want to give your children some cookies. But, you should give each child at most one cookie. \nExample 38: \nLeetCode Problem #456\nTitle: 132 Pattern\nDescription:\nGiven an array of n integers nums, a 132 pattern is a subsequence of three integers nums[i], nums[j] and nums[k] such that i < j < k and nums[i] < nums[k] < nums[j]. \nExample 39: \nLeetCode Problem #457\nTitle: Circular Array Loop\nDescription:\nYou are playing a game involving a circular array of non-zero integers nums. Each nums[i] denotes the number of indices forward/backward you must move if you are located at index i :...\n\nExample 40: \nLeetCode Problem #458\nTitle: Poor Pigs\nDescription:\nThere are buckets buckets of liquid, where exactly one of the buckets is poisonous. To figure out which one is poisonous, you feed some number of (poor) pigs the liquid to see whether they will die or not. Unfortunately, you only have minutesToTest minutes to determine which bucket is poisonous. ", "iloc": 341, "frontend_question_id": 459.0, "n_pass": 1, "response": "Example 21: \nLeetCode Problem #437\nTitle: Path Sum III\nDescription:\nGiven the root of a binary tree and an integer targetSum, return the number of paths where the sum of the values along the path equals targetSum. \n\nExample 22: \nLeetCode Problem #438\nTitle: Find All Anagrams in a String\nDescription:\nGiven two strings s and p, return an array of all the start indices of p's anagrams in s. \n\nExample 23: \nLeetCode Problem #439\nTitle: Ternary Expression Parser\nDescription:\nGiven a string representing arbitrarily nested ternary expressions, calculate the result of the expression. \n\nExample 24: \nLeetCode Problem #440\nTitle: K-th Smallest in Lexicographical Order\nDescription:\nGiven two integers n and k, return the kth lexicographically smallest integer in the range from 1 to n. \n\nExample 25: \nLeetCode Problem #441\nTitle: Arranging Coins\nDescription:\nYou have n coins and you want to build a staircase with these coins. The staircase consists of k rows where the ith row has exactly i coins. \n\nExample 26: \nLeetCode Problem #442\nTitle: Find All Duplicates in an Array\nDescription:\nGiven an integer array nums of length n where all the integers of nums are in the range [1, n] and each integer appears once or twice, return an array of all the integers that appears twice. \n\nExample 27: \nLeetCode Problem #443\nTitle: String Compression\nDescription:\nGiven an array of characters chars, compress it using the following algorithm. \n\nExample 28: \nLeetCode Problem #444\nTitle: Sequence Reconstruction\nDescription:\nCheck whether the original sequence org can be uniquely reconstructed from the sequences in seqs. \n\nExample 29: \nLeetCode Problem #445\nTitle: Add Two Numbers II\nDescription:\nYou are given two non-empty linked lists representing two non-negative integers. The most significant digit comes first and each of their nodes contains a single digit. \n\nExample 30: \nLeetCode Problem #446\nTitle: Arithmetic Slices II - Subsequence\nDescription:\nGiven an integer array nums, return the number of all the arithmetic subsequences of nums. \n\nExample 31: \nLeetCode Problem #447\nTitle: Number of Boomerangs\nDescription:\nYou are given n points in the plane that are all distinct. A boomerang is a tuple of points (i, j, k) such that the distance between i and j equals the distance between i and k (the order of the tuple matters). \n\nExample 32: \nLeetCode Problem #448\nTitle: Find All Numbers Disappeared in an Array\nDescription:\nGiven an array nums of n integers where nums[i] is in the range [1, n], return an array of all the integers in the range [1, n] that do not appear in nums. \n\nExample 33: \nLeetCode Problem #449\nTitle: Serialize and Deserialize BST\nDescription:\nYou are given the root of a binary search tree (BST), where exactly two nodes of the tree were swapped by mistake. \n\nExample 34: \nLeetCode Problem #450\nTitle: Delete Node in a BST\nDescription:\nGiven a root node reference of a BST and a key, delete the node with the given key in the BST. \n\nExample 35: \nLeetCode Problem #451\nTitle: Sort Characters By Frequency\nDescription:\nGiven a string s, sort it in decreasing order based on the frequency of characters, and return the sorted string. \n\nExample 36: \nLeetCode Problem #452\nTitle: Minimum Number of Arrows to Burst Balloons\nDescription:\nThere are some spherical balloons spread in two-dimensional space. For each balloon, provided input is the start and end coordinates of the horizontal diameter. \n\nExample 37: \nLeetCode Problem #453\nTitle: Minimum Moves to Equal Array Elements\nDescription:\nGiven an integer array nums of size n, return the minimum number of moves required to make all array elements equal. \n\nExample 38: \nLeetCode Problem #454\nTitle: 4Sum II\nDescription:\nGiven four integer arrays nums1, nums2, nums3, and nums4, return the number of tuples (i, j, k, l) \n\nExample 39: \nLeetCode Problem #455\nTitle: Assign Cookies\nDescription:\nYou are given two integer arrays, children and cookies, where children[i] is the greed factor of the ith child, and cookies[j] is the size of the jth cookie. \n\nExample 40: \nLeetCode Problem #456\nTitle: 132 Pattern\nDescription:\nGiven an array of n integers nums, a 132 pattern is a subsequence of three integers nums[i], nums[j], and nums[k] such that \n\nExample 41: \nLeetCode Problem #457\nTitle: Circular Array Loop\nDescription:\nYou are given a circular array nums of positive and negative integers. \n\nExample 42: \nLeetCode Problem #458\nTitle: Poor Pigs\nDescription:\nThere are 1000 buckets, one and only one of them contains poison, the rest are filled with water. \n\nExample 43: \nLeetCode Problem #459\nTitle: Repeated Substring Pattern\nDescription:\nGiven a string s, check if it can be constructed by taking a substring of it and appending multiple copies of the substring together. \n\nExample 44: \nLeetCode Problem #460\nTitle: LFU Cache\nDescription:\nDesign and implement a data structure for a Least Frequently Used (LFU) cache. \n\nExample 45: \nLeetCode Problem #461\nTitle: Hamming Distance\nDescription:\nThe Hamming distance between two integers is the number of positions at which the corresponding bits are different. \n\nExample 46: \nLeetCode Problem #462\nTitle: Minimum Moves to Equal Array Elements II\nDescription:\nGiven an integer array nums of size n, return the minimum number of moves required to make all array elements equal. \n\nExample 47: \nLeetCode Problem #463\nTitle: Island Perimeter\nDescription:\nYou are given row x col grid representing a map where grid[i][j] = 1 represents land and grid[i][j] = 0 represents water. \n\nExample 48: \nLeetCode Problem #464\nTitle: Can I Win\nDescription:\nIn the \"100 game\", two players take turns adding, to a running total, any integer from 1 to 10. \n\nExample 49: \nLeetCode Problem #465\nTitle: Optimal Account Balancing\nDescription:\nYou are given an array transactions where transactions[i] = [from i, to i, amount i ] indicates that the person with ID = from i gave amount i $ to the person with ID = to i. \n\nExample 50: \nLeetCode Problem #466\nTitle: Count The Repetitions\nDescription:\nWe define str = [s, n] as the string str which consists of the string s concatenated n times.", "cleaned_response": " \nPath Sum III\n\nGiven the root of a binary tree and an integer targetSum, return the number of paths where the sum of the values along the path equals targetSum. \n\n \nFind All Anagrams in a String\n\nGiven two strings s and p, return an array of all the start indices of p's anagrams in s. \n\n \nTernary Expression Parser\n\nGiven a string representing arbitrarily nested ternary expressions, calculate the result of the expression. \n\n \nK-th Smallest in Lexicographical Order\n\nGiven two integers n and k, return the kth lexicographically smallest integer in the range from 1 to n. \n\n \nArranging Coins\n\nYou have n coins and you want to build a staircase with these coins. The staircase consists of k rows where the ith row has exactly i coins. \n\n \nFind All Duplicates in an Array\n\nGiven an integer array nums of length n where all the integers of nums are in the range [1, n] and each integer appears once or twice, return an array of all the integers that appears twice. \n\n \nString Compression\n\nGiven an array of characters chars, compress it using the following algorithm. \n\n \nSequence Reconstruction\n\nCheck whether the original sequence org can be uniquely reconstructed from the sequences in seqs. \n\n \nAdd Two Numbers II\n\nYou are given two non-empty linked lists representing two non-negative integers. The most significant digit comes first and each of their nodes contains a single digit. \n\n \nArithmetic Slices II - Subsequence\n\nGiven an integer array nums, return the number of all the arithmetic subsequences of nums. \n\n \nNumber of Boomerangs\n\nYou are given n points in the plane that are all distinct. A boomerang is a tuple of points (i, j, k) such that the distance between i and j equals the distance between i and k (the order of the tuple matters). \n\n \nFind All Numbers Disappeared in an Array\n\nGiven an array nums of n integers where nums[i] is in the range [1, n], return an array of all the integers in the range [1, n] that do not appear in nums. \n\n \nSerialize and Deserialize BST\n\nYou are given the root of a binary search tree (BST), where exactly two nodes of the tree were swapped by mistake. \n\n \nDelete Node in a BST\n\nGiven a root node reference of a BST and a key, delete the node with the given key in the BST. \n\n \nSort Characters By Frequency\n\nGiven a string s, sort it in decreasing order based on the frequency of characters, and return the sorted string. \n\n \nMinimum Number of Arrows to Burst Balloons\n\nThere are some spherical balloons spread in two-dimensional space. For each balloon, provided input is the start and end coordinates of the horizontal diameter. \n\n \nMinimum Moves to Equal Array Elements\n\nGiven an integer array nums of size n, return the minimum number of moves required to make all array elements equal. \n\n \n4Sum II\n\nGiven four integer arrays nums1, nums2, nums3, and nums4, return the number of tuples (i, j, k, l) \n\n \nAssign Cookies\n\nYou are given two integer arrays, children and cookies, where children[i] is the greed factor of the ith child, and cookies[j] is the size of the jth cookie. \n\n \n132 Pattern\n\nGiven an array of n integers nums, a 132 pattern is a subsequence of three integers nums[i], nums[j], and nums[k] such that \n\n \nCircular Array Loop\n\nYou are given a circular array nums of positive and negative integers. \n\n \nPoor Pigs\n\nThere are 1000 buckets, one and only one of them contains poison, the rest are filled with water. \n\n \nRepeated Substring Pattern\n\nGiven a string s, check if it can be constructed by taking a substring of it and appending multiple copies of the substring together. \n\n \nLFU Cache\n\nDesign and implement a data structure for a Least Frequently Used (LFU) cache. \n\n \nHamming Distance\n\nThe Hamming distance between two integers is the number of positions at which the corresponding bits are different. \n\n \nMinimum Moves to Equal Array Elements II\n\nGiven an integer array nums of size n, return the minimum number of moves required to make all array elements equal. \n\n \nIsland Perimeter\n\nYou are given row x col grid representing a map where grid[i][j] = 1 represents land and grid[i][j] = 0 represents water. \n\n \nCan I Win\n\nIn the \"100 game\", two players take turns adding, to a running total, any integer from 1 to 10. \n\n \nOptimal Account Balancing\n\nYou are given an array transactions where transactions[i] = [from i, to i, amount i ] indicates that the person with ID = from i gave amount i $ to the person with ID = to i. \n\n \nCount The Repetitions\n\nWe define str = [s, n] as the string str which consists of the string s concatenated n times.", "similarity": 0.9813647333221153}
{"input_context": "Example 1: \nLeetCode Problem #508\nTitle: Most Frequent Subtree Sum\nDescription:\nGiven the root of a binary tree, return the most frequent subtree sum. If there is a tie, return all the values with the highest frequency in any order. \nExample 2: \nLeetCode Problem #509\nTitle: Fibonacci Number\nDescription:\nThe Fibonacci numbers, commonly denoted F(n) form a sequence, called the Fibonacci sequence, such that each number is the sum of the two preceding ones, starting from 0 and 1. That is,...\n\nExample 3: \nLeetCode Problem #513\nTitle: Find Bottom Left Tree Value\nDescription:\nGiven the root of a binary tree, return the leftmost value in the last row of the tree. \nExample 4: \nLeetCode Problem #514\nTitle: Freedom Trail\nDescription:\nIn the video game Fallout 4, the quest \"Road to Freedom\" requires players to reach a metal dial called the \"Freedom Trail Ring\" and use the dial to spell a specific keyword to open the door. \nExample 5: \nLeetCode Problem #515\nTitle: Find Largest Value in Each Tree Row\nDescription:\nGiven the root of a binary tree, return an array of the largest value in each row of the tree (0-indexed). \nExample 6: \nLeetCode Problem #516\nTitle: Longest Palindromic Subsequence\nDescription:\nGiven a string s, find the longest palindromic subsequence 's length in s. \nExample 7: \nLeetCode Problem #517\nTitle: Super Washing Machines\nDescription:\nYou have n super washing machines on a line. Initially, each washing machine has some dresses or is empty. \nExample 8: \nLeetCode Problem #518\nTitle: Coin Change II\nDescription:\nYou are given an integer array coins representing coins of different denominations and an integer amount representing a total amount of money. \nExample 9: \nLeetCode Problem #519\nTitle: Random Flip Matrix\nDescription:\nThere is an m x n binary grid matrix with all the values set 0 initially. Design an algorithm to randomly pick an index (i, j) where matrix[i][j] == 0 and flips it to 1. All the indices (i, j) where matrix[i][j] == 0 should be equally likely to be returned. \nExample 10: \nLeetCode Problem #520\nTitle: Detect Capital\nDescription:\nWe define the usage of capitals in a word to be right when one of the following cases holds:...\n\nExample 11: \nLeetCode Problem #521\nTitle: Longest Uncommon Subsequence I\nDescription:\nGiven two strings a and b, return the length of the longest uncommon subsequence between a and b. If the longest uncommon subsequence does not exist, return -1. \nExample 12: \nLeetCode Problem #522\nTitle: Longest Uncommon Subsequence II\nDescription:\nGiven an array of strings strs, return the length of the longest uncommon subsequence between them. If the longest uncommon subsequence does not exist, return -1. \nExample 13: \nLeetCode Problem #523\nTitle: Continuous Subarray Sum\nDescription:\nGiven an integer array nums and an integer k, return true if nums has a good subarray or false otherwise. \nExample 14: \nLeetCode Problem #524\nTitle: Longest Word in Dictionary through Deleting\nDescription:\nGiven a string s and a string array dictionary, return the longest string in the dictionary that can be formed by deleting some of the given string characters. If there is more than one possible result, return the longest word with the smallest lexicographical order. If there is no possible result, return the empty string. \nExample 15: \nLeetCode Problem #525\nTitle: Contiguous Array\nDescription:\nGiven a binary array nums, return the maximum length of a contiguous subarray with an equal number of 0 and 1. \nExample 16: \nLeetCode Problem #526\nTitle: Beautiful Arrangement\nDescription:\nSuppose you have n integers labeled 1 through n. A permutation of those n integers perm ( 1-indexed ) is considered a beautiful arrangement if for every i ( 1 <= i <= n ), either of the following is true:...\n\nExample 17: \nLeetCode Problem #528\nTitle: Random Pick with Weight\nDescription:\nYou are given a 0-indexed array of positive integers w where w[i] describes the weight of the i th index. \nExample 18: \nLeetCode Problem #529\nTitle: Minesweeper\nDescription:\nLet's play the minesweeper game ( Wikipedia, online game )!...\n\nExample 19: \nLeetCode Problem #530\nTitle: Minimum Absolute Difference in BST\nDescription:\nGiven the root of a Binary Search Tree (BST), return the minimum absolute difference between the values of any two different nodes in the tree. \nExample 20: \nLeetCode Problem #532\nTitle: K-diff Pairs in an Array\nDescription:\nGiven an array of integers nums and an integer k, return the number of unique k-diff pairs in the array. ", "expected_response": "Example 21: \nLeetCode Problem #535\nTitle: Encode and Decode TinyURL\nDescription:\nNote: This is a companion problem to the System Design problem: Design TinyURL. TinyURL is a URL shortening service where you enter a URL such as https://leetcode. com/problems/design-tinyurl and it returns a short URL such as http://tinyurl. com/4e9iAk. Design a class to encode a URL and decode a tiny URL. \nExample 22: \nLeetCode Problem #537\nTitle: Complex Number Multiplication\nDescription:\nA complex number can be represented as a string on the form \" real + imaginary i\" where:...\n\nExample 23: \nLeetCode Problem #538\nTitle: Convert BST to Greater Tree\nDescription:\nGiven the root of a Binary Search Tree (BST), convert it to a Greater Tree such that every key of the original BST is changed to the original key plus the sum of all keys greater than the original key in BST. \nExample 24: \nLeetCode Problem #539\nTitle: Minimum Time Difference\nDescription:\nGiven a list of 24-hour clock time points in \"HH:MM\" format, return the minimum minutes difference between any two time-points in the list. \nExample 25: \nLeetCode Problem #540\nTitle: Single Element in a Sorted Array\nDescription:\nYou are given a sorted array consisting of only integers where every element appears exactly twice, except for one element which appears exactly once. \nExample 26: \nLeetCode Problem #541\nTitle: Reverse String II\nDescription:\nGiven a string s and an integer k, reverse the first k characters for every 2k characters counting from the start of the string. \nExample 27: \nLeetCode Problem #542\nTitle: 01 Matrix\nDescription:\nGiven an m x n binary matrix mat, return the distance of the nearest 0 for each cell. \nExample 28: \nLeetCode Problem #543\nTitle: Diameter of Binary Tree\nDescription:\nGiven the root of a binary tree, return the length of the diameter of the tree. \nExample 29: \nLeetCode Problem #546\nTitle: Remove Boxes\nDescription:\nYou are given several boxes with different colors represented by different positive numbers. \nExample 30: \nLeetCode Problem #547\nTitle: Number of Provinces\nDescription:\nThere are n cities. Some of them are connected, while some are not. If city a is connected directly with city b, and city b is connected directly with city c, then city a is connected indirectly with city c. \nExample 31: \nLeetCode Problem #551\nTitle: Student Attendance Record I\nDescription:\nYou are given a string s representing an attendance record for a student where each character signifies whether the student was absent, late, or present on that day. The record only contains the following three characters:...\n\nExample 32: \nLeetCode Problem #552\nTitle: Student Attendance Record II\nDescription:\nAn attendance record for a student can be represented as a string where each character signifies whether the student was absent, late, or present on that day. The record only contains the following three characters:...\n\nExample 33: \nLeetCode Problem #553\nTitle: Optimal Division\nDescription:\nYou are given an integer array nums. The adjacent integers in nums will perform the float division. \nExample 34: \nLeetCode Problem #554\nTitle: Brick Wall\nDescription:\nThere is a rectangular brick wall in front of you with n rows of bricks. The i th row has some number of bricks each of the same height (i. e. , one unit) but they can be of different widths. The total width of each row is the same. \nExample 35: \nLeetCode Problem #556\nTitle: Next Greater Element III\nDescription:\nGiven a positive integer n, find the smallest integer which has exactly the same digits existing in the integer n and is greater in value than n. If no such positive integer exists, return -1. \nExample 36: \nLeetCode Problem #557\nTitle: Reverse Words in a String III\nDescription:\nGiven a string s, reverse the order of characters in each word within a sentence while still preserving whitespace and initial word order. \nExample 37: \nLeetCode Problem #558\nTitle: Logical OR of Two Binary Grids Represented as Quad-Trees\nDescription:\nA Binary Matrix is a matrix in which all the elements are either 0 or 1. \nExample 38: \nLeetCode Problem #559\nTitle: Maximum Depth of N-ary Tree\nDescription:\nGiven a n-ary tree, find its maximum depth. \nExample 39: \nLeetCode Problem #560\nTitle: Subarray Sum Equals K\nDescription:\nGiven an array of integers nums and an integer k, return the total number of subarrays whose sum equals to k. \nExample 40: \nLeetCode Problem #561\nTitle: Array Partition\nDescription:\nGiven an integer array nums of 2n integers, group these integers into n pairs (a 1, b 1 ), (a 2, b 2 ),. . . , (a n, b n ) such that the sum of min(a i, b i ) for all i is maximized. Return the maximized sum. ", "iloc": 421, "frontend_question_id": 563.0, "n_pass": 1, "response": "Example 21: \nLeetCode Problem #533\nTitle: Lonely Pixel II\nDescription:\nGiven an m x n picture consisting of black 'B' and white 'W' pixels, return the number of black lonely pixels. \nExample 22: \nLeetCode Problem #534\nTitle: Game Play Analysis III\nDescription:\nSQL SchemaTable: Activity\n+---------------+---------+\n| Column Name   | Type    |\n+---------------+---------+\n| player_id     | int     |\n| device_id     | int     |\n| event_date    | date    |\n| games_played  | int     |\n+---------------+---------+\n(player_id, event_date) is the primary key of this table. This table shows the activity of players of some games. Each row is a record of a player who logged in and played a number of games (possibly 0) before logging out on some calendar day using some device. \nExample 23: \nLeetCode Problem #535\nTitle: Encode and Decode TinyURL\nDescription:\nNote: This is a companion problem to the System Design problem Design TinyURL.If you are using a language that does not have built-in library to perform URL encoding and decoding, please implement the functions by yourself. \n\nExample 24: \nLeetCode Problem #536\nTitle: Construct Binary Tree from String\nDescription:\nGiven a string s represents the serialization of a binary tree, construct a binary tree using this s and return its root. \n\nExample 25: \nLeetCode Problem #537\nTitle: Complex Number Multiplication\nDescription:\nA complex number can be represented as a string on the form \"real+imaginaryi\" where:...\n\nExample 26: \nLeetCode Problem #538\nTitle: Convert BST to Greater Tree\nDescription:\nGiven the root of a Binary Search Tree (BST), convert it to a Greater Tree such that every key of the original BST is changed to the original key plus sum of all keys greater than the original key in BST. \n\nExample 27: \nLeetCode Problem #539\nTitle: Minimum Time Difference\nDescription:\nGiven a list of 24-hour clock time points in \"HH:MM\" format, return the minimum minutes difference between any two time-points in the list. \n\nExample 28: \nLeetCode Problem #540\nTitle: Single Element in a Sorted Array\nDescription:\nYou are given a sorted array consisting of only integers where every element appears exactly twice, except for one element which appears exactly once. Find this single element that appears only once. \n\nExample 29: \nLeetCode Problem #541\nTitle: Reverse String II\nDescription:\nGiven a string s and an integer k, reverse the first k characters for every 2k characters counting from the start of the string. \n\nExample 30: \nLeetCode Problem #542\nTitle: 01 Matrix\nDescription:\nGiven an m x n binary matrix mat, return the distance of the nearest 0 for each cell.", "cleaned_response": " \nLonely Pixel II\n\nGiven an m x n picture consisting of black 'B' and white 'W' pixels, return the number of black lonely pixels. \n \nGame Play Analysis III\n\nSQL SchemaTable: Activity\n+---------------+---------+\n| Column Name   | Type    |\n+---------------+---------+\n| player_id     | int     |\n| device_id     | int     |\n| event_date    | date    |\n| games_played  | int     |\n+---------------+---------+\n(player_id, event_date) is the primary key of this table. This table shows the activity of players of some games. Each row is a record of a player who logged in and played a number of games (possibly 0) before logging out on some calendar day using some device. \n \nEncode and Decode TinyURL\n\nNote: This is a companion problem to the System Design problem Design TinyURL.If you are using a language that does not have built-in library to perform URL encoding and decoding, please implement the functions by yourself. \n\n \nConstruct Binary Tree from String\n\nGiven a string s represents the serialization of a binary tree, construct a binary tree using this s and return its root. \n\n \nComplex Number Multiplication\n\nA complex number can be represented as a string on the form \"real+imaginaryi\" where:...\n\n \nConvert BST to Greater Tree\n\nGiven the root of a Binary Search Tree (BST), convert it to a Greater Tree such that every key of the original BST is changed to the original key plus sum of all keys greater than the original key in BST. \n\n \nMinimum Time Difference\n\nGiven a list of 24-hour clock time points in \"HH:MM\" format, return the minimum minutes difference between any two time-points in the list. \n\n \nSingle Element in a Sorted Array\n\nYou are given a sorted array consisting of only integers where every element appears exactly twice, except for one element which appears exactly once. Find this single element that appears only once. \n\n \nReverse String II\n\nGiven a string s and an integer k, reverse the first k characters for every 2k characters counting from the start of the string. \n\n \n01 Matrix\n\nGiven an m x n binary matrix mat, return the distance of the nearest 0 for each cell.", "similarity": 0.9419116038993504}
{"input_context": "Example 1: \nLeetCode Problem #563\nTitle: Binary Tree Tilt\nDescription:\nGiven the root of a binary tree, return the sum of every tree node's tilt. \nExample 2: \nLeetCode Problem #564\nTitle: Find the Closest Palindrome\nDescription:\nGiven a string n representing an integer, return the closest integer (not including itself), which is a palindrome. If there is a tie, return the smaller one. \nExample 3: \nLeetCode Problem #565\nTitle: Array Nesting\nDescription:\nYou are given an integer array nums of length n where nums is a permutation of the numbers in the range [0, n - 1]. \nExample 4: \nLeetCode Problem #566\nTitle: Reshape the Matrix\nDescription:\nIn MATLAB, there is a handy function called reshape which can reshape an m x n matrix into a new one with a different size r x c keeping its original data. \nExample 5: \nLeetCode Problem #567\nTitle: Permutation in String\nDescription:\nGiven two strings s1 and s2, return true if s2 contains a permutation of s1, or false otherwise. \nExample 6: \nLeetCode Problem #572\nTitle: Subtree of Another Tree\nDescription:\nGiven the roots of two binary trees root and subRoot, return true if there is a subtree of root with the same structure and node values of subRoot and false otherwise. \nExample 7: \nLeetCode Problem #575\nTitle: Distribute Candies\nDescription:\nAlice has n candies, where the i th candy is of type candyType[i]. Alice noticed that she started to gain weight, so she visited a doctor. \nExample 8: \nLeetCode Problem #576\nTitle: Out of Boundary Paths\nDescription:\nThere is an m x n grid with a ball. The ball is initially at the position [startRow, startColumn]. You are allowed to move the ball to one of the four adjacent cells in the grid (possibly out of the grid crossing the grid boundary). You can apply at most maxMove moves to the ball. \nExample 9: \nLeetCode Problem #581\nTitle: Shortest Unsorted Continuous Subarray\nDescription:\nGiven an integer array nums, you need to find one continuous subarray such that if you only sort this subarray in non-decreasing order, then the whole array will be sorted in non-decreasing order. \nExample 10: \nLeetCode Problem #583\nTitle: Delete Operation for Two Strings\nDescription:\nGiven two strings word1 and word2, return the minimum number of steps required to make word1 and word2 the same. \nExample 11: \nLeetCode Problem #587\nTitle: Erect the Fence\nDescription:\nYou are given an array trees where trees[i] = [x i, y i ] represents the location of a tree in the garden. \nExample 12: \nLeetCode Problem #589\nTitle: N-ary Tree Preorder Traversal\nDescription:\nGiven the root of an n-ary tree, return the preorder traversal of its nodes' values. \nExample 13: \nLeetCode Problem #590\nTitle: N-ary Tree Postorder Traversal\nDescription:\nGiven the root of an n-ary tree, return the postorder traversal of its nodes' values. \nExample 14: \nLeetCode Problem #591\nTitle: Tag Validator\nDescription:\nGiven a string representing a code snippet, implement a tag validator to parse the code and return whether it is valid. \nExample 15: \nLeetCode Problem #592\nTitle: Fraction Addition and Subtraction\nDescription:\nGiven a string expression representing an expression of fraction addition and subtraction, return the calculation result in string format. \nExample 16: \nLeetCode Problem #593\nTitle: Valid Square\nDescription:\nGiven the coordinates of four points in 2D space p1, p2, p3 and p4, return true if the four points construct a square. \nExample 17: \nLeetCode Problem #594\nTitle: Longest Harmonious Subsequence\nDescription:\nWe define a harmonious array as an array where the difference between its maximum value and its minimum value is exactly 1. \nExample 18: \nLeetCode Problem #598\nTitle: Range Addition II\nDescription:\nYou are given an m x n matrix M initialized with all 0 's and an array of operations ops, where ops[i] = [a i, b i ] means M[x][y] should be incremented by one for all 0 <= x < a i and 0 <= y < b i. \nExample 19: \nLeetCode Problem #599\nTitle: Minimum Index Sum of Two Lists\nDescription:\nGiven two arrays of strings list1 and list2, find the common strings with the least index sum. \nExample 20: \nLeetCode Problem #600\nTitle: Non-negative Integers without Consecutive Ones\nDescription:\nGiven a positive integer n, return the number of the integers in the range [0, n] whose binary representations do not contain consecutive ones. ", "expected_response": "Example 21: \nLeetCode Problem #605\nTitle: Can Place Flowers\nDescription:\nYou have a long flowerbed in which some of the plots are planted, and some are not. However, flowers cannot be planted in adjacent plots. \nExample 22: \nLeetCode Problem #606\nTitle: Construct String from Binary Tree\nDescription:\nGiven the root of a binary tree, construct a string consisting of parenthesis and integers from a binary tree with the preorder traversal way, and return it. \nExample 23: \nLeetCode Problem #609\nTitle: Find Duplicate File in System\nDescription:\nGiven a list paths of directory info, including the directory path, and all the files with contents in this directory, return all the duplicate files in the file system in terms of their paths. You may return the answer in any order. \nExample 24: \nLeetCode Problem #611\nTitle: Valid Triangle Number\nDescription:\nGiven an integer array nums, return the number of triplets chosen from the array that can make triangles if we take them as side lengths of a triangle. \nExample 25: \nLeetCode Problem #617\nTitle: Merge Two Binary Trees\nDescription:\nYou are given two binary trees root1 and root2. \nExample 26: \nLeetCode Problem #621\nTitle: Task Scheduler\nDescription:\nGiven a characters array tasks, representing the tasks a CPU needs to do, where each letter represents a different task. Tasks could be done in any order. Each task is done in one unit of time. For each unit of time, the CPU could complete either one task or just be idle. \nExample 27: \nLeetCode Problem #622\nTitle: Design Circular Queue\nDescription:\nDesign your implementation of the circular queue. The circular queue is a linear data structure in which the operations are performed based on FIFO (First In First Out) principle, and the last position is connected back to the first position to make a circle. It is also called \"Ring Buffer\". \nExample 28: \nLeetCode Problem #623\nTitle: Add One Row to Tree\nDescription:\nGiven the root of a binary tree and two integers val and depth, add a row of nodes with value val at the given depth depth. \nExample 29: \nLeetCode Problem #628\nTitle: Maximum Product of Three Numbers\nDescription:\nGiven an integer array nums, find three numbers whose product is maximum and return the maximum product. \nExample 30: \nLeetCode Problem #629\nTitle: K Inverse Pairs Array\nDescription:\nFor an integer array nums, an inverse pair is a pair of integers [i, j] where 0 <= i < j < nums.length and nums[i] > nums[j]. \nExample 31: \nLeetCode Problem #630\nTitle: Course Schedule III\nDescription:\nThere are n different online courses numbered from 1 to n. You are given an array courses where courses[i] = [duration i, lastDay i ] indicate that the i th course should be taken continuously for duration i days and must be finished before or on lastDay i. \nExample 32: \nLeetCode Problem #632\nTitle: Smallest Range Covering Elements from K Lists\nDescription:\nYou have k lists of sorted integers in non-decreasing order. Find the smallest range that includes at least one number from each of the k lists. \nExample 33: \nLeetCode Problem #633\nTitle: Sum of Square Numbers\nDescription:\nGiven a non-negative integer c, decide whether there're two integers a and b such that a 2 + b 2 = c. \nExample 34: \nLeetCode Problem #636\nTitle: Exclusive Time of Functions\nDescription:\nOn a single-threaded CPU, we execute a program containing n functions. Each function has a unique ID between 0 and n-1. \nExample 35: \nLeetCode Problem #637\nTitle: Average of Levels in Binary Tree\nDescription:\nGiven the root of a binary tree, return the average value of the nodes on each level in the form of an array. Answers within 10 -5 of the actual answer will be accepted. \nExample 36: \nLeetCode Problem #638\nTitle: Shopping Offers\nDescription:\nIn LeetCode Store, there are n items to sell. Each item has a price. However, there are some special offers, and a special offer consists of one or more different kinds of items with a sale price. \nExample 37: \nLeetCode Problem #639\nTitle: Decode Ways II\nDescription:\nA message containing letters from A-Z can be encoded into numbers using the following mapping:...\n\nExample 38: \nLeetCode Problem #640\nTitle: Solve the Equation\nDescription:\nSolve a given equation and return the value of 'x' in the form of a string \"x=#value\". The equation contains only '+', '-' operation, the variable 'x' and its coefficient. You should return \"No solution\" if there is no solution for the equation, or \"Infinite solutions\" if there are infinite solutions for the equation. \nExample 39: \nLeetCode Problem #641\nTitle: Design Circular Deque\nDescription:\nDesign your implementation of the circular double-ended queue (deque). \nExample 40: \nLeetCode Problem #643\nTitle: Maximum Average Subarray I\nDescription:\nYou are given an integer array nums consisting of n elements, and an integer k. ", "iloc": 461, "frontend_question_id": 645.0, "n_pass": 1, "response": "Example 21: \nLeetCode Problem #601\nTitle: Human Traffic of Stadium\nDescription:\nThere are a total of n people in a stadium, some of them occupying seats and some standing in the aisle. \nExample 22: \nLeetCode Problem #602\nTitle: Friend Requests II: Who Has the Most Friends\nDescription:\nA social network of n friends is represented by a list of integer pairs, where i th pair [u i , v i ] denotes the possibility of direct friendship between u i and v i . \nExample 23: \nLeetCode Problem #603\nTitle: Consecutive Available Seats\nDescription:\nSeveral friends at a cinema ticket office would like to reserve consecutive available seats. \nExample 24: \nLeetCode Problem #604\nTitle: Design Compressed String Iterator\nDescription:\nDesign and implement a data structure for a compressed string iterator. \nExample 25: \nLeetCode Problem #605\nTitle: Can Place Flowers\nDescription:\nYou have a long flowerbed in which some of the plots are planted, and some are not. \nExample 26: \nLeetCode Problem #606\nTitle: Construct String from Binary Tree\nDescription:\nYou need to construct a string consists of parenthesis and integers from a binary tree with the pre-order traversing way. \nExample 27: \nLeetCode Problem #607\nTitle: Sales Person\nDescription:\nGiven two tables: salesperson and company, return the name of the salesperson who sold the most. \nExample 28: \nLeetCode Problem #608\nTitle: Tree Node\nDescription:\nWrite logic for a binary tree, which have following attributes \nExample 29: \nLeetCode Problem #609\nTitle: Find Duplicate File in System\nDescription:\nGiven a list of directory info including directory path, and all the files with contents in this directory, you need to find out all the groups of duplicate files in the file system in terms of their paths. \nExample 30: \nLeetCode Problem #610\nTitle: Triangle Judgement\nDescription:\nA pupil was asked to multiply two numbers. Instead of multiplying, he added those numbers.", "cleaned_response": " \nHuman Traffic of Stadium\n\nThere are a total of n people in a stadium, some of them occupying seats and some standing in the aisle. \n \nFriend Requests II: Who Has the Most Friends\n\nA social network of n friends is represented by a list of integer pairs, where i th pair [u i , v i ] denotes the possibility of direct friendship between u i and v i . \n \nConsecutive Available Seats\n\nSeveral friends at a cinema ticket office would like to reserve consecutive available seats. \n \nDesign Compressed String Iterator\n\nDesign and implement a data structure for a compressed string iterator. \n \nCan Place Flowers\n\nYou have a long flowerbed in which some of the plots are planted, and some are not. \n \nConstruct String from Binary Tree\n\nYou need to construct a string consists of parenthesis and integers from a binary tree with the pre-order traversing way. \n \nSales Person\n\nGiven two tables: salesperson and company, return the name of the salesperson who sold the most. \n \nTree Node\n\nWrite logic for a binary tree, which have following attributes \n \nFind Duplicate File in System\n\nGiven a list of directory info including directory path, and all the files with contents in this directory, you need to find out all the groups of duplicate files in the file system in terms of their paths. \n \nTriangle Judgement\n\nA pupil was asked to multiply two numbers. Instead of multiplying, he added those numbers.", "similarity": 0.9350777909093686}
{"input_context": "Example 1: \nLeetCode Problem #645\nTitle: Set Mismatch\nDescription:\nYou have a set of integers s, which originally contains all the numbers from 1 to n. Unfortunately, due to some error, one of the numbers in s got duplicated to another number in the set, which results in repetition of one number and loss of another number. \nExample 2: \nLeetCode Problem #646\nTitle: Maximum Length of Pair Chain\nDescription:\nYou are given an array of n pairs pairs where pairs[i] = [left i, right i ] and left i < right i. \nExample 3: \nLeetCode Problem #647\nTitle: Palindromic Substrings\nDescription:\nGiven a string s, return the number of palindromic substrings in it. \nExample 4: \nLeetCode Problem #648\nTitle: Replace Words\nDescription:\nIn English, we have a concept called root, which can be followed by some other word to form another longer word - let's call this word successor. For example, when the root \"an\" is followed by the successor word \"other\", we can form a new word \"another\". \nExample 5: \nLeetCode Problem #649\nTitle: Dota2 Senate\nDescription:\nIn the world of Dota2, there are two parties: the Radiant and the Dire. \nExample 6: \nLeetCode Problem #650\nTitle: 2 Keys Keyboard\nDescription:\nThere is only one character 'A' on the screen of a notepad. You can perform one of two operations on this notepad for each step:...\n\nExample 7: \nLeetCode Problem #652\nTitle: Find Duplicate Subtrees\nDescription:\nGiven the root of a binary tree, return all duplicate subtrees. \nExample 8: \nLeetCode Problem #653\nTitle: Two Sum IV - Input is a BST\nDescription:\nGiven the root of a binary search tree and an integer k, return true if there exist two elements in the BST such that their sum is equal to k, or false otherwise. \nExample 9: \nLeetCode Problem #654\nTitle: Maximum Binary Tree\nDescription:\nYou are given an integer array nums with no duplicates. A maximum binary tree can be built recursively from nums using the following algorithm:...\n\nExample 10: \nLeetCode Problem #655\nTitle: Print Binary Tree\nDescription:\nGiven the root of a binary tree, construct a 0-indexed m x n string matrix res that represents a formatted layout of the tree. The formatted layout matrix should be constructed using the following rules:...\n\nExample 11: \nLeetCode Problem #657\nTitle: Robot Return to Origin\nDescription:\nThere is a robot starting at the position (0, 0), the origin, on a 2D plane. Given a sequence of its moves, judge if this robot ends up at (0, 0) after it completes its moves. \nExample 12: \nLeetCode Problem #658\nTitle: Find K Closest Elements\nDescription:\nGiven a sorted integer array arr, two integers k and x, return the k closest integers to x in the array. The result should also be sorted in ascending order. \nExample 13: \nLeetCode Problem #659\nTitle: Split Array into Consecutive Subsequences\nDescription:\nYou are given an integer array nums that is sorted in non-decreasing order. \nExample 14: \nLeetCode Problem #661\nTitle: Image Smoother\nDescription:\nAn image smoother is a filter of the size 3 x 3 that can be applied to each cell of an image by rounding down the average of the cell and the eight surrounding cells (i. e. , the average of the nine cells in the blue smoother). If one or more of the surrounding cells of a cell is not present, we do not consider it in the average (i. e. , the average of the four cells in the red smoother). \nExample 15: \nLeetCode Problem #662\nTitle: Maximum Width of Binary Tree\nDescription:\nGiven the root of a binary tree, return the maximum width of the given tree. \nExample 16: \nLeetCode Problem #664\nTitle: Strange Printer\nDescription:\nThere is a strange printer with the following two special properties:...\n\nExample 17: \nLeetCode Problem #665\nTitle: Non-decreasing Array\nDescription:\nGiven an array nums with n integers, your task is to check if it could become non-decreasing by modifying at most one element. \nExample 18: \nLeetCode Problem #667\nTitle: Beautiful Arrangement II\nDescription:\nGiven two integers n and k, construct a list answer that contains n different positive integers ranging from 1 to n and obeys the following requirement:...\n\nExample 19: \nLeetCode Problem #668\nTitle: Kth Smallest Number in Multiplication Table\nDescription:\nNearly everyone has used the Multiplication Table. The multiplication table of size m x n is an integer matrix mat where mat[i][j] == i * j ( 1-indexed ). \nExample 20: \nLeetCode Problem #669\nTitle: Trim a Binary Search Tree\nDescription:\nGiven the root of a binary search tree and the lowest and highest boundaries as low and high, trim the tree so that all its elements lies in [low, high]. Trimming the tree should not change the relative structure of the elements that will remain in the tree (i. e. , any node's descendant should remain a descendant). It can be proven that there is a unique answer. ", "expected_response": "Example 21: \nLeetCode Problem #670\nTitle: Maximum Swap\nDescription:\nYou are given an integer num. You can swap two digits at most once to get the maximum valued number. \nExample 22: \nLeetCode Problem #671\nTitle: Second Minimum Node In a Binary Tree\nDescription:\nGiven a non-empty special binary tree consisting of nodes with the non-negative value, where each node in this tree has exactly two or zero sub-node. If the node has two sub-nodes, then this node's value is the smaller value among its two sub-nodes. More formally, the property root. val = min(root. left. val, root. right. val) always holds. \nExample 23: \nLeetCode Problem #672\nTitle: Bulb Switcher II\nDescription:\nThere is a room with n bulbs labeled from 1 to n that all are turned on initially, and four buttons on the wall. Each of the four buttons has a different functionality where:...\n\nExample 24: \nLeetCode Problem #673\nTitle: Number of Longest Increasing Subsequence\nDescription:\nGiven an integer array nums, return the number of longest increasing subsequences. \nExample 25: \nLeetCode Problem #674\nTitle: Longest Continuous Increasing Subsequence\nDescription:\nGiven an unsorted array of integers nums, return the length of the longest continuous increasing subsequence (i. e. subarray). The subsequence must be strictly increasing. \nExample 26: \nLeetCode Problem #675\nTitle: Cut Off Trees for Golf Event\nDescription:\nYou are asked to cut off all the trees in a forest for a golf event. The forest is represented as an m x n matrix. In this matrix:...\n\nExample 27: \nLeetCode Problem #676\nTitle: Implement Magic Dictionary\nDescription:\nDesign a data structure that is initialized with a list of different words. Provided a string, you should determine if you can change exactly one character in this string to match any word in the data structure. \nExample 28: \nLeetCode Problem #677\nTitle: Map Sum Pairs\nDescription:\nDesign a map that allows you to do the following:...\n\nExample 29: \nLeetCode Problem #678\nTitle: Valid Parenthesis String\nDescription:\nGiven a string s containing only three types of characters: '(', ')' and '*', return true if s is valid. \nExample 30: \nLeetCode Problem #679\nTitle: 24 Game\nDescription:\nYou are given an integer array cards of length 4. You have four cards, each containing a number in the range [1, 9]. You should arrange the numbers on these cards in a mathematical expression using the operators ['+', '-', '*', '/'] and the parentheses '(' and ')' to get the value 24. \nExample 31: \nLeetCode Problem #680\nTitle: Valid Palindrome II\nDescription:\nGiven a string s, return true if the s can be palindrome after deleting at most one character from it. \nExample 32: \nLeetCode Problem #682\nTitle: Baseball Game\nDescription:\nYou are keeping the scores for a baseball game with strange rules. At the beginning of the game, you start with an empty record. \nExample 33: \nLeetCode Problem #684\nTitle: Redundant Connection\nDescription:\nIn this problem, a tree is an undirected graph that is connected and has no cycles. \nExample 34: \nLeetCode Problem #685\nTitle: Redundant Connection II\nDescription:\nIn this problem, a rooted tree is a directed graph such that, there is exactly one node (the root) for which all other nodes are descendants of this node, plus every node has exactly one parent, except for the root node which has no parents. \nExample 35: \nLeetCode Problem #686\nTitle: Repeated String Match\nDescription:\nGiven two strings a and b, return the minimum number of times you should repeat string a so that string b is a substring of it. If it is impossible for b \u200b\u200b\u200b\u200b\u200b\u200b to be a substring of a after repeating it, return -1. \nExample 36: \nLeetCode Problem #687\nTitle: Longest Univalue Path\nDescription:\nGiven the root of a binary tree, return the length of the longest path, where each node in the path has the same value. This path may or may not pass through the root. \nExample 37: \nLeetCode Problem #688\nTitle: Knight Probability in Chessboard\nDescription:\nOn an n x n chessboard, a knight starts at the cell (row, column) and attempts to make exactly k moves. The rows and columns are 0-indexed, so the top-left cell is (0, 0), and the bottom-right cell is (n - 1, n - 1). \nExample 38: \nLeetCode Problem #689\nTitle: Maximum Sum of 3 Non-Overlapping Subarrays\nDescription:\nGiven an integer array nums and an integer k, find three non-overlapping subarrays of length k with maximum sum and return them. \nExample 39: \nLeetCode Problem #690\nTitle: Employee Importance\nDescription:\nYou have a data structure of employee information, including the employee's unique ID, importance value, and direct subordinates' IDs. \nExample 40: \nLeetCode Problem #691\nTitle: Stickers to Spell Word\nDescription:\nWe are given n different types of stickers. Each sticker has a lowercase English word on it. ", "iloc": 501, "frontend_question_id": 692.0, "n_pass": 1, "response": "Example 21: \nLeetCode Problem #670\nTitle: Maximum Swap\nDescription:\nYou are given an integer num. You can swap two digits at most once to get the maximum valued number. \n\nExample 22: \nLeetCode Problem #671\nTitle: Second Minimum Node In a Binary Tree\nDescription:\nGiven a non-empty special binary tree consisting of nodes with the non-negative value, where each node in this tree has exactly two or zero sub-node. If the node has two sub-nodes, then this node's value is the smaller value among its two sub-nodes. \n\nExample 23: \nLeetCode Problem #672\nTitle: Bulb Switcher II\nDescription:\nThere is a room with n lights that are connected by m switches, each of which is connected to some number of lights. \n\nExample 24: \nLeetCode Problem #674\nTitle: Longest Continuous Increasing Subsequence\nDescription:\nGiven an unsorted array of integers nums, return the length of the longest continuous increasing subsequence (i. e. , subarray). \n\nExample 25: \nLeetCode Problem #676\nTitle: Implement Magic Dictionary\nDescription:\nImplement a magic directory with buildDict, and search methods. \n\nExample 26: \nLeetCode Problem #677\nTitle: Map Sum Pairs\nDescription:\nImplement the MapSum class: \n\nExample 27: \nLeetCode Problem #678\nTitle: Valid Parenthesis String\nDescription:\nGiven a string s containing only three types of characters: '(', ')', and '*', return true if s is valid. \n\nExample 28: \nLeetCode Problem #680\nTitle: Valid Palindrome II\nDescription:\nGiven a string s, return true if the s can be palindrome after deleting at most one character from it. \n\nExample 29: \nLeetCode Problem #681\nTitle: Next Closest Time\nDescription:\nGiven a time represented in the format \"HH:MM\", form the next closest time by reusing the current digits. \n\nExample 30: \nLeetCode Problem #682\nTitle: Baseball Game\nDescription:\nYou are keeping score for a baseball game with strange rules.", "cleaned_response": " \nMaximum Swap\n\nYou are given an integer num. You can swap two digits at most once to get the maximum valued number. \n\n \nSecond Minimum Node In a Binary Tree\n\nGiven a non-empty special binary tree consisting of nodes with the non-negative value, where each node in this tree has exactly two or zero sub-node. If the node has two sub-nodes, then this node's value is the smaller value among its two sub-nodes. \n\n \nBulb Switcher II\n\nThere is a room with n lights that are connected by m switches, each of which is connected to some number of lights. \n\n \nLongest Continuous Increasing Subsequence\n\nGiven an unsorted array of integers nums, return the length of the longest continuous increasing subsequence (i. e. , subarray). \n\n \nImplement Magic Dictionary\n\nImplement a magic directory with buildDict, and search methods. \n\n \nMap Sum Pairs\n\nImplement the MapSum class: \n\n \nValid Parenthesis String\n\nGiven a string s containing only three types of characters: '(', ')', and '*', return true if s is valid. \n\n \nValid Palindrome II\n\nGiven a string s, return true if the s can be palindrome after deleting at most one character from it. \n\n \nNext Closest Time\n\nGiven a time represented in the format \"HH:MM\", form the next closest time by reusing the current digits. \n\n \nBaseball Game\n\nYou are keeping score for a baseball game with strange rules.", "similarity": 0.958825289858467}
{"input_context": "Example 1: \nLeetCode Problem #692\nTitle: Top K Frequent Words\nDescription:\nGiven an array of strings words and an integer k, return the k most frequent strings. \nExample 2: \nLeetCode Problem #693\nTitle: Binary Number with Alternating Bits\nDescription:\nGiven a positive integer, check whether it has alternating bits: namely, if two adjacent bits will always have different values. \nExample 3: \nLeetCode Problem #695\nTitle: Max Area of Island\nDescription:\nYou are given an m x n binary matrix grid. An island is a group of 1 's (representing land) connected 4-directionally (horizontal or vertical. ) You may assume all four edges of the grid are surrounded by water. \nExample 4: \nLeetCode Problem #696\nTitle: Count Binary Substrings\nDescription:\nGiven a binary string s, return the number of non-empty substrings that have the same number of 0 's and 1 's, and all the 0 's and all the 1 's in these substrings are grouped consecutively. \nExample 5: \nLeetCode Problem #697\nTitle: Degree of an Array\nDescription:\nGiven a non-empty array of non-negative integers nums, the degree of this array is defined as the maximum frequency of any one of its elements. \nExample 6: \nLeetCode Problem #698\nTitle: Partition to K Equal Sum Subsets\nDescription:\nGiven an integer array nums and an integer k, return true if it is possible to divide this array into k non-empty subsets whose sums are all equal. \nExample 7: \nLeetCode Problem #699\nTitle: Falling Squares\nDescription:\nThere are several squares being dropped onto the X-axis of a 2D plane. \nExample 8: \nLeetCode Problem #700\nTitle: Search in a Binary Search Tree\nDescription:\nYou are given the root of a binary search tree (BST) and an integer val. \nExample 9: \nLeetCode Problem #701\nTitle: Insert into a Binary Search Tree\nDescription:\nYou are given the root node of a binary search tree (BST) and a value to insert into the tree. Return the root node of the BST after the insertion. It is guaranteed that the new value does not exist in the original BST. \nExample 10: \nLeetCode Problem #703\nTitle: Kth Largest Element in a Stream\nDescription:\nDesign a class to find the k th largest element in a stream. Note that it is the k th largest element in the sorted order, not the k th distinct element. \nExample 11: \nLeetCode Problem #704\nTitle: Binary Search\nDescription:\nGiven an array of integers nums which is sorted in ascending order, and an integer target, write a function to search target in nums. If target exists, then return its index. Otherwise, return -1. \nExample 12: \nLeetCode Problem #705\nTitle: Design HashSet\nDescription:\nDesign a HashSet without using any built-in hash table libraries. \nExample 13: \nLeetCode Problem #706\nTitle: Design HashMap\nDescription:\nDesign a HashMap without using any built-in hash table libraries. \nExample 14: \nLeetCode Problem #707\nTitle: Design Linked List\nDescription:\nDesign your implementation of the linked list. You can choose to use a singly or doubly linked list. A node in a singly linked list should have two attributes: val and next. val is the value of the current node, and next is a pointer/reference to the next node. If you want to use the doubly linked list, you will need one more attribute prev to indicate the previous node in the linked list. Assume all nodes in the linked list are 0-indexed. \nExample 15: \nLeetCode Problem #709\nTitle: To Lower Case\nDescription:\nGiven a string s, return the string after replacing every uppercase letter with the same lowercase letter. \nExample 16: \nLeetCode Problem #710\nTitle: Random Pick with Blacklist\nDescription:\nYou are given an integer n and an array of unique integers blacklist. Design an algorithm to pick a random integer in the range [0, n - 1] that is not in blacklist. Any integer that is in the mentioned range and not in blacklist should be equally likely to be returned. \nExample 17: \nLeetCode Problem #712\nTitle: Minimum ASCII Delete Sum for Two Strings\nDescription:\nGiven two strings s1 and s2, return the lowest ASCII sum of deleted characters to make two strings equal. \nExample 18: \nLeetCode Problem #713\nTitle: Subarray Product Less Than K\nDescription:\nGiven an array of integers nums and an integer k, return the number of contiguous subarrays where the product of all the elements in the subarray is strictly less than k. \nExample 19: \nLeetCode Problem #714\nTitle: Best Time to Buy and Sell Stock with Transaction Fee\nDescription:\nYou are given an array prices where prices[i] is the price of a given stock on the i th day, and an integer fee representing a transaction fee. \nExample 20: \nLeetCode Problem #715\nTitle: Range Module\nDescription:\nA Range Module is a module that tracks ranges of numbers. Design a data structure to track the ranges represented as half-open intervals and query about them. ", "expected_response": "Example 21: \nLeetCode Problem #717\nTitle: 1-bit and 2-bit Characters\nDescription:\nWe have two special characters:...\n\nExample 22: \nLeetCode Problem #718\nTitle: Maximum Length of Repeated Subarray\nDescription:\nGiven two integer arrays nums1 and nums2, return the maximum length of a subarray that appears in both arrays. \nExample 23: \nLeetCode Problem #719\nTitle: Find K-th Smallest Pair Distance\nDescription:\nThe distance of a pair of integers a and b is defined as the absolute difference between a and b. \nExample 24: \nLeetCode Problem #720\nTitle: Longest Word in Dictionary\nDescription:\nGiven an array of strings words representing an English Dictionary, return the longest word in words that can be built one character at a time by other words in words. \nExample 25: \nLeetCode Problem #721\nTitle: Accounts Merge\nDescription:\nGiven a list of accounts where each element accounts[i] is a list of strings, where the first element accounts[i][0] is a name, and the rest of the elements are emails representing emails of the account. \nExample 26: \nLeetCode Problem #722\nTitle: Remove Comments\nDescription:\nGiven a C++ program, remove comments from it. The program source is an array of strings source where source[i] is the i th line of the source code. This represents the result of splitting the original source code string by the newline character '\\n'. \nExample 27: \nLeetCode Problem #724\nTitle: Find Pivot Index\nDescription:\nGiven an array of integers nums, calculate the pivot index of this array. \nExample 28: \nLeetCode Problem #725\nTitle: Split Linked List in Parts\nDescription:\nGiven the head of a singly linked list and an integer k, split the linked list into k consecutive linked list parts. \nExample 29: \nLeetCode Problem #726\nTitle: Number of Atoms\nDescription:\nGiven a string formula representing a chemical formula, return the count of each atom. \nExample 30: \nLeetCode Problem #728\nTitle: Self Dividing Numbers\nDescription:\nA self-dividing number is a number that is divisible by every digit it contains. \nExample 31: \nLeetCode Problem #729\nTitle: My Calendar I\nDescription:\nYou are implementing a program to use as your calendar. We can add a new event if adding the event will not cause a double booking. \nExample 32: \nLeetCode Problem #730\nTitle: Count Different Palindromic Subsequences\nDescription:\nGiven a string s, return the number of different non-empty palindromic subsequences in s. Since the answer may be very large, return it modulo 10e9 + 7. \nExample 33: \nLeetCode Problem #731\nTitle: My Calendar II\nDescription:\nYou are implementing a program to use as your calendar. We can add a new event if adding the event will not cause a triple booking. \nExample 34: \nLeetCode Problem #732\nTitle: My Calendar III\nDescription:\nA k -booking happens when k events have some non-empty intersection (i. e. , there is some time that is common to all k events. )...\n\nExample 35: \nLeetCode Problem #733\nTitle: Flood Fill\nDescription:\nAn image is represented by an m x n integer grid image where image[i][j] represents the pixel value of the image. \nExample 36: \nLeetCode Problem #735\nTitle: Asteroid Collision\nDescription:\nWe are given an array asteroids of integers representing asteroids in a row. \nExample 37: \nLeetCode Problem #736\nTitle: Parse Lisp Expression\nDescription:\nYou are given a string expression representing a Lisp-like expression to return the integer value of. \nExample 38: \nLeetCode Problem #738\nTitle: Monotone Increasing Digits\nDescription:\nAn integer has monotone increasing digits if and only if each pair of adjacent digits x and y satisfy x <= y. \nExample 39: \nLeetCode Problem #739\nTitle: Daily Temperatures\nDescription:\nGiven an array of integers temperatures represents the daily temperatures, return an array answer such that answer[i] is the number of days you have to wait after the i th day to get a warmer temperature. If there is no future day for which this is possible, keep answer[i] == 0 instead. \nExample 40: \nLeetCode Problem #740\nTitle: Delete and Earn\nDescription:\nYou are given an integer array nums. You want to maximize the number of points you get by performing the following operation any number of times:...\n", "iloc": 541, "frontend_question_id": 741.0, "n_pass": 1, "response": "Example 21: \nLeetCode Problem #716\nTitle: Max Stack\nDescription:\nDesign a max stack that supports push, pop, top, peekMax and popMax operations. \nExample 22: \nLeetCode Problem #717\nTitle: 1-bit and 2-bit Characters\nDescription:\nWe have two special characters. The first character can be represented by one bit 0. The second character can be represented by two bits (10 or 11). \nExample 23: \nLeetCode Problem #718\nTitle: Maximum Length of Repeated Subarray\nDescription:\nGiven two integer arrays nums1 and nums2, return the maximum length of a subarray that appears in both arrays. \nExample 24: \nLeetCode Problem #719\nTitle: Find K-th Smallest Pair Distance\nDescription:\nThe pair (u, v) is a pair of distinct indices in the array, such that the difference between nums[u] and nums[v] is large as possible. \nExample 25: \nLeetCode Problem #720\nTitle: Longest Word in Dictionary\nDescription:\nGiven an array of strings words representing an English Dictionary, return the longest word in words that can be built one character at a time by other words in words. \nExample 26: \nLeetCode Problem #721\nTitle: Accounts Merge\nDescription:\nGiven a list accounts, each element accounts[i] is a list of strings, where the first element accounts[i][0] is a name, and the rest of the elements are emails representing emails of the account. \nExample 27: \nLeetCode Problem #722\nTitle: Remove Comments\nDescription:\nGiven a C program, remove comments from it. Return the final source code. \nExample 28: \nLeetCode Problem #723\nTitle: Candy Crush\nDescription:\nThis question is about implementing a basic elimination algorithm for Candy Crush. \nExample 29: \nLeetCode Problem #724\nTitle: Find Pivot Index\nDescription:\nGiven an array of integers nums, calculate the pivot index of this array. \nExample 30: \nLeetCode Problem #726\nTitle: Number of Atoms\nDescription:\nGiven a chemical formula (given as a string), return the count of each atom.\nExample 31: \nLeetCode Problem #728\nTitle: Self Dividing Numbers\nDescription:\nA number is called a self-dividing number if it is divisible by every digit it contains, including itself. \nExample 32: \nLeetCode Problem #729\nTitle: My Calendar I\nDescription:\nYou are implementing a program to use as your calendar. We can add a new event if adding the event will not cause a double booking. \nExample 33: \nLeetCode Problem #730\nTitle: Count Different Palindromic Subsequences\nDescription:\nGiven a string s, find the number of different non-empty palindromic subsequences in s. \nExample 34: \nLeetCode Problem #731\nTitle: My Calendar II\nDescription:\nYou are implementing a program to use as your calendar. We can add a new event if adding the event will not cause a triple booking. \nExample 35: \nLeetCode Problem #732\nTitle: My Calendar III\nDescription:\nYou are implementing a program to use as your calendar. We can add a new event if adding the event will not cause a quadruple booking. \nExample 36: \nLeetCode Problem #733\nTitle: Flood Fill\nDescription:\nAn image is represented by an m x n integer grid image where image[i][j] represents the pixel value of the image. \nExample 37: \nLeetCode Problem #734\nTitle: Sentence Similarity\nDescription:\nGiven two sentences sentence1 and sentence2, return true if sentence1 and sentence2 are similar. \nExample 38: \nLeetCode Problem #735\nTitle: Asteroid Collision\nDescription:\nWe are given an array asteroids of integers representing asteroids in a row. \nExample 39: \nLeetCode Problem #736\nTitle: Parse Lisp Expression\nDescription:\nYou are given a string expression representing a Lisp-like expression to return the integer value of. \nExample 40: \nLeetCode Problem #737\nTitle: Sentence Similarity II\nDescription:\nGiven two sentences words1, words2 (each represented as an array of strings), and a list of similar word pairs pairs, determine if two sentences are similar.", "cleaned_response": " \nMax Stack\n\nDesign a max stack that supports push, pop, top, peekMax and popMax operations. \n \n1-bit and 2-bit Characters\n\nWe have two special characters. The first character can be represented by one bit 0. The second character can be represented by two bits (10 or 11). \n \nMaximum Length of Repeated Subarray\n\nGiven two integer arrays nums1 and nums2, return the maximum length of a subarray that appears in both arrays. \n \nFind K-th Smallest Pair Distance\n\nThe pair (u, v) is a pair of distinct indices in the array, such that the difference between nums[u] and nums[v] is large as possible. \n \nLongest Word in Dictionary\n\nGiven an array of strings words representing an English Dictionary, return the longest word in words that can be built one character at a time by other words in words. \n \nAccounts Merge\n\nGiven a list accounts, each element accounts[i] is a list of strings, where the first element accounts[i][0] is a name, and the rest of the elements are emails representing emails of the account. \n \nRemove Comments\n\nGiven a C program, remove comments from it. Return the final source code. \n \nCandy Crush\n\nThis question is about implementing a basic elimination algorithm for Candy Crush. \n \nFind Pivot Index\n\nGiven an array of integers nums, calculate the pivot index of this array. \n \nNumber of Atoms\n\nGiven a chemical formula (given as a string), return the count of each atom.\n \nSelf Dividing Numbers\n\nA number is called a self-dividing number if it is divisible by every digit it contains, including itself. \n \nMy Calendar I\n\nYou are implementing a program to use as your calendar. We can add a new event if adding the event will not cause a double booking. \n \nCount Different Palindromic Subsequences\n\nGiven a string s, find the number of different non-empty palindromic subsequences in s. \n \nMy Calendar II\n\nYou are implementing a program to use as your calendar. We can add a new event if adding the event will not cause a triple booking. \n \nMy Calendar III\n\nYou are implementing a program to use as your calendar. We can add a new event if adding the event will not cause a quadruple booking. \n \nFlood Fill\n\nAn image is represented by an m x n integer grid image where image[i][j] represents the pixel value of the image. \n \nSentence Similarity\n\nGiven two sentences sentence1 and sentence2, return true if sentence1 and sentence2 are similar. \n \nAsteroid Collision\n\nWe are given an array asteroids of integers representing asteroids in a row. \n \nParse Lisp Expression\n\nYou are given a string expression representing a Lisp-like expression to return the integer value of. \n \nSentence Similarity II\n\nGiven two sentences words1, words2 (each represented as an array of strings), and a list of similar word pairs pairs, determine if two sentences are similar.", "similarity": 0.9743157803584473}
{"input_context": "Example 1: \nLeetCode Problem #741\nTitle: Cherry Pickup\nDescription:\nYou are given an n x n grid representing a field of cherries, each cell is one of three possible integers. \nExample 2: \nLeetCode Problem #743\nTitle: Network Delay Time\nDescription:\nYou are given a network of n nodes, labeled from 1 to n. You are also given times, a list of travel times as directed edges times[i] = (u i, v i, w i ), where u i is the source node, v i is the target node, and w i is the time it takes for a signal to travel from source to target. \nExample 3: \nLeetCode Problem #744\nTitle: Find Smallest Letter Greater Than Target\nDescription:\nYou are given an array of characters letters that is sorted in non-decreasing order, and a character target. There are at least two different characters in letters. \nExample 4: \nLeetCode Problem #745\nTitle: Prefix and Suffix Search\nDescription:\nDesign a special dictionary that searches the words in it by a prefix and a suffix. \nExample 5: \nLeetCode Problem #746\nTitle: Min Cost Climbing Stairs\nDescription:\nYou are given an integer array cost where cost[i] is the cost of i th step on a staircase. Once you pay the cost, you can either climb one or two steps. \nExample 6: \nLeetCode Problem #747\nTitle: Largest Number At Least Twice of Others\nDescription:\nYou are given an integer array nums where the largest integer is unique. \nExample 7: \nLeetCode Problem #748\nTitle: Shortest Completing Word\nDescription:\nGiven a string licensePlate and an array of strings words, find the shortest completing word in words. \nExample 8: \nLeetCode Problem #749\nTitle: Contain Virus\nDescription:\nA virus is spreading rapidly, and your task is to quarantine the infected area by installing walls. \nExample 9: \nLeetCode Problem #752\nTitle: Open the Lock\nDescription:\nYou have a lock in front of you with 4 circular wheels. Each wheel has 10 slots: '0', '1', '2', '3', '4', '5', '6', '7', '8', '9'. The wheels can rotate freely and wrap around: for example we can turn '9' to be '0', or '0' to be '9'. Each move consists of turning one wheel one slot. \nExample 10: \nLeetCode Problem #753\nTitle: Cracking the Safe\nDescription:\nThere is a safe protected by a password. The password is a sequence of n digits where each digit can be in the range [0, k - 1]. \nExample 11: \nLeetCode Problem #754\nTitle: Reach a Number\nDescription:\nYou are standing at position 0 on an infinite number line. There is a destination at position target. \nExample 12: \nLeetCode Problem #756\nTitle: Pyramid Transition Matrix\nDescription:\nYou are stacking blocks to form a pyramid. Each block has a color, which is represented by a single letter. Each row of blocks contains one less block than the row beneath it and is centered on top. \nExample 13: \nLeetCode Problem #757\nTitle: Set Intersection Size At Least Two\nDescription:\nYou are given a 2D integer array intervals where intervals[i] = [start i, end i ] represents all the integers from start i to end i inclusively. \nExample 14: \nLeetCode Problem #761\nTitle: Special Binary String\nDescription:\nSpecial binary strings are binary strings with the following two properties:...\n\nExample 15: \nLeetCode Problem #762\nTitle: Prime Number of Set Bits in Binary Representation\nDescription:\nGiven two integers left and right, return the count of numbers in the inclusive range [left, right] having a prime number of set bits in their binary representation. \nExample 16: \nLeetCode Problem #763\nTitle: Partition Labels\nDescription:\nYou are given a string s. We want to partition the string into as many parts as possible so that each letter appears in at most one part. \nExample 17: \nLeetCode Problem #764\nTitle: Largest Plus Sign\nDescription:\nYou are given an integer n. You have an n x n binary grid grid with all values initially 1 's except for some indices given in the array mines. The i th element of the array mines is defined as mines[i] = [x i, y i ] where grid[x i ][y i ] == 0. \nExample 18: \nLeetCode Problem #765\nTitle: Couples Holding Hands\nDescription:\nThere are n couples sitting in 2n seats arranged in a row and want to hold hands. \nExample 19: \nLeetCode Problem #766\nTitle: Toeplitz Matrix\nDescription:\nGiven an m x n matrix, return true if the matrix is Toeplitz. Otherwise, return false. \nExample 20: \nLeetCode Problem #767\nTitle: Reorganize String\nDescription:\nGiven a string s, rearrange the characters of s so that any two adjacent characters are not the same. ", "expected_response": "Example 21: \nLeetCode Problem #768\nTitle: Max Chunks To Make Sorted II\nDescription:\nYou are given an integer array arr. \nExample 22: \nLeetCode Problem #769\nTitle: Max Chunks To Make Sorted\nDescription:\nYou are given an integer array arr of length n that represents a permutation of the integers in the range [0, n - 1]. \nExample 23: \nLeetCode Problem #770\nTitle: Basic Calculator IV\nDescription:\nGiven an expression such as expression = \"e + 8 - a + 5\" and an evaluation map such as {\"e\": 1} (given in terms of evalvars = [\"e\"] and evalints = [1] ), return a list of tokens representing the simplified expression, such as [\"-1*a\", \"14\"]...\n\nExample 24: \nLeetCode Problem #771\nTitle: Jewels and Stones\nDescription:\nYou're given strings jewels representing the types of stones that are jewels, and stones representing the stones you have. Each character in stones is a type of stone you have. You want to know how many of the stones you have are also jewels. \nExample 25: \nLeetCode Problem #773\nTitle: Sliding Puzzle\nDescription:\nOn an 2 x 3 board, there are five tiles labeled from 1 to 5, and an empty square represented by 0. A move consists of choosing 0 and a 4-directionally adjacent number and swapping it. \nExample 26: \nLeetCode Problem #775\nTitle: Global and Local Inversions\nDescription:\nYou are given an integer array nums of length n which represents a permutation of all the integers in the range [0, n - 1]. \nExample 27: \nLeetCode Problem #777\nTitle: Swap Adjacent in LR String\nDescription:\nIn a string composed of 'L', 'R', and 'X' characters, like \"RXXLRXRXL\", a move consists of either replacing one occurrence of \"XL\" with \"LX\", or replacing one occurrence of \"RX\" with \"XR\". Given the starting string start and the ending string end, return True if and only if there exists a sequence of moves to transform one string to the other. \nExample 28: \nLeetCode Problem #778\nTitle: Swim in Rising Water\nDescription:\nYou are given an n x n integer matrix grid where each value grid[i][j] represents the elevation at that point (i, j). \nExample 29: \nLeetCode Problem #779\nTitle: K-th Symbol in Grammar\nDescription:\nWe build a table of n rows ( 1-indexed ). We start by writing 0 in the 1 st row. Now in every subsequent row, we look at the previous row and replace each occurrence of 0 with 01, and each occurrence of 1 with 10. \nExample 30: \nLeetCode Problem #780\nTitle: Reaching Points\nDescription:\nGiven four integers sx, sy, tx, and ty, return true if it is possible to convert the point (sx, sy) to the point (tx, ty) through some operations, or false otherwise. \nExample 31: \nLeetCode Problem #781\nTitle: Rabbits in Forest\nDescription:\nThere is a forest with an unknown number of rabbits. We asked n rabbits \"How many rabbits have the same color as you?\" and collected the answers in an integer array answers where answers[i] is the answer of the i th rabbit. \nExample 32: \nLeetCode Problem #782\nTitle: Transform to Chessboard\nDescription:\nYou are given an n x n binary grid board. In each move, you can swap any two rows with each other, or any two columns with each other. \nExample 33: \nLeetCode Problem #783\nTitle: Minimum Distance Between BST Nodes\nDescription:\nGiven the root of a Binary Search Tree (BST), return the minimum difference between the values of any two different nodes in the tree. \nExample 34: \nLeetCode Problem #784\nTitle: Letter Case Permutation\nDescription:\nGiven a string s, you can transform every letter individually to be lowercase or uppercase to create another string. \nExample 35: \nLeetCode Problem #785\nTitle: Is Graph Bipartite?\nDescription:\nThere is an undirected graph with n nodes, where each node is numbered between 0 and n - 1. You are given a 2D array graph, where graph[u] is an array of nodes that node u is adjacent to. More formally, for each v in graph[u], there is an undirected edge between node u and node v. The graph has the following properties:...\n\nExample 36: \nLeetCode Problem #786\nTitle: K-th Smallest Prime Fraction\nDescription:\nYou are given a sorted integer array arr containing 1 and prime numbers, where all the integers of arr are unique. You are also given an integer k. \nExample 37: \nLeetCode Problem #787\nTitle: Cheapest Flights Within K Stops\nDescription:\nThere are n cities connected by some number of flights. You are given an array flights where flights[i] = [from i, to i, price i ] indicates that there is a flight from city from i to city to i with cost price i. \nExample 38: \nLeetCode Problem #788\nTitle: Rotated Digits\nDescription:\nAn integer x is a good if after rotating each digit individually by 180 degrees, we get a valid number that is different from x. Each digit must be rotated - we cannot choose to leave it alone. \nExample 39: \nLeetCode Problem #789\nTitle: Escape The Ghosts\nDescription:\nYou are playing a simplified PAC-MAN game on an infinite 2-D grid. You start at the point [0, 0], and you are given a destination point target = [x target, y target ] that you are trying to get to. There are several ghosts on the map with their starting positions given as a 2D array ghosts, where ghosts[i] = [x i, y i ] represents the starting position of the i th ghost. All inputs are integral coordinates. \nExample 40: \nLeetCode Problem #790\nTitle: Domino and Tromino Tiling\nDescription:\nYou have two types of tiles: a 2 x 1 domino shape and a tromino shape. You may rotate these shapes. ", "iloc": 581, "frontend_question_id": 791.0, "n_pass": 1, "response": "Example 21: \nLeetCode Problem #768\nTitle: Max Chunks To Make Sorted II\nDescription:\nGiven an array arr of integers (not necessarily distinct), we split the array into some number of \"chunks\" (partitions), and individually sort each chunk. \n\nExample 22: \nLeetCode Problem #769\nTitle: Max Chunks To Make Sorted\nDescription:\nGiven an array arr that is a permutation of [0, 1, ..., arr.length - 1], we split the array into some number of \"chunks\" (partitions), and individually sort each chunk. \n\nExample 23: \nLeetCode Problem #770\nTitle: Basic Calculator IV\nDescription:\nImplement a basic calculator to evaluate a simple expression string. \n\nExample 24: \nLeetCode Problem #771\nTitle: Jewels and Stones\nDescription:\nYou're given strings jewels representing the types of stones that are jewels, and stones representing the stones you have. \n\nExample 25: \nLeetCode Problem #772\nTitle: Basic Calculator III\nDescription:\nImplement a basic calculator to evaluate a simple expression string. \n\nExample 26: \nLeetCode Problem #773\nTitle: Sliding Puzzle\nDescription:\nYou are given a 2 x 3 sliding puzzle board, represented by a 2D array. \n\nExample 27: \nLeetCode Problem #774\nTitle: Minimize Max Distance to Gas Station\nDescription:\nYou are given an integer array stations that represents the positions of the gas stations on the x-axis. \n\nExample 28: \nLeetCode Problem #775\nTitle: Global and Local Inversions\nDescription:\nYou are given an integer array nums of length n which represents a permutation of all the integers in the range [0, n - 1]. \n\nExample 29: \nLeetCode Problem #776\nTitle: Split BST\nDescription:\nGiven the root of a binary search tree (BST) and an integer target, split the tree into two subtrees. \n\nExample 30: \nLeetCode Problem #777\nTitle: Swap Adjacent in LR String\nDescription:\nIn a string composed of 'L', 'R', and 'X' characters, like \"RXXLRXRXL\", a move consists of either replacing one occurrence of \"XL\" with \"LX\", or replacing one occurrence of \"RX\" with \"XR\". \n\nExample 31: \nLeetCode Problem #778\nTitle: Swim in Rising Water\nDescription:\nYou are given an n x n integer matrix grid where each value grid[i][j] represents the elevation at that point (i, j). \n\nExample 32: \nLeetCode Problem #779\nTitle: K-th Symbol in Grammar\nDescription:\nOn the first row, we write a 0. Now in every subsequent row, we look at the previous row and replace each occurrence of 0 with 01, and each occurrence of 1 with 10. \n\nExample 33: \nLeetCode Problem #780\nTitle: Reaching Points\nDescription:\nA move consists of taking a point (x, y) and transforming it to either (x, x + y) or (x + y, y). \n\nExample 34: \nLeetCode Problem #781\nTitle: Rabbits in Forest\nDescription:\nThere is a forest with an unknown number of rabbits. We asked n rabbits \"How many rabbits have the same color as you?\" and collected the answers in an integer array answers where answers[i] is the answer of the i th rabbit. \n\nExample 35: \nLeetCode Problem #782\nTitle: Transform to Chessboard\nDescription:\nYou are given an n x n binary grid board. In each move, you can swap any two rows with each other, or any two columns with each other. \n\nExample 36: \nLeetCode Problem #783\nTitle: Minimum Distance Between BST Nodes\nDescription:\nGiven the root of a Binary Search Tree (BST), return the minimum difference between the values of any two different nodes in the tree. \n\nExample 37: \nLeetCode Problem #784\nTitle: Letter Case Permutation\nDescription:\nGiven a string s, we can transform every letter individually to be lowercase or uppercase to create another string. \n\nExample 38: \nLeetCode Problem #785\nTitle: Is Graph Bipartite?\nDescription:\nGiven an undirected graph, return true if and only if it is bipartite. \n\nExample 39: \nLeetCode Problem #786\nTitle: K-th Smallest Prime Fraction\nDescription:\nYou are given a sorted integer array arr containing only unique integers from 1 to n. \n\nExample 40: \nLeetCode Problem #787\nTitle: Cheapest Flights Within K Stops\nDescription:\nThere are n cities connected by some number of flights. You are given an array flights where flights[i] = [from i, to i, price i ] indicates that there is a flight from city from i to city to i with cost price i . \n\nExample 41: \nLeetCode Problem #788\nTitle: Rotated Digits\nDescription:\nAn integer x is a good if after rotating each digit individually by 180 degrees, we get a valid number that is different from x. \n\nExample 42: \nLeetCode Problem #789\nTitle: Escape The Ghosts\nDescription:\nYou are playing a simplified Pacman game. \n\nExample 43: \nLeetCode Problem #790\nTitle: Domino and Tromino Tiling\nDescription:\nWe have two types of tiles: a 2 x 1 domino shape, and an \"L\" tromino shape. \n\nExample 44: \nLeetCode Problem #791\nTitle: Custom Sort String\nDescription:\nYou are given two strings order and s. All the words of s are unique and each word consists of lowercase letters only. \n\nExample 45: \nLeetCode Problem #792\nTitle: Number of Matching Subsequences\nDescription:\nGiven a string s and an array of strings words, return the number of words[i] that is a subsequence of s. \n\nExample 46: \nLeetCode Problem #793\nTitle: Preimage Size of Factorial Zeroes Function\nDescription:\nLet f(x) be the number of zeroes at the end of x!. \n\nExample 47: \nLeetCode Problem #794\nTitle: Valid Tic-Tac-Toe State\nDescription:\nGiven a Tic-Tac-Toe board as a string array board, return true if and only if it is possible to reach this board position during the course of a valid tic-tac-toe game. \n\nExample 48: \nLeetCode Problem #795\nTitle: Number of Subarrays with Bounded Maximum\nDescription:\nGiven an integer array nums and two integers left and right, return the number of contiguous non-empty subarrays such that the value of the maximum array element in that subarray is in the range [left, right]. \n\nExample 49: \nLeetCode Problem #796\nTitle: Rotate String\nDescription:\nYou are given two strings s and goal. \n\nExample 50: \nLeetCode Problem #797\nTitle: All Paths From Source to Target\nDescription:\nGiven a directed acyclic graph (DAG) of n nodes labeled from 0 to n - 1, find all possible paths from node 0 to node n - 1, and return them in any order.", "cleaned_response": " \nMax Chunks To Make Sorted II\n\nGiven an array arr of integers (not necessarily distinct), we split the array into some number of \"chunks\" (partitions), and individually sort each chunk. \n\n \nMax Chunks To Make Sorted\n\nGiven an array arr that is a permutation of [0, 1, ..., arr.length - 1], we split the array into some number of \"chunks\" (partitions), and individually sort each chunk. \n\n \nBasic Calculator IV\n\nImplement a basic calculator to evaluate a simple expression string. \n\n \nJewels and Stones\n\nYou're given strings jewels representing the types of stones that are jewels, and stones representing the stones you have. \n\n \nBasic Calculator III\n\nImplement a basic calculator to evaluate a simple expression string. \n\n \nSliding Puzzle\n\nYou are given a 2 x 3 sliding puzzle board, represented by a 2D array. \n\n \nMinimize Max Distance to Gas Station\n\nYou are given an integer array stations that represents the positions of the gas stations on the x-axis. \n\n \nGlobal and Local Inversions\n\nYou are given an integer array nums of length n which represents a permutation of all the integers in the range [0, n - 1]. \n\n \nSplit BST\n\nGiven the root of a binary search tree (BST) and an integer target, split the tree into two subtrees. \n\n \nSwap Adjacent in LR String\n\nIn a string composed of 'L', 'R', and 'X' characters, like \"RXXLRXRXL\", a move consists of either replacing one occurrence of \"XL\" with \"LX\", or replacing one occurrence of \"RX\" with \"XR\". \n\n \nSwim in Rising Water\n\nYou are given an n x n integer matrix grid where each value grid[i][j] represents the elevation at that point (i, j). \n\n \nK-th Symbol in Grammar\n\nOn the first row, we write a 0. Now in every subsequent row, we look at the previous row and replace each occurrence of 0 with 01, and each occurrence of 1 with 10. \n\n \nReaching Points\n\nA move consists of taking a point (x, y) and transforming it to either (x, x + y) or (x + y, y). \n\n \nRabbits in Forest\n\nThere is a forest with an unknown number of rabbits. We asked n rabbits \"How many rabbits have the same color as you?\" and collected the answers in an integer array answers where answers[i] is the answer of the i th rabbit. \n\n \nTransform to Chessboard\n\nYou are given an n x n binary grid board. In each move, you can swap any two rows with each other, or any two columns with each other. \n\n \nMinimum Distance Between BST Nodes\n\nGiven the root of a Binary Search Tree (BST), return the minimum difference between the values of any two different nodes in the tree. \n\n \nLetter Case Permutation\n\nGiven a string s, we can transform every letter individually to be lowercase or uppercase to create another string. \n\n \nIs Graph Bipartite?\n\nGiven an undirected graph, return true if and only if it is bipartite. \n\n \nK-th Smallest Prime Fraction\n\nYou are given a sorted integer array arr containing only unique integers from 1 to n. \n\n \nCheapest Flights Within K Stops\n\nThere are n cities connected by some number of flights. You are given an array flights where flights[i] = [from i, to i, price i ] indicates that there is a flight from city from i to city to i with cost price i . \n\n \nRotated Digits\n\nAn integer x is a good if after rotating each digit individually by 180 degrees, we get a valid number that is different from x. \n\n \nEscape The Ghosts\n\nYou are playing a simplified Pacman game. \n\n \nDomino and Tromino Tiling\n\nWe have two types of tiles: a 2 x 1 domino shape, and an \"L\" tromino shape. \n\n \nCustom Sort String\n\nYou are given two strings order and s. All the words of s are unique and each word consists of lowercase letters only. \n\n \nNumber of Matching Subsequences\n\nGiven a string s and an array of strings words, return the number of words[i] that is a subsequence of s. \n\n \nPreimage Size of Factorial Zeroes Function\n\nLet f(x) be the number of zeroes at the end of x!. \n\n \nValid Tic-Tac-Toe State\n\nGiven a Tic-Tac-Toe board as a string array board, return true if and only if it is possible to reach this board position during the course of a valid tic-tac-toe game. \n\n \nNumber of Subarrays with Bounded Maximum\n\nGiven an integer array nums and two integers left and right, return the number of contiguous non-empty subarrays such that the value of the maximum array element in that subarray is in the range [left, right]. \n\n \nRotate String\n\nYou are given two strings s and goal. \n\n \nAll Paths From Source to Target\n\nGiven a directed acyclic graph (DAG) of n nodes labeled from 0 to n - 1, find all possible paths from node 0 to node n - 1, and return them in any order.", "similarity": 0.9424064370239249}
{"input_context": "Example 1: \nLeetCode Problem #791\nTitle: Custom Sort String\nDescription:\nYou are given two strings order and s. All the characters of order are unique and were sorted in some custom order previously. \nExample 2: \nLeetCode Problem #792\nTitle: Number of Matching Subsequences\nDescription:\nGiven a string s and an array of strings words, return the number of words[i] that is a subsequence of s. \nExample 3: \nLeetCode Problem #793\nTitle: Preimage Size of Factorial Zeroes Function\nDescription:\nLet f(x) be the number of zeroes at the end of x!. Recall that x! = 1 * 2 * 3 *. . . * x and by convention, 0! = 1. \nExample 4: \nLeetCode Problem #794\nTitle: Valid Tic-Tac-Toe State\nDescription:\nGiven a Tic-Tac-Toe board as a string array board, return true if and only if it is possible to reach this board position during the course of a valid tic-tac-toe game. \nExample 5: \nLeetCode Problem #795\nTitle: Number of Subarrays with Bounded Maximum\nDescription:\nGiven an integer array nums and two integers left and right, return the number of contiguous non-empty subarrays such that the value of the maximum array element in that subarray is in the range [left, right]. \nExample 6: \nLeetCode Problem #796\nTitle: Rotate String\nDescription:\nGiven two strings s and goal, return true if and only if s can become goal after some number of shifts on s. \nExample 7: \nLeetCode Problem #797\nTitle: All Paths From Source to Target\nDescription:\nGiven a directed acyclic graph ( DAG ) of n nodes labeled from 0 to n - 1, find all possible paths from node 0 to node n - 1 and return them in any order. \nExample 8: \nLeetCode Problem #798\nTitle: Smallest Rotation with Highest Score\nDescription:\nYou are given an array nums. You can rotate it by a non-negative integer k so that the array becomes [nums[k], nums[k + 1],. . . nums[nums.length - 1], nums[0], nums[1],. . . , nums[k-1]]. Afterward, any entries that are less than or equal to their index are worth one point. \nExample 9: \nLeetCode Problem #799\nTitle: Champagne Tower\nDescription:\nWe stack glasses in a pyramid, where the first row has 1 glass, the second row has 2 glasses, and so on until the 100 th row. Each glass holds one cup of champagne. \nExample 10: \nLeetCode Problem #801\nTitle: Minimum Swaps To Make Sequences Increasing\nDescription:\nYou are given two integer arrays of the same length nums1 and nums2. In one operation, you are allowed to swap nums1[i] with nums2[i]. \nExample 11: \nLeetCode Problem #802\nTitle: Find Eventual Safe States\nDescription:\nThere is a directed graph of n nodes with each node labeled from 0 to n - 1. The graph is represented by a 0-indexed 2D integer array graph where graph[i] is an integer array of nodes adjacent to node i, meaning there is an edge from node i to each node in graph[i]. \nExample 12: \nLeetCode Problem #803\nTitle: Bricks Falling When Hit\nDescription:\nYou are given an m x n binary grid, where each 1 represents a brick and 0 represents an empty space. A brick is stable if:...\n\nExample 13: \nLeetCode Problem #804\nTitle: Unique Morse Code Words\nDescription:\nInternational Morse Code defines a standard encoding where each letter is mapped to a series of dots and dashes, as follows:...\n\nExample 14: \nLeetCode Problem #805\nTitle: Split Array With Same Average\nDescription:\nYou are given an integer array nums. \nExample 15: \nLeetCode Problem #806\nTitle: Number of Lines To Write String\nDescription:\nYou are given a string s of lowercase English letters and an array widths denoting how many pixels wide each lowercase English letter is. Specifically, widths[0] is the width of 'a', widths[1] is the width of 'b', and so on. \nExample 16: \nLeetCode Problem #807\nTitle: Max Increase to Keep City Skyline\nDescription:\nThere is a city composed of n x n blocks, where each block contains a single building shaped like a vertical square prism. You are given a 0-indexed n x n integer matrix grid where grid[r][c] represents the height of the building located in the block at row r and column c. \nExample 17: \nLeetCode Problem #808\nTitle: Soup Servings\nDescription:\nThere are two types of soup: type A and type B. Initially, we have n ml of each type of soup. There are four kinds of operations:...\n\nExample 18: \nLeetCode Problem #809\nTitle: Expressive Words\nDescription:\nSometimes people repeat letters to represent extra feeling. For example:...\n\nExample 19: \nLeetCode Problem #810\nTitle: Chalkboard XOR Game\nDescription:\nYou are given an array of integers nums represents the numbers written on a chalkboard. \nExample 20: \nLeetCode Problem #811\nTitle: Subdomain Visit Count\nDescription:\nA website domain \"discuss. leetcode. com\" consists of various subdomains. At the top level, we have \"com\", at the next level, we have \"leetcode. com\" and at the lowest level, \"discuss. leetcode. com\". When we visit a domain like \"discuss. leetcode. com\", we will also visit the parent domains \"leetcode. com\" and \"com\" implicitly. ", "expected_response": "Example 21: \nLeetCode Problem #812\nTitle: Largest Triangle Area\nDescription:\nGiven an array of points on the X-Y plane points where points[i] = [x i, y i ], return the area of the largest triangle that can be formed by any three different points. Answers within 10 -5 of the actual answer will be accepted. \nExample 22: \nLeetCode Problem #813\nTitle: Largest Sum of Averages\nDescription:\nYou are given an integer array nums and an integer k. You can partition the array into at most k non-empty adjacent subarrays. The score of a partition is the sum of the averages of each subarray. \nExample 23: \nLeetCode Problem #814\nTitle: Binary Tree Pruning\nDescription:\nGiven the root of a binary tree, return the same tree where every subtree (of the given tree) not containing a 1 has been removed. \nExample 24: \nLeetCode Problem #815\nTitle: Bus Routes\nDescription:\nYou are given an array routes representing bus routes where routes[i] is a bus route that the i th bus repeats forever. \nExample 25: \nLeetCode Problem #816\nTitle: Ambiguous Coordinates\nDescription:\nWe had some 2-dimensional coordinates, like \"(1, 3)\" or \"(2, 0. 5)\". Then, we removed all commas, decimal points, and spaces and ended up with the string s. \nExample 26: \nLeetCode Problem #817\nTitle: Linked List Components\nDescription:\nYou are given the head of a linked list containing unique integer values and an integer array nums that is a subset of the linked list values. \nExample 27: \nLeetCode Problem #818\nTitle: Race Car\nDescription:\nYour car starts at position 0 and speed +1 on an infinite number line. Your car can go into negative positions. Your car drives automatically according to a sequence of instructions 'A' (accelerate) and 'R' (reverse):...\n\nExample 28: \nLeetCode Problem #819\nTitle: Most Common Word\nDescription:\nGiven a string paragraph and a string array of the banned words banned, return the most frequent word that is not banned. It is guaranteed there is at least one word that is not banned, and that the answer is unique. \nExample 29: \nLeetCode Problem #820\nTitle: Short Encoding of Words\nDescription:\nA valid encoding of an array of words is any reference string s and array of indices indices such that:...\n\nExample 30: \nLeetCode Problem #821\nTitle: Shortest Distance to a Character\nDescription:\nGiven a string s and a character c that occurs in s, return an array of integers answer where answer.length == s.length and answer[i] is the distance from index i to the closest occurrence of character c in s. \nExample 31: \nLeetCode Problem #822\nTitle: Card Flipping Game\nDescription:\nYou are given two 0-indexed integer arrays fronts and backs of length n, where the i th card has the positive integer fronts[i] printed on the front and backs[i] printed on the back. Initially, each card is placed on a table such that the front number is facing up and the other is facing down. You may flip over any number of cards (possibly zero). \nExample 32: \nLeetCode Problem #823\nTitle: Binary Trees With Factors\nDescription:\nGiven an array of unique integers, arr, where each integer arr[i] is strictly greater than 1. \nExample 33: \nLeetCode Problem #824\nTitle: Goat Latin\nDescription:\nYou are given a string sentence that consist of words separated by spaces. Each word consists of lowercase and uppercase letters only. \nExample 34: \nLeetCode Problem #825\nTitle: Friends Of Appropriate Ages\nDescription:\nThere are n persons on a social media website. You are given an integer array ages where ages[i] is the age of the i th person. \nExample 35: \nLeetCode Problem #826\nTitle: Most Profit Assigning Work\nDescription:\nYou have n jobs and m workers. You are given three arrays: difficulty, profit, and worker where:...\n\nExample 36: \nLeetCode Problem #827\nTitle: Making A Large Island\nDescription:\nYou are given an n x n binary matrix grid. You are allowed to change at most one 0 to be 1. \nExample 37: \nLeetCode Problem #828\nTitle: Count Unique Characters of All Substrings of a Given String\nDescription:\nLet's define a function countUniqueChars(s) that returns the number of unique characters on s. \nExample 38: \nLeetCode Problem #829\nTitle: Consecutive Numbers Sum\nDescription:\nGiven an integer n, return the number of ways you can write n as the sum of consecutive positive integers. \nExample 39: \nLeetCode Problem #830\nTitle: Positions of Large Groups\nDescription:\nIn a string s of lowercase letters, these letters form consecutive groups of the same character. \nExample 40: \nLeetCode Problem #831\nTitle: Masking Personal Information\nDescription:\nYou are given a personal information string s, representing either an email address or a phone number. Return the masked personal information using the below rules. ", "iloc": 621, "frontend_question_id": 832.0, "n_pass": 1, "response": "Example 21: \nLeetCode Problem #812\nTitle: Largest Triangle Area\nDescription:\nYou have a list of points in the plane. Return the area of the largest triangle that can be formed by any 3 of the points.\n\nExample 22: \nLeetCode Problem #813\nTitle: Largest Sum of Averages\nDescription:\nWe partition a row of numbers nums into at most k adjacent (non-empty) groups, then our score is the sum of the average of each group. What is the largest score we can achieve?\n\nExample 23: \nLeetCode Problem #814\nTitle: Binary Tree Pruning\nDescription:\nWe are given the head node root of a binary tree, where additionally every node's value is either a 0 or a 1. Return the same tree where every subtree (of the given tree) not containing a 1 has been removed.\n\nExample 24: \nLeetCode Problem #815\nTitle: Bus Routes\nDescription:\nWe have a list of bus routes. Each routes[i] is a bus route that the i-th bus repeats forever. For example, if routes[0] = [1, 5, 7], this means that the first bus (0-th indexed) travels in the sequence 1 -> 5 -> 7 -> 1 -> 5 -> 7 -> 1 -> ... forever.\n\nExample 25: \nLeetCode Problem #816\nTitle: Ambiguous Coordinates\nDescription:\nWe had some 2-dimensional coordinates, like \"(1, 3)\" or \"(2, 0.5)\". Then, we removed all commas, decimal points, and spaces, and ended up with the string s. Return a list of strings representing all possibilities for what our original coordinates could have been.\n\nExample 26: \nLeetCode Problem #817\nTitle: Linked List Components\nDescription:\nWe are given head, the head node of a linked list containing unique integer values. We are also given the list G, a subset of the values in the linked list. Return the number of connected components in G, where two values are connected if they appear consecutively in the linked list.\n\nExample 27: \nLeetCode Problem #818\nTitle: Race Car\nDescription:\nYour car starts at position 0 and speed +1 on an infinite number line.  (Your car can go into negative positions.)\n\nExample 28: \nLeetCode Problem #819\nTitle: Most Common Word\nDescription:\nGiven a paragraph and a list of banned words, return the most frequent word that is not in the list of banned words. It is guaranteed there is at least one word that isn't banned, and that the answer is unique.\n\nExample 29: \nLeetCode Problem #820\nTitle: Short Encoding of Words\nDescription:\nGiven a list of words, we may encode it by writing a reference string S and a list of indexes A.\n\nExample 30: \nLeetCode Problem #821\nTitle: Shortest Distance to a Character\nDescription:\nGiven a string s and a character c that occurs in s, return an array of integers answer where answer.length == s.length and answer[i] is the shortest distance from s[i] to the character c in s.", "cleaned_response": " \nLargest Triangle Area\n\nYou have a list of points in the plane. Return the area of the largest triangle that can be formed by any 3 of the points.\n\n \nLargest Sum of Averages\n\nWe partition a row of numbers nums into at most k adjacent (non-empty) groups, then our score is the sum of the average of each group. What is the largest score we can achieve?\n\n \nBinary Tree Pruning\n\nWe are given the head node root of a binary tree, where additionally every node's value is either a 0 or a 1. Return the same tree where every subtree (of the given tree) not containing a 1 has been removed.\n\n \nBus Routes\n\nWe have a list of bus routes. Each routes[i] is a bus route that the i-th bus repeats forever. For example, if routes[0] = [1, 5, 7], this means that the first bus (0-th indexed) travels in the sequence 1 -> 5 -> 7 -> 1 -> 5 -> 7 -> 1 -> ... forever.\n\n \nAmbiguous Coordinates\n\nWe had some 2-dimensional coordinates, like \"(1, 3)\" or \"(2, 0.5)\". Then, we removed all commas, decimal points, and spaces, and ended up with the string s. Return a list of strings representing all possibilities for what our original coordinates could have been.\n\n \nLinked List Components\n\nWe are given head, the head node of a linked list containing unique integer values. We are also given the list G, a subset of the values in the linked list. Return the number of connected components in G, where two values are connected if they appear consecutively in the linked list.\n\n \nRace Car\n\nYour car starts at position 0 and speed +1 on an infinite number line.  (Your car can go into negative positions.)\n\n \nMost Common Word\n\nGiven a paragraph and a list of banned words, return the most frequent word that is not in the list of banned words. It is guaranteed there is at least one word that isn't banned, and that the answer is unique.\n\n \nShort Encoding of Words\n\nGiven a list of words, we may encode it by writing a reference string S and a list of indexes A.\n\n \nShortest Distance to a Character\n\nGiven a string s and a character c that occurs in s, return an array of integers answer where answer.length == s.length and answer[i] is the shortest distance from s[i] to the character c in s.", "similarity": 0.9426225200003597}
{"input_context": "Example 1: \nLeetCode Problem #872\nTitle: Leaf-Similar Trees\nDescription:\nConsider all the leaves of a binary tree, from left to right order, the values of those leaves form a leaf value sequence. \nExample 2: \nLeetCode Problem #873\nTitle: Length of Longest Fibonacci Subsequence\nDescription:\nA sequence x 1, x 2,. . . , x n is Fibonacci-like if:...\n\nExample 3: \nLeetCode Problem #874\nTitle: Walking Robot Simulation\nDescription:\nA robot on an infinite XY-plane starts at point (0, 0) facing north. The robot can receive a sequence of these three possible types of commands :...\n\nExample 4: \nLeetCode Problem #875\nTitle: Koko Eating Bananas\nDescription:\nKoko loves to eat bananas. There are n piles of bananas, the i th pile has piles[i] bananas. The guards have gone and will come back in h hours. \nExample 5: \nLeetCode Problem #876\nTitle: Middle of the Linked List\nDescription:\nGiven the head of a singly linked list, return the middle node of the linked list. \nExample 6: \nLeetCode Problem #877\nTitle: Stone Game\nDescription:\nAlice and Bob play a game with piles of stones. There are an even number of piles arranged in a row, and each pile has a positive integer number of stones piles[i]. \nExample 7: \nLeetCode Problem #878\nTitle: Nth Magical Number\nDescription:\nA positive integer is magical if it is divisible by either a or b. \nExample 8: \nLeetCode Problem #879\nTitle: Profitable Schemes\nDescription:\nThere is a group of n members, and a list of various crimes they could commit. The i th crime generates a profit[i] and requires group[i] members to participate in it. If a member participates in one crime, that member can't participate in another crime. \nExample 9: \nLeetCode Problem #880\nTitle: Decoded String at Index\nDescription:\nYou are given an encoded string s. To decode the string to a tape, the encoded string is read one character at a time and the following steps are taken:...\n\nExample 10: \nLeetCode Problem #881\nTitle: Boats to Save People\nDescription:\nYou are given an array people where people[i] is the weight of the i th person, and an infinite number of boats where each boat can carry a maximum weight of limit. Each boat carries at most two people at the same time, provided the sum of the weight of those people is at most limit. \nExample 11: \nLeetCode Problem #882\nTitle: Reachable Nodes In Subdivided Graph\nDescription:\nYou are given an undirected graph (the \"original graph\" ) with n nodes labeled from 0 to n - 1. You decide to subdivide each edge in the graph into a chain of nodes, with the number of new nodes varying between each edge. \nExample 12: \nLeetCode Problem #883\nTitle: Projection Area of 3D Shapes\nDescription:\nYou are given an n x n grid where we place some 1 x 1 x 1 cubes that are axis-aligned with the x, y, and z axes. \nExample 13: \nLeetCode Problem #884\nTitle: Uncommon Words from Two Sentences\nDescription:\nA sentence is a string of single-space separated words where each word consists only of lowercase letters. \nExample 14: \nLeetCode Problem #885\nTitle: Spiral Matrix III\nDescription:\nYou start at the cell (rStart, cStart) of an rows x cols grid facing east. The northwest corner is at the first row and column in the grid, and the southeast corner is at the last row and column. \nExample 15: \nLeetCode Problem #886\nTitle: Possible Bipartition\nDescription:\nWe want to split a group of n people (labeled from 1 to n ) into two groups of any size. Each person may dislike some other people, and they should not go into the same group. \nExample 16: \nLeetCode Problem #887\nTitle: Super Egg Drop\nDescription:\nYou are given k identical eggs and you have access to a building with n floors labeled from 1 to n. \nExample 17: \nLeetCode Problem #888\nTitle: Fair Candy Swap\nDescription:\nAlice and Bob have a different total number of candies. You are given two integer arrays aliceSizes and bobSizes where aliceSizes[i] is the number of candies of the i th box of candy that Alice has and bobSizes[j] is the number of candies of the j th box of candy that Bob has. \nExample 18: \nLeetCode Problem #889\nTitle: Construct Binary Tree from Preorder and Postorder Traversal\nDescription:\nGiven two integer arrays, preorder and postorder where preorder is the preorder traversal of a binary tree of distinct values and postorder is the postorder traversal of the same tree, reconstruct and return the binary tree. \nExample 19: \nLeetCode Problem #890\nTitle: Find and Replace Pattern\nDescription:\nGiven a list of strings words and a string pattern, return a list of words[i] that match pattern. You may return the answer in any order. \nExample 20: \nLeetCode Problem #891\nTitle: Sum of Subsequence Widths\nDescription:\nThe width of a sequence is the difference between the maximum and minimum elements in the sequence. ", "expected_response": "Example 21: \nLeetCode Problem #892\nTitle: Surface Area of 3D Shapes\nDescription:\nYou are given an n x n grid where you have placed some 1 x 1 x 1 cubes. Each value v = grid[i][j] represents a tower of v cubes placed on top of cell (i, j). \nExample 22: \nLeetCode Problem #893\nTitle: Groups of Special-Equivalent Strings\nDescription:\nYou are given an array of strings of the same length words. \nExample 23: \nLeetCode Problem #894\nTitle: All Possible Full Binary Trees\nDescription:\nGiven an integer n, return a list of all possible full binary trees with n nodes. Each node of each tree in the answer must have Node. val == 0. \nExample 24: \nLeetCode Problem #895\nTitle: Maximum Frequency Stack\nDescription:\nDesign a stack-like data structure to push elements to the stack and pop the most frequent element from the stack. \nExample 25: \nLeetCode Problem #896\nTitle: Monotonic Array\nDescription:\nAn array is monotonic if it is either monotone increasing or monotone decreasing. \nExample 26: \nLeetCode Problem #897\nTitle: Increasing Order Search Tree\nDescription:\nGiven the root of a binary search tree, rearrange the tree in in-order so that the leftmost node in the tree is now the root of the tree, and every node has no left child and only one right child. \nExample 27: \nLeetCode Problem #898\nTitle: Bitwise ORs of Subarrays\nDescription:\nGiven an integer array arr, return the number of distinct bitwise ORs of all the non-empty subarrays of arr. \nExample 28: \nLeetCode Problem #899\nTitle: Orderly Queue\nDescription:\nYou are given a string s and an integer k. You can choose one of the first k letters of s and append it at the end of the string. . \nExample 29: \nLeetCode Problem #900\nTitle: RLE Iterator\nDescription:\nWe can use run-length encoding (i. e. , RLE ) to encode a sequence of integers. In a run-length encoded array of even length encoding ( 0-indexed ), for all even i, encoding[i] tells us the number of times that the non-negative integer value encoding[i + 1] is repeated in the sequence. \nExample 30: \nLeetCode Problem #901\nTitle: Online Stock Span\nDescription:\nDesign an algorithm that collects daily price quotes for some stock and returns the span of that stock's price for the current day. \nExample 31: \nLeetCode Problem #902\nTitle: Numbers At Most N Given Digit Set\nDescription:\nGiven an array of digits which is sorted in non-decreasing order. You can write numbers using each digits[i] as many times as we want. For example, if digits = ['1', '3', '5'], we may write numbers such as '13', '551', and '1351315'. \nExample 32: \nLeetCode Problem #903\nTitle: Valid Permutations for DI Sequence\nDescription:\nYou are given a string s of length n where s[i] is either:...\n\nExample 33: \nLeetCode Problem #904\nTitle: Fruit Into Baskets\nDescription:\nYou are visiting a farm that has a single row of fruit trees arranged from left to right. The trees are represented by an integer array fruits where fruits[i] is the type of fruit the i th tree produces. \nExample 34: \nLeetCode Problem #905\nTitle: Sort Array By Parity\nDescription:\nGiven an integer array nums, move all the even integers at the beginning of the array followed by all the odd integers. \nExample 35: \nLeetCode Problem #906\nTitle: Super Palindromes\nDescription:\nLet's say a positive integer is a super-palindrome if it is a palindrome, and it is also the square of a palindrome. \nExample 36: \nLeetCode Problem #907\nTitle: Sum of Subarray Minimums\nDescription:\nGiven an array of integers arr, find the sum of min(b), where b ranges over every (contiguous) subarray of arr. Since the answer may be large, return the answer modulo 10e9 + 7. \nExample 37: \nLeetCode Problem #908\nTitle: Smallest Range I\nDescription:\nYou are given an integer array nums and an integer k. \nExample 38: \nLeetCode Problem #909\nTitle: Snakes and Ladders\nDescription:\nYou are given an n x n integer matrix board where the cells are labeled from 1 to n 2 in a Boustrophedon style starting from the bottom left of the board (i. e. board[n - 1][0] ) and alternating direction each row. \nExample 39: \nLeetCode Problem #910\nTitle: Smallest Range II\nDescription:\nYou are given an integer array nums and an integer k. \nExample 40: \nLeetCode Problem #911\nTitle: Online Election\nDescription:\nYou are given two integer arrays persons and times. In an election, the i th vote was cast for persons[i] at time times[i]. ", "iloc": 701, "frontend_question_id": 912.0, "n_pass": 1, "response": "Example 21:\nLeetCode Problem #892\nTitle: Surface Area of 3D Shapes\nDescription:\nOn a N * N grid, we place some 1 * 1 * 1 cubes that are axis-aligned with the x, y, and z axes. \n\nExample 22:\nLeetCode Problem #893\nTitle: Groups of Special-Equivalent Strings\nDescription:\nYou are given an array A of strings. Two strings S and T are special-equivalent if after any number of moves, S == T. \n\nExample 23:\nLeetCode Problem #894\nTitle: All Possible Full Binary Trees\nDescription:\nGiven an integer n, return a list of all possible full binary trees with n nodes. \n\nExample 24:\nLeetCode Problem #895\nTitle: Maximum Frequency Stack\nDescription:\nImplement FreqStack, a class which simulates the operation of a stack-like data structure. \n\nExample 25:\nLeetCode Problem #896\nTitle: Monotonic Array\nDescription:\nAn array is monotonic if it is either monotone increasing or monotone decreasing. \n\nExample 26:\nLeetCode Problem #897\nTitle: Increasing Order Search Tree\nDescription:\nGiven the root of a binary search tree, rearrange the tree in in-order so that the leftmost node in the tree is now the root of the tree. \n\nExample 27:\nLeetCode Problem #898\nTitle: Bitwise ORs of Subarrays\nDescription:\nWe have an array arr of non-negative integers. \n\nExample 28:\nLeetCode Problem #899\nTitle: Orderly Queue\nDescription:\nA string S of lowercase letters is given. \n\nExample 29:\nLeetCode Problem #900\nTitle: RLE Iterator\nDescription:\nWrite an iterator that iterates through a run-length encoded sequence. \n\nExample 30:\nLeetCode Problem #901\nTitle: Online Stock Span\nDescription:\nWrite a class StockSpanner which collects daily price quotes for some stock.", "cleaned_response": "\nSurface Area of 3D Shapes\n\nOn a N * N grid, we place some 1 * 1 * 1 cubes that are axis-aligned with the x, y, and z axes. \n\n\nGroups of Special-Equivalent Strings\n\nYou are given an array A of strings. Two strings S and T are special-equivalent if after any number of moves, S == T. \n\n\nAll Possible Full Binary Trees\n\nGiven an integer n, return a list of all possible full binary trees with n nodes. \n\n\nMaximum Frequency Stack\n\nImplement FreqStack, a class which simulates the operation of a stack-like data structure. \n\n\nMonotonic Array\n\nAn array is monotonic if it is either monotone increasing or monotone decreasing. \n\n\nIncreasing Order Search Tree\n\nGiven the root of a binary search tree, rearrange the tree in in-order so that the leftmost node in the tree is now the root of the tree. \n\n\nBitwise ORs of Subarrays\n\nWe have an array arr of non-negative integers. \n\n\nOrderly Queue\n\nA string S of lowercase letters is given. \n\n\nRLE Iterator\n\nWrite an iterator that iterates through a run-length encoded sequence. \n\n\nOnline Stock Span\n\nWrite a class StockSpanner which collects daily price quotes for some stock.", "similarity": 0.9399609676213755}
{"input_context": "Example 1: \nLeetCode Problem #912\nTitle: Sort an Array\nDescription:\nGiven an array of integers nums, sort the array in ascending order and return it. \nExample 2: \nLeetCode Problem #913\nTitle: Cat and Mouse\nDescription:\nA game on an undirected graph is played by two players, Mouse and Cat, who alternate turns. \nExample 3: \nLeetCode Problem #914\nTitle: X of a Kind in a Deck of Cards\nDescription:\nYou are given an integer array deck where deck[i] represents the number written on the i th card. \nExample 4: \nLeetCode Problem #915\nTitle: Partition Array into Disjoint Intervals\nDescription:\nGiven an integer array nums, partition it into two (contiguous) subarrays left and right so that:...\n\nExample 5: \nLeetCode Problem #916\nTitle: Word Subsets\nDescription:\nYou are given two string arrays words1 and words2. \nExample 6: \nLeetCode Problem #917\nTitle: Reverse Only Letters\nDescription:\nGiven a string s, reverse the string according to the following rules:...\n\nExample 7: \nLeetCode Problem #918\nTitle: Maximum Sum Circular Subarray\nDescription:\nGiven a circular integer array nums of length n, return the maximum possible sum of a non-empty subarray of nums. \nExample 8: \nLeetCode Problem #919\nTitle: Complete Binary Tree Inserter\nDescription:\nA complete binary tree is a binary tree in which every level, except possibly the last, is completely filled, and all nodes are as far left as possible. \nExample 9: \nLeetCode Problem #920\nTitle: Number of Music Playlists\nDescription:\nYour music player contains n different songs. You want to listen to goal songs (not necessarily different) during your trip. To avoid boredom, you will create a playlist so that:...\n\nExample 10: \nLeetCode Problem #921\nTitle: Minimum Add to Make Parentheses Valid\nDescription:\nA parentheses string is valid if and only if:...\n\nExample 11: \nLeetCode Problem #922\nTitle: Sort Array By Parity II\nDescription:\nGiven an array of integers nums, half of the integers in nums are odd, and the other half are even. \nExample 12: \nLeetCode Problem #923\nTitle: 3Sum With Multiplicity\nDescription:\nGiven an integer array arr, and an integer target, return the number of tuples i, j, k such that i < j < k and arr[i] + arr[j] + arr[k] == target. \nExample 13: \nLeetCode Problem #924\nTitle: Minimize Malware Spread\nDescription:\nYou are given a network of n nodes represented as an n x n adjacency matrix graph, where the i th node is directly connected to the j th node if graph[i][j] == 1. \nExample 14: \nLeetCode Problem #925\nTitle: Long Pressed Name\nDescription:\nYour friend is typing his name into a keyboard. Sometimes, when typing a character c, the key might get long pressed, and the character will be typed 1 or more times. \nExample 15: \nLeetCode Problem #926\nTitle: Flip String to Monotone Increasing\nDescription:\nA binary string is monotone increasing if it consists of some number of 0 's (possibly none), followed by some number of 1 's (also possibly none). \nExample 16: \nLeetCode Problem #927\nTitle: Three Equal Parts\nDescription:\nYou are given an array arr which consists of only zeros and ones, divide the array into three non-empty parts such that all of these parts represent the same binary value. \nExample 17: \nLeetCode Problem #928\nTitle: Minimize Malware Spread II\nDescription:\nYou are given a network of n nodes represented as an n x n adjacency matrix graph, where the i th node is directly connected to the j th node if graph[i][j] == 1. \nExample 18: \nLeetCode Problem #929\nTitle: Unique Email Addresses\nDescription:\nEvery valid email consists of a local name and a domain name, separated by the '@' sign. Besides lowercase letters, the email may contain one or more . or '+'. \nExample 19: \nLeetCode Problem #930\nTitle: Binary Subarrays With Sum\nDescription:\nGiven a binary array nums and an integer goal, return the number of non-empty subarrays with a sum goal. \nExample 20: \nLeetCode Problem #931\nTitle: Minimum Falling Path Sum\nDescription:\nGiven an n x n array of integers matrix, return the minimum sum of any falling path through matrix. ", "expected_response": "Example 21: \nLeetCode Problem #932\nTitle: Beautiful Array\nDescription:\nAn array nums of length n is beautiful if:...\n\nExample 22: \nLeetCode Problem #933\nTitle: Number of Recent Calls\nDescription:\nYou have a RecentCounter class which counts the number of recent requests within a certain time frame. \nExample 23: \nLeetCode Problem #934\nTitle: Shortest Bridge\nDescription:\nYou are given an n x n binary matrix grid where 1 represents land and 0 represents water. \nExample 24: \nLeetCode Problem #935\nTitle: Knight Dialer\nDescription:\nThe chess knight has a unique movement, it may move two squares vertically and one square horizontally, or two squares horizontally and one square vertically (with both forming the shape of an L ). The possible movements of chess knight are shown in this diagaram:...\n\nExample 25: \nLeetCode Problem #936\nTitle: Stamping The Sequence\nDescription:\nYou are given two strings stamp and target. Initially, there is a string s of length target.length with all s[i] == '?'. \nExample 26: \nLeetCode Problem #937\nTitle: Reorder Data in Log Files\nDescription:\nYou are given an array of logs. Each log is a space-delimited string of words, where the first word is the identifier. \nExample 27: \nLeetCode Problem #938\nTitle: Range Sum of BST\nDescription:\nGiven the root node of a binary search tree and two integers low and high, return the sum of values of all nodes with a value in the inclusive range [low, high]. \nExample 28: \nLeetCode Problem #939\nTitle: Minimum Area Rectangle\nDescription:\nYou are given an array of points in the X-Y plane points where points[i] = [x i, y i ]. \nExample 29: \nLeetCode Problem #940\nTitle: Distinct Subsequences II\nDescription:\nGiven a string s, return the number of distinct non-empty subsequences of s. Since the answer may be very large, return it modulo 10e9 + 7. \nExample 30: \nLeetCode Problem #941\nTitle: Valid Mountain Array\nDescription:\nGiven an array of integers arr, return true if and only if it is a valid mountain array. \nExample 31: \nLeetCode Problem #942\nTitle: DI String Match\nDescription:\nA permutation perm of n + 1 integers of all the integers in the range [0, n] can be represented as a string s of length n where:...\n\nExample 32: \nLeetCode Problem #943\nTitle: Find the Shortest Superstring\nDescription:\nGiven an array of strings words, return the smallest string that contains each string in words as a substring. If there are multiple valid strings of the smallest length, return any of them. \nExample 33: \nLeetCode Problem #944\nTitle: Delete Columns to Make Sorted\nDescription:\nYou are given an array of n strings strs, all of the same length. \nExample 34: \nLeetCode Problem #945\nTitle: Minimum Increment to Make Array Unique\nDescription:\nYou are given an integer array nums. In one move, you can pick an index i where 0 <= i < nums.length and increment nums[i] by 1. \nExample 35: \nLeetCode Problem #946\nTitle: Validate Stack Sequences\nDescription:\nGiven two integer arrays pushed and popped each with distinct values, return true if this could have been the result of a sequence of push and pop operations on an initially empty stack, or false otherwise. \nExample 36: \nLeetCode Problem #947\nTitle: Most Stones Removed with Same Row or Column\nDescription:\nOn a 2D plane, we place n stones at some integer coordinate points. Each coordinate point may have at most one stone. \nExample 37: \nLeetCode Problem #948\nTitle: Bag of Tokens\nDescription:\nYou have an initial power of power, an initial score of 0, and a bag of tokens where tokens[i] is the value of the i th token (0-indexed). \nExample 38: \nLeetCode Problem #949\nTitle: Largest Time for Given Digits\nDescription:\nGiven an array arr of 4 digits, find the latest 24-hour time that can be made using each digit exactly once. \nExample 39: \nLeetCode Problem #950\nTitle: Reveal Cards In Increasing Order\nDescription:\nYou are given an integer array deck. There is a deck of cards where every card has a unique integer. The integer on the i th card is deck[i]. \nExample 40: \nLeetCode Problem #951\nTitle: Flip Equivalent Binary Trees\nDescription:\nFor a binary tree T, we can define a flip operation as follows: choose any node, and swap the left and right child subtrees. ", "iloc": 741, "frontend_question_id": 952.0, "n_pass": 1, "response": "Example 21: \nLeetCode Problem #932\nTitle: Beautiful Array\nDescription:\nFor some fixed n, an array nums is called beautiful if it is a permutation of the integers 1, 2, ..., n, such that:...\n\nExample 22: \nLeetCode Problem #933\nTitle: Number of Recent Calls\nDescription:\nYou have a RecentCounter class which counts the number of recent requests within a certain time frame. \n\nExample 23: \nLeetCode Problem #934\nTitle: Shortest Bridge\nDescription:\nIn a given 2D binary array A, there are two islands. \n\nExample 24: \nLeetCode Problem #935\nTitle: Knight Dialer\nDescription:\nThe chess knight has a unique movement, it may move two squares vertically and one square horizontally, or two squares horizontally and one square vertically. \n\nExample 25: \nLeetCode Problem #936\nTitle: Stamping The Sequence\nDescription:\nYou want to form a target string of lowercase letters. \n\nExample 26: \nLeetCode Problem #937\nTitle: Reorder Data in Log Files\nDescription:\nYou are given an array of logs. \n\nExample 27: \nLeetCode Problem #938\nTitle: Range Sum of BST\nDescription:\nGiven the root node of a binary search tree, return the sum of values of all nodes with a value in the range [low, high]. \n\nExample 28: \nLeetCode Problem #939\nTitle: Minimum Area Rectangle\nDescription:\nGiven a set of points in the xy-plane, determine the minimum area of any rectangle formed from these points, with sides not necessarily parallel to the x and y axes. \n\nExample 29: \nLeetCode Problem #940\nTitle: Distinct Subsequences II\nDescription:\nGiven a string s, count the number of distinct, non-empty subsequences of s . \n\nExample 30: \nLeetCode Problem #941\nTitle: Valid Mountain Array\nDescription:\nGiven an array of integers arr, return true if and only if it is a valid mountain array.", "cleaned_response": " \nBeautiful Array\n\nFor some fixed n, an array nums is called beautiful if it is a permutation of the integers 1, 2, ..., n, such that:...\n\n \nNumber of Recent Calls\n\nYou have a RecentCounter class which counts the number of recent requests within a certain time frame. \n\n \nShortest Bridge\n\nIn a given 2D binary array A, there are two islands. \n\n \nKnight Dialer\n\nThe chess knight has a unique movement, it may move two squares vertically and one square horizontally, or two squares horizontally and one square vertically. \n\n \nStamping The Sequence\n\nYou want to form a target string of lowercase letters. \n\n \nReorder Data in Log Files\n\nYou are given an array of logs. \n\n \nRange Sum of BST\n\nGiven the root node of a binary search tree, return the sum of values of all nodes with a value in the range [low, high]. \n\n \nMinimum Area Rectangle\n\nGiven a set of points in the xy-plane, determine the minimum area of any rectangle formed from these points, with sides not necessarily parallel to the x and y axes. \n\n \nDistinct Subsequences II\n\nGiven a string s, count the number of distinct, non-empty subsequences of s . \n\n \nValid Mountain Array\n\nGiven an array of integers arr, return true if and only if it is a valid mountain array.", "similarity": 0.956026457199292}
{"input_context": "Example 1: \nLeetCode Problem #992\nTitle: Subarrays with K Different Integers\nDescription:\nGiven an integer array nums and an integer k, return the number of good subarrays of nums. \nExample 2: \nLeetCode Problem #993\nTitle: Cousins in Binary Tree\nDescription:\nGiven the root of a binary tree with unique values and the values of two different nodes of the tree x and y, return true if the nodes corresponding to the values x and y in the tree are cousins, or false otherwise. \nExample 3: \nLeetCode Problem #994\nTitle: Rotting Oranges\nDescription:\nYou are given an m x n grid where each cell can have one of three values:...\n\nExample 4: \nLeetCode Problem #995\nTitle: Minimum Number of K Consecutive Bit Flips\nDescription:\nYou are given a binary array nums and an integer k. \nExample 5: \nLeetCode Problem #996\nTitle: Number of Squareful Arrays\nDescription:\nAn array is squareful if the sum of every pair of adjacent elements is a perfect square. \nExample 6: \nLeetCode Problem #997\nTitle: Find the Town Judge\nDescription:\nIn a town, there are n people labeled from 1 to n. There is a rumor that one of these people is secretly the town judge. \nExample 7: \nLeetCode Problem #998\nTitle: Maximum Binary Tree II\nDescription:\nA maximum tree is a tree where every node has a value greater than any other value in its subtree. \nExample 8: \nLeetCode Problem #999\nTitle: Available Captures for Rook\nDescription:\nOn an 8 x 8 chessboard, there is exactly one white rook 'R' and some number of white bishops 'B', black pawns 'p', and empty squares .. \nExample 9: \nLeetCode Problem #1000\nTitle: Minimum Cost to Merge Stones\nDescription:\nThere are n piles of stones arranged in a row. The i th pile has stones[i] stones. \nExample 10: \nLeetCode Problem #1001\nTitle: Grid Illumination\nDescription:\nThere is a 2D grid of size n x n where each cell of this grid has a lamp that is initially turned off. \nExample 11: \nLeetCode Problem #1002\nTitle: Find Common Characters\nDescription:\nGiven a string array words, return an array of all characters that show up in all strings within the words (including duplicates). You may return the answer in any order. \nExample 12: \nLeetCode Problem #1003\nTitle: Check If Word Is Valid After Substitutions\nDescription:\nGiven a string s, determine if it is valid. \nExample 13: \nLeetCode Problem #1004\nTitle: Max Consecutive Ones III\nDescription:\nGiven a binary array nums and an integer k, return the maximum number of consecutive 1 's in the array if you can flip at most k 0 's. \nExample 14: \nLeetCode Problem #1005\nTitle: Maximize Sum Of Array After K Negations\nDescription:\nGiven an integer array nums and an integer k, modify the array in the following way:...\n\nExample 15: \nLeetCode Problem #1006\nTitle: Clumsy Factorial\nDescription:\nThe factorial of a positive integer n is the product of all positive integers less than or equal to n. \nExample 16: \nLeetCode Problem #1007\nTitle: Minimum Domino Rotations For Equal Row\nDescription:\nIn a row of dominoes, tops[i] and bottoms[i] represent the top and bottom halves of the i th domino. (A domino is a tile with two numbers from 1 to 6 - one on each half of the tile. )...\n\nExample 17: \nLeetCode Problem #1008\nTitle: Construct Binary Search Tree from Preorder Traversal\nDescription:\nGiven an array of integers preorder, which represents the preorder traversal of a BST (i. e. , binary search tree ), construct the tree and return its root. \nExample 18: \nLeetCode Problem #1009\nTitle: Complement of Base 10 Integer\nDescription:\nThe complement of an integer is the integer you get when you flip all the 0 's to 1 's and all the 1 's to 0 's in its binary representation. \nExample 19: \nLeetCode Problem #1010\nTitle: Pairs of Songs With Total Durations Divisible by 60\nDescription:\nYou are given a list of songs where the i th song has a duration of time[i] seconds. \nExample 20: \nLeetCode Problem #1011\nTitle: Capacity To Ship Packages Within D Days\nDescription:\nA conveyor belt has packages that must be shipped from one port to another within days days. ", "expected_response": "Example 21: \nLeetCode Problem #1012\nTitle: Numbers With Repeated Digits\nDescription:\nGiven an integer n, return the number of positive integers in the range [1, n] that have at least one repeated digit. \nExample 22: \nLeetCode Problem #1013\nTitle: Partition Array Into Three Parts With Equal Sum\nDescription:\nGiven an array of integers arr, return true if we can partition the array into three non-empty parts with equal sums. \nExample 23: \nLeetCode Problem #1014\nTitle: Best Sightseeing Pair\nDescription:\nYou are given an integer array values where values[i] represents the value of the i th sightseeing spot. Two sightseeing spots i and j have a distance j - i between them. \nExample 24: \nLeetCode Problem #1015\nTitle: Smallest Integer Divisible by K\nDescription:\nGiven a positive integer k, you need to find the length of the smallest positive integer n such that n is divisible by k, and n only contains the digit 1. \nExample 25: \nLeetCode Problem #1016\nTitle: Binary String With Substrings Representing 1 To N\nDescription:\nGiven a binary string s and a positive integer n, return true if the binary representation of all the integers in the range [1, n] are substrings of s, or false otherwise. \nExample 26: \nLeetCode Problem #1017\nTitle: Convert to Base -2\nDescription:\nGiven an integer n, return a binary string representing its representation in base -2. \nExample 27: \nLeetCode Problem #1018\nTitle: Binary Prefix Divisible By 5\nDescription:\nYou are given a binary array nums ( 0-indexed ). \nExample 28: \nLeetCode Problem #1019\nTitle: Next Greater Node In Linked List\nDescription:\nYou are given the head of a linked list with n nodes. \nExample 29: \nLeetCode Problem #1020\nTitle: Number of Enclaves\nDescription:\nYou are given an m x n binary matrix grid, where 0 represents a sea cell and 1 represents a land cell. \nExample 30: \nLeetCode Problem #1021\nTitle: Remove Outermost Parentheses\nDescription:\nA valid parentheses string is either empty \"\", \"(\" + A + \")\", or A + B, where A and B are valid parentheses strings, and + represents string concatenation. \nExample 31: \nLeetCode Problem #1022\nTitle: Sum of Root To Leaf Binary Numbers\nDescription:\nYou are given the root of a binary tree where each node has a value 0 or 1. Each root-to-leaf path represents a binary number starting with the most significant bit. \nExample 32: \nLeetCode Problem #1023\nTitle: Camelcase Matching\nDescription:\nGiven an array of strings queries and a string pattern, return a boolean array answer where answer[i] is true if queries[i] matches pattern, and false otherwise. \nExample 33: \nLeetCode Problem #1024\nTitle: Video Stitching\nDescription:\nYou are given a series of video clips from a sporting event that lasted time seconds. These video clips can be overlapping with each other and have varying lengths. \nExample 34: \nLeetCode Problem #1025\nTitle: Divisor Game\nDescription:\nAlice and Bob take turns playing a game, with Alice starting first. \nExample 35: \nLeetCode Problem #1026\nTitle: Maximum Difference Between Node and Ancestor\nDescription:\nGiven the root of a binary tree, find the maximum value v for which there exist different nodes a and b where v = |a. val - b. val| and a is an ancestor of b. \nExample 36: \nLeetCode Problem #1027\nTitle: Longest Arithmetic Subsequence\nDescription:\nGiven an array nums of integers, return the length of the longest arithmetic subsequence in nums. \nExample 37: \nLeetCode Problem #1028\nTitle: Recover a Tree From Preorder Traversal\nDescription:\nWe run a preorder depth-first search (DFS) on the root of a binary tree. \nExample 38: \nLeetCode Problem #1029\nTitle: Two City Scheduling\nDescription:\nA company is planning to interview 2n people. Given the array costs where costs[i] = [aCost i, bCost i ], the cost of flying the i th person to city a is aCost i, and the cost of flying the i th person to city b is bCost i. \nExample 39: \nLeetCode Problem #1030\nTitle: Matrix Cells in Distance Order\nDescription:\nYou are given four integers row, cols, rCenter, and cCenter. There is a rows x cols matrix and you are on the cell with the coordinates (rCenter, cCenter). \nExample 40: \nLeetCode Problem #1031\nTitle: Maximum Sum of Two Non-Overlapping Subarrays\nDescription:\nGiven an integer array nums and two integers firstLen and secondLen, return the maximum sum of elements in two non-overlapping subarrays with lengths firstLen and secondLen. ", "iloc": 821, "frontend_question_id": 1032.0, "n_pass": 1, "response": "Example 21: \nLeetCode Problem #1012\nTitle: Numbers With Repeated Digits\nDescription:\nGiven a positive integer n, return the number of positive integers less than or equal to n that have at least one repeated digit. \nExample 22: \nLeetCode Problem #1013\nTitle: Partition Array Into Three Parts With Equal Sum\nDescription:\nGiven an array of integers arr, return true if we can partition the array into three non-empty parts with equal sums. \nExample 23: \nLeetCode Problem #1014\nTitle: Best Sightseeing Pair\nDescription:\nGiven an array values representing the value of landmarks and two integers L and M representing the number of landmarks to visit from two different categories, find the maximum value of a sightseeing pair of landmarks. \nExample 24: \nLeetCode Problem #1015\nTitle: Smallest Integer Divisible by K\nDescription:\nGiven an integer K, return the length of the smallest positive integer N such that N is divisible by K, and N only contains the digit 1. \nExample 25: \nLeetCode Problem #1016\nTitle: Binary String With Substrings Representing 1 To N\nDescription:\nGiven a binary string S (a string consisting only of '0' and '1's) and a positive integer N, return true if every binary representation of a number in the range 1 to N is a substring of S, and false otherwise. \nExample 26: \nLeetCode Problem #1017\nTitle: Convert to Base -2\nDescription:\nGiven a number N, return a string consisting of \"0\" and \"1\"s that represents its value in base -2 (negative two). \nExample 27: \nLeetCode Problem #1018\nTitle: Binary Prefix Divisible By 5\nDescription:\nYou are given a binary array nums (0-indexed) containing only 0s and 1s. \nExample 28: \nLeetCode Problem #1019\nTitle: Next Greater Node In Linked List\nDescription:\nWe are given a linked list with head as the first node. Let's number the nodes in the list: node_1, node_2, node_3, ... etc. \nExample 29: \nLeetCode Problem #1020\nTitle: Number of Enclaves\nDescription:\nGiven a 2D array A, each cell is 0 (representing sea) or 1 (representing land) \nExample 30: \nLeetCode Problem #1021\nTitle: Remove Outermost Parentheses\nDescription:\nA valid parentheses string is either empty (\"\"), \"(\" + A + \")\", or A + B, \nExample 31: \nLeetCode Problem #1022\nTitle: Sum of Root To Leaf Binary Numbers\nDescription:\nYou are given the root of a binary tree where each node has a value 0 or 1. \nExample 32: \nLeetCode Problem #1023\nTitle: Camelcase Matching\nDescription:\nA query word matches a given pattern if we can insert lowercase letters to the pattern word so that it equals the query. \nExample 33: \nLeetCode Problem #1024\nTitle: Video Stitching\nDescription:\nYou are given a series of video clips from a sporting event that lasted T seconds. \nExample 34: \nLeetCode Problem #1025\nTitle: Divisor Game\nDescription:\nAlice and Bob take turns playing a game, with Alice starting first. \nExample 35: \nLeetCode Problem #1026\nTitle: Maximum Difference Between Node and Ancestor\nDescription:\nGiven the root of a binary tree, find the maximum value V for which there exist different nodes A and B where V = |A. val - B. val | and A is an ancestor of B. \nExample 36: \nLeetCode Problem #1027\nTitle: Longest Arithmetic Subsequence\nDescription:\nGiven an array A of integers, return the length of the longest arithmetic subsequence in A. \nExample 37: \nLeetCode Problem #1028\nTitle: Recover a Tree From Preorder Traversal\nDescription:\nWe run a preorder depth-first search (DFS) on the root of a binary tree. \nExample 38: \nLeetCode Problem #1029\nTitle: Two City Scheduling\nDescription:\nThere are 2N people a company is planning to interview. \nExample 39: \nLeetCode Problem #1030\nTitle: Matrix Cells in Distance Order\nDescription:\nWe are given an m x n matrix A, where each cell has a distinct value. \nExample 40: \nLeetCode Problem #1031\nTitle: Maximum Sum of Two Non-Overlapping Subarrays\nDescription:\nGiven an integer array nums and two integers firstLen and secondLen, return the maximum sum of elements of non-overlapping subarrays \nExample 41: \nLeetCode Problem #1032\nTitle: Stream of Characters\nDescription:\nImplement the StreamChecker class as follows: \nExample 42: \nLeetCode Problem #1033\nTitle: Moving Stones Until Consecutive\nDescription:\nThree stones are on a number line at positions a, b, and c. \nExample 43: \nLeetCode Problem #1034\nTitle: Coloring A Border\nDescription:\nGiven a 2-dimensional grid of integers, each value in the grid represents the color of the grid square at that location. \nExample 44: \nLeetCode Problem #1035\nTitle: Uncrossed Lines\nDescription:\nWe write the integers of nums1 and nums2 (in the order they are given) on two separate horizontal lines. \nExample 45: \nLeetCode Problem #1036\nTitle: Escape a Large Maze\nDescription:\nIn a 1 million by 1 million grid, the coordinates of each grid square are (x, y) with 0 <= x, y < 10^6. \nExample 46: \nLeetCode Problem #1037\nTitle: Valid Boomerang\nDescription:\nGiven an array points where points[i] = [xi, yi] represents a point on the X-Y plane, return true if these points are a boomerang. \nExample 47: \nLeetCode Problem #1038\nTitle: Binary Search Tree to Greater Sum Tree\nDescription:\nGiven the root of a Binary Search Tree (BST), convert it to a Greater Tree \nExample 48: \nLeetCode Problem #1039\nTitle: Minimum Score Triangulation of Polygon\nDescription:\nYou have a convex n-sided polygon where each vertex has an integer value. \nExample 49: \nLeetCode Problem #1040\nTitle: Moving Stones Until Consecutive II\nDescription:\nOn an infinite number line, the position of the i-th stone is given by stones[i]. \nExample 50: \nLeetCode Problem #1041\nTitle: Robot Bounded In Circle\nDescription:\nOn an infinite plane, a robot initially stands at (0, 0) and faces north.", "cleaned_response": " \nNumbers With Repeated Digits\n\nGiven a positive integer n, return the number of positive integers less than or equal to n that have at least one repeated digit. \n \nPartition Array Into Three Parts With Equal Sum\n\nGiven an array of integers arr, return true if we can partition the array into three non-empty parts with equal sums. \n \nBest Sightseeing Pair\n\nGiven an array values representing the value of landmarks and two integers L and M representing the number of landmarks to visit from two different categories, find the maximum value of a sightseeing pair of landmarks. \n \nSmallest Integer Divisible by K\n\nGiven an integer K, return the length of the smallest positive integer N such that N is divisible by K, and N only contains the digit 1. \n \nBinary String With Substrings Representing 1 To N\n\nGiven a binary string S (a string consisting only of '0' and '1's) and a positive integer N, return true if every binary representation of a number in the range 1 to N is a substring of S, and false otherwise. \n \nConvert to Base -2\n\nGiven a number N, return a string consisting of \"0\" and \"1\"s that represents its value in base -2 (negative two). \n \nBinary Prefix Divisible By 5\n\nYou are given a binary array nums (0-indexed) containing only 0s and 1s. \n \nNext Greater Node In Linked List\n\nWe are given a linked list with head as the first node. Let's number the nodes in the list: node_1, node_2, node_3, ... etc. \n \nNumber of Enclaves\n\nGiven a 2D array A, each cell is 0 (representing sea) or 1 (representing land) \n \nRemove Outermost Parentheses\n\nA valid parentheses string is either empty (\"\"), \"(\" + A + \")\", or A + B, \n \nSum of Root To Leaf Binary Numbers\n\nYou are given the root of a binary tree where each node has a value 0 or 1. \n \nCamelcase Matching\n\nA query word matches a given pattern if we can insert lowercase letters to the pattern word so that it equals the query. \n \nVideo Stitching\n\nYou are given a series of video clips from a sporting event that lasted T seconds. \n \nDivisor Game\n\nAlice and Bob take turns playing a game, with Alice starting first. \n \nMaximum Difference Between Node and Ancestor\n\nGiven the root of a binary tree, find the maximum value V for which there exist different nodes A and B where V = |A. val - B. val | and A is an ancestor of B. \n \nLongest Arithmetic Subsequence\n\nGiven an array A of integers, return the length of the longest arithmetic subsequence in A. \n \nRecover a Tree From Preorder Traversal\n\nWe run a preorder depth-first search (DFS) on the root of a binary tree. \n \nTwo City Scheduling\n\nThere are 2N people a company is planning to interview. \n \nMatrix Cells in Distance Order\n\nWe are given an m x n matrix A, where each cell has a distinct value. \n \nMaximum Sum of Two Non-Overlapping Subarrays\n\nGiven an integer array nums and two integers firstLen and secondLen, return the maximum sum of elements of non-overlapping subarrays \n \nStream of Characters\n\nImplement the StreamChecker class as follows: \n \nMoving Stones Until Consecutive\n\nThree stones are on a number line at positions a, b, and c. \n \nColoring A Border\n\nGiven a 2-dimensional grid of integers, each value in the grid represents the color of the grid square at that location. \n \nUncrossed Lines\n\nWe write the integers of nums1 and nums2 (in the order they are given) on two separate horizontal lines. \n \nEscape a Large Maze\n\nIn a 1 million by 1 million grid, the coordinates of each grid square are (x, y) with 0 <= x, y < 10^6. \n \nValid Boomerang\n\nGiven an array points where points[i] = [xi, yi] represents a point on the X-Y plane, return true if these points are a boomerang. \n \nBinary Search Tree to Greater Sum Tree\n\nGiven the root of a Binary Search Tree (BST), convert it to a Greater Tree \n \nMinimum Score Triangulation of Polygon\n\nYou have a convex n-sided polygon where each vertex has an integer value. \n \nMoving Stones Until Consecutive II\n\nOn an infinite number line, the position of the i-th stone is given by stones[i]. \n \nRobot Bounded In Circle\n\nOn an infinite plane, a robot initially stands at (0, 0) and faces north.", "similarity": 0.9751613128295286}
{"input_context": "Example 1: \nLeetCode Problem #1032\nTitle: Stream of Characters\nDescription:\nDesign an algorithm that accepts a stream of characters and checks if a suffix of these characters is a string of a given array of strings words. \nExample 2: \nLeetCode Problem #1033\nTitle: Moving Stones Until Consecutive\nDescription:\nThere are three stones in different positions on the X-axis. You are given three integers a, b, and c, the positions of the stones. \nExample 3: \nLeetCode Problem #1034\nTitle: Coloring A Border\nDescription:\nYou are given an m x n integer matrix grid, and three integers row, col, and color. Each value in the grid represents the color of the grid square at that location. \nExample 4: \nLeetCode Problem #1035\nTitle: Uncrossed Lines\nDescription:\nYou are given two integer arrays nums1 and nums2. We write the integers of nums1 and nums2 (in the order they are given) on two separate horizontal lines. \nExample 5: \nLeetCode Problem #1036\nTitle: Escape a Large Maze\nDescription:\nThere is a 1 million by 1 million grid on an XY-plane, and the coordinates of each grid square are (x, y). \nExample 6: \nLeetCode Problem #1037\nTitle: Valid Boomerang\nDescription:\nGiven an array points where points[i] = [x i, y i ] represents a point on the X-Y plane, return true if these points are a boomerang. \nExample 7: \nLeetCode Problem #1038\nTitle: Binary Search Tree to Greater Sum Tree\nDescription:\nGiven the root of a Binary Search Tree (BST), convert it to a Greater Tree such that every key of the original BST is changed to the original key plus the sum of all keys greater than the original key in BST. \nExample 8: \nLeetCode Problem #1039\nTitle: Minimum Score Triangulation of Polygon\nDescription:\nYou have a convex n -sided polygon where each vertex has an integer value. You are given an integer array values where values[i] is the value of the i th vertex (i. e. , clockwise order ). \nExample 9: \nLeetCode Problem #1040\nTitle: Moving Stones Until Consecutive II\nDescription:\nThere are some stones in different positions on the X-axis. You are given an integer array stones, the positions of the stones. \nExample 10: \nLeetCode Problem #1041\nTitle: Robot Bounded In Circle\nDescription:\nOn an infinite plane, a robot initially stands at (0, 0) and faces north. Note that:...\n\nExample 11: \nLeetCode Problem #1042\nTitle: Flower Planting With No Adjacent\nDescription:\nYou have n gardens, labeled from 1 to n, and an array paths where paths[i] = [x i, y i ] describes a bidirectional path between garden x i to garden y i. In each garden, you want to plant one of 4 types of flowers. \nExample 12: \nLeetCode Problem #1043\nTitle: Partition Array for Maximum Sum\nDescription:\nGiven an integer array arr, partition the array into (contiguous) subarrays of length at most k. After partitioning, each subarray has their values changed to become the maximum value of that subarray. \nExample 13: \nLeetCode Problem #1044\nTitle: Longest Duplicate Substring\nDescription:\nGiven a string s, consider all duplicated substrings : (contiguous) substrings of s that occur 2 or more times. The occurrences may overlap. \nExample 14: \nLeetCode Problem #1046\nTitle: Last Stone Weight\nDescription:\nYou are given an array of integers stones where stones[i] is the weight of the i th stone. \nExample 15: \nLeetCode Problem #1047\nTitle: Remove All Adjacent Duplicates In String\nDescription:\nYou are given a string s consisting of lowercase English letters. A duplicate removal consists of choosing two adjacent and equal letters and removing them. \nExample 16: \nLeetCode Problem #1048\nTitle: Longest String Chain\nDescription:\nYou are given an array of words where each word consists of lowercase English letters. \nExample 17: \nLeetCode Problem #1049\nTitle: Last Stone Weight II\nDescription:\nYou are given an array of integers stones where stones[i] is the weight of the i th stone. \nExample 18: \nLeetCode Problem #1051\nTitle: Height Checker\nDescription:\nA school is trying to take an annual photo of all the students. The students are asked to stand in a single file line in non-decreasing order by height. Let this ordering be represented by the integer array expected where expected[i] is the expected height of the i th student in line. \nExample 19: \nLeetCode Problem #1052\nTitle: Grumpy Bookstore Owner\nDescription:\nThere is a bookstore owner that has a store open for n minutes. Every minute, some number of customers enter the store. You are given an integer array customers of length n where customers[i] is the number of the customer that enters the store at the start of the i th minute and all those customers leave after the end of that minute. \nExample 20: \nLeetCode Problem #1053\nTitle: Previous Permutation With One Swap\nDescription:\nGiven an array of positive integers arr (not necessarily distinct), return the lexicographically largest permutation that is smaller than arr, that can be made with exactly one swap. If it cannot be done, then return the same array. ", "expected_response": "Example 21: \nLeetCode Problem #1054\nTitle: Distant Barcodes\nDescription:\nIn a warehouse, there is a row of barcodes, where the i th barcode is barcodes[i]. \nExample 22: \nLeetCode Problem #1061\nTitle: Lexicographically Smallest Equivalent String\nDescription:\nYou are given two strings of the same length s1 and s2 and a string baseStr. \nExample 23: \nLeetCode Problem #1071\nTitle: Greatest Common Divisor of Strings\nDescription:\nFor two strings s and t, we say \" t divides s \" if and only if s = t +. . . + t (i. e. , t is concatenated with itself one or more times). \nExample 24: \nLeetCode Problem #1072\nTitle: Flip Columns For Maximum Number of Equal Rows\nDescription:\nYou are given an m x n binary matrix matrix. \nExample 25: \nLeetCode Problem #1073\nTitle: Adding Two Negabinary Numbers\nDescription:\nGiven two numbers arr1 and arr2 in base -2, return the result of adding them together. \nExample 26: \nLeetCode Problem #1074\nTitle: Number of Submatrices That Sum to Target\nDescription:\nGiven a matrix and a target, return the number of non-empty submatrices that sum to target. \nExample 27: \nLeetCode Problem #1078\nTitle: Occurrences After Bigram\nDescription:\nGiven two strings first and second, consider occurrences in some text of the form \"first second third\", where second comes immediately after first, and third comes immediately after second. \nExample 28: \nLeetCode Problem #1079\nTitle: Letter Tile Possibilities\nDescription:\nYou have n tiles, where each tile has one letter tiles[i] printed on it. \nExample 29: \nLeetCode Problem #1080\nTitle: Insufficient Nodes in Root to Leaf Paths\nDescription:\nGiven the root of a binary tree and an integer limit, delete all insufficient nodes in the tree simultaneously, and return the root of the resulting binary tree. \nExample 30: \nLeetCode Problem #1081\nTitle: Smallest Subsequence of Distinct Characters\nDescription:\nGiven a string s, return the lexicographically smallest subsequence of s that contains all the distinct characters of s exactly once. \nExample 31: \nLeetCode Problem #1089\nTitle: Duplicate Zeros\nDescription:\nGiven a fixed-length integer array arr, duplicate each occurrence of zero, shifting the remaining elements to the right. \nExample 32: \nLeetCode Problem #1090\nTitle: Largest Values From Labels\nDescription:\nThere is a set of n items. You are given two integer arrays values and labels where the value and the label of the i th element are values[i] and labels[i] respectively. You are also given two integers numWanted and useLimit. \nExample 33: \nLeetCode Problem #1091\nTitle: Shortest Path in Binary Matrix\nDescription:\nGiven an n x n binary matrix grid, return the length of the shortest clear path in the matrix. If there is no clear path, return -1. \nExample 34: \nLeetCode Problem #1092\nTitle: Shortest Common Supersequence \nDescription:\nGiven two strings str1 and str2, return the shortest string that has both str1 and str2 as subsequences. If there are multiple valid strings, return any of them. \nExample 35: \nLeetCode Problem #1093\nTitle: Statistics from a Large Sample\nDescription:\nYou are given a large sample of integers in the range [0, 255]. Since the sample is so large, it is represented by an array count where count[k] is the number of times that k appears in the sample. \nExample 36: \nLeetCode Problem #1094\nTitle: Car Pooling\nDescription:\nThere is a car with capacity empty seats. The vehicle only drives east (i. e. , it cannot turn around and drive west). \nExample 37: \nLeetCode Problem #1095\nTitle: Find in Mountain Array\nDescription:\n(This problem is an interactive problem. )...\n\nExample 38: \nLeetCode Problem #1096\nTitle: Brace Expansion II\nDescription:\nUnder the grammar given below, strings can represent a set of lowercase words. Let R(expr) denote the set of words the expression represents. \nExample 39: \nLeetCode Problem #1103\nTitle: Distribute Candies to People\nDescription:\nWe distribute some number of candies, to a row of n = num_people people in the following way:...\n\nExample 40: \nLeetCode Problem #1104\nTitle: Path In Zigzag Labelled Binary Tree\nDescription:\nIn an infinite binary tree where every node has two children, the nodes are labelled in row order. ", "iloc": 861, "frontend_question_id": 1105.0, "n_pass": 1, "response": "Example 21:\nLeetCode Problem #1054\nTitle: Distant Barcodes\nDescription:\nIn a warehouse, there is a row of barcodes, where the i th barcode is barcodes[i]. \n\nExample 22:\nLeetCode Problem #1055\nTitle: Shortest Way to Form String\nDescription:\nGiven two strings source and target, return the minimum number of subsequences of source such that their concatenation equals target.\n\nExample 23:\nLeetCode Problem #1056\nTitle: Confusing Number\nDescription:\nGiven a number N, return true if and only if it is a confusing number, which satisfies the following condition:\n - We can rotate digits by 180 degrees to form new digits.\n\nExample 24:\nLeetCode Problem #1057\nTitle: Campus Bikes\nDescription:\nOn a campus represented as a 2D grid, there are n workers and m bikes. \n\nExample 25:\nLeetCode Problem #1058\nTitle: Minimize Rounding Error to Meet Target\nDescription:\nGiven an array of prices [p1,p2...,pn] and a target, \n\nExample 26:\nLeetCode Problem #1059\nTitle: All Paths from Source Lead to Destination\nDescription:\nGiven the edges of a directed graph, and two nodes source and destination of this graph, \n\nExample 27:\nLeetCode Problem #1060\nTitle: Missing Element in Sorted Array\nDescription:\nGiven a sorted array A of unique numbers, find the K-th missing number starting from the leftmost number of the array.\n\nExample 28:\nLeetCode Problem #1061\nTitle: Lexicographically Smallest Equivalent String\nDescription:\nGiven strings A and B of the same length, we say A[i] and B[i] are equivalent characters.\n\nExample 29:\nLeetCode Problem #1062\nTitle: Longest Repeating Substring\nDescription:\nGiven a string S, find out the length of the longest repeating substring(s). Return 0 if no repeating substring exists.\n\nExample 30:\nLeetCode Problem #1063\nTitle: Number of Valid Subarrays\nDescription:\nGiven an array A of integers, return the number of non-empty continuous subarrays that satisfy the following condition:\n\nExample 31:\nLeetCode Problem #1064\nTitle: Fixed Point\nDescription:\nGiven an array A of distinct integers sorted in ascending order, return the smallest index i that satisfies A[i] == i.\n\nExample 32:\nLeetCode Problem #1065\nTitle: Index Pairs of a String\nDescription:\nGiven a text string and words (a list of strings), \n\nExample 33:\nLeetCode Problem #1066\nTitle: Campus Bikes II\nDescription:\nOn a campus represented as a 2D grid, there are n workers and m bikes.\n\nExample 34:\nLeetCode Problem #1067\nTitle: Digit Count in Range\nDescription:\nGiven an integer d between 0 and 9, and two positive integers low and high \n\nExample 35:\nLeetCode Problem #1068\nTitle: Product Sales Analysis I\nDescription:\nGiven two tables: salesperson and sales.\n\nExample 36:\nLeetCode Problem #1069\nTitle: Product Sales Analysis II\nDescription:\nSQL Schema\n\nExample 37:\nLeetCode Problem #1070\nTitle: Product Sales Analysis III\nDescription:\nSQL Schema\n\nExample 38:\nLeetCode Problem #1071\nTitle: Product Sales Analysis IV\nDescription:\nSQL Schema\n\nExample 39:\nLeetCode Problem #1072\nTitle: Product Sales Analysis V\nDescription:\nSQL Schema\n\nExample 40:\nLeetCode Problem #1073\nTitle: Adding Two Negabinary Numbers\nDescription:\nGiven two numbers arr1 and arr2 in base -2, return the result of adding them together.\n\nExample 41:\nLeetCode Problem #1074\nTitle: Number of Submatrices That Sum to Target\nDescription:\nGiven a matrix, and a target, return the number of non-empty submatrices that sum to target.\n\nExample 42:\nLeetCode Problem #1075\nTitle: Project Employees III\nDescription:\nSQL Schema\n\nExample 43:\nLeetCode Problem #1076\nTitle: Project Employees IV\nDescription:\nSQL Schema\n\nExample 44:\nLeetCode Problem #1077\nTitle: Project Employees V\nDescription:\nSQL Schema\n\nExample 45:\nLeetCode Problem #1078\nTitle: Project Employees VI\nDescription:\nSQL Schema\n\nExample 46:\nLeetCode Problem #1079\nTitle: Project Employees VII\nDescription:\nSQL Schema\n\nExample 47:\nLeetCode Problem #1080\nTitle: Project Employees VIII\nDescription:\nSQL Schema\n\nExample 48:\nLeetCode Problem #1081\nTitle: Smallest Subsequence of Distinct Characters\nDescription:\nReturn the lexicographically smallest subsequence of s that contains all the distinct characters of s exactly once.\n\nExample 49:\nLeetCode Problem #1082\nTitle: Sales Analysis II\nDescription:\nSQL Schema\n\nExample 50:\nLeetCode Problem #1083\nTitle: Sales Analysis III\nDescription:\nSQL Schema", "cleaned_response": "\nDistant Barcodes\n\nIn a warehouse, there is a row of barcodes, where the i th barcode is barcodes[i]. \n\n\nShortest Way to Form String\n\nGiven two strings source and target, return the minimum number of subsequences of source such that their concatenation equals target.\n\n\nConfusing Number\n\nGiven a number N, return true if and only if it is a confusing number, which satisfies the following condition:\n - We can rotate digits by 180 degrees to form new digits.\n\n\nCampus Bikes\n\nOn a campus represented as a 2D grid, there are n workers and m bikes. \n\n\nMinimize Rounding Error to Meet Target\n\nGiven an array of prices [p1,p2...,pn] and a target, \n\n\nAll Paths from Source Lead to Destination\n\nGiven the edges of a directed graph, and two nodes source and destination of this graph, \n\n\nMissing Element in Sorted Array\n\nGiven a sorted array A of unique numbers, find the K-th missing number starting from the leftmost number of the array.\n\n\nLexicographically Smallest Equivalent String\n\nGiven strings A and B of the same length, we say A[i] and B[i] are equivalent characters.\n\n\nLongest Repeating Substring\n\nGiven a string S, find out the length of the longest repeating substring(s). Return 0 if no repeating substring exists.\n\n\nNumber of Valid Subarrays\n\nGiven an array A of integers, return the number of non-empty continuous subarrays that satisfy the following condition:\n\n\nFixed Point\n\nGiven an array A of distinct integers sorted in ascending order, return the smallest index i that satisfies A[i] == i.\n\n\nIndex Pairs of a String\n\nGiven a text string and words (a list of strings), \n\n\nCampus Bikes II\n\nOn a campus represented as a 2D grid, there are n workers and m bikes.\n\n\nDigit Count in Range\n\nGiven an integer d between 0 and 9, and two positive integers low and high \n\n\nProduct Sales Analysis I\n\nGiven two tables: salesperson and sales.\n\n\nProduct Sales Analysis II\n\nSQL Schema\n\n\nProduct Sales Analysis III\n\nSQL Schema\n\n\nProduct Sales Analysis IV\n\nSQL Schema\n\n\nProduct Sales Analysis V\n\nSQL Schema\n\n\nAdding Two Negabinary Numbers\n\nGiven two numbers arr1 and arr2 in base -2, return the result of adding them together.\n\n\nNumber of Submatrices That Sum to Target\n\nGiven a matrix, and a target, return the number of non-empty submatrices that sum to target.\n\n\nProject Employees III\n\nSQL Schema\n\n\nProject Employees IV\n\nSQL Schema\n\n\nProject Employees V\n\nSQL Schema\n\n\nProject Employees VI\n\nSQL Schema\n\n\nProject Employees VII\n\nSQL Schema\n\n\nProject Employees VIII\n\nSQL Schema\n\n\nSmallest Subsequence of Distinct Characters\n\nReturn the lexicographically smallest subsequence of s that contains all the distinct characters of s exactly once.\n\n\nSales Analysis II\n\nSQL Schema\n\n\nSales Analysis III\n\nSQL Schema", "similarity": 0.9246315157316294}
{"input_context": "Example 1: \nLeetCode Problem #1105\nTitle: Filling Bookcase Shelves\nDescription:\nYou are given an array books where books[i] = [thickness i, height i ] indicates the thickness and height of the i th book. You are also given an integer shelfWidth. \nExample 2: \nLeetCode Problem #1106\nTitle: Parsing A Boolean Expression\nDescription:\nA boolean expression is an expression that evaluates to either true or false. It can be in one of the following shapes:...\n\nExample 3: \nLeetCode Problem #1108\nTitle: Defanging an IP Address\nDescription:\nGiven a valid (IPv4) IP address, return a defanged version of that IP address. \nExample 4: \nLeetCode Problem #1109\nTitle: Corporate Flight Bookings\nDescription:\nThere are n flights that are labeled from 1 to n. \nExample 5: \nLeetCode Problem #1110\nTitle: Delete Nodes And Return Forest\nDescription:\nGiven the root of a binary tree, each node in the tree has a distinct value. \nExample 6: \nLeetCode Problem #1111\nTitle: Maximum Nesting Depth of Two Valid Parentheses Strings\nDescription:\nA string is a valid parentheses string (denoted VPS) if and only if it consists of \"(\" and \")\" characters only, and:...\n\nExample 7: \nLeetCode Problem #1122\nTitle: Relative Sort Array\nDescription:\nGiven two arrays arr1 and arr2, the elements of arr2 are distinct, and all elements in arr2 are also in arr1. \nExample 8: \nLeetCode Problem #1123\nTitle: Lowest Common Ancestor of Deepest Leaves\nDescription:\nGiven the root of a binary tree, return the lowest common ancestor of its deepest leaves. \nExample 9: \nLeetCode Problem #1124\nTitle: Longest Well-Performing Interval\nDescription:\nWe are given hours, a list of the number of hours worked per day for a given employee. \nExample 10: \nLeetCode Problem #1125\nTitle: Smallest Sufficient Team\nDescription:\nIn a project, you have a list of required skills req_skills, and a list of people. The i th person people[i] contains a list of skills that the person has. \nExample 11: \nLeetCode Problem #1128\nTitle: Number of Equivalent Domino Pairs\nDescription:\nGiven a list of dominoes, dominoes[i] = [a, b] is equivalent to dominoes[j] = [c, d] if and only if either ( a == c and b == d ), or ( a == d and b == c ) - that is, one domino can be rotated to be equal to another domino. \nExample 12: \nLeetCode Problem #1129\nTitle: Shortest Path with Alternating Colors\nDescription:\nYou are given an integer n, the number of nodes in a directed graph where the nodes are labeled from 0 to n - 1. Each edge is red or blue in this graph, and there could be self-edges and parallel edges. \nExample 13: \nLeetCode Problem #1130\nTitle: Minimum Cost Tree From Leaf Values\nDescription:\nGiven an array arr of positive integers, consider all binary trees such that:...\n\nExample 14: \nLeetCode Problem #1131\nTitle: Maximum of Absolute Value Expression\nDescription:\nGiven two arrays of integers with equal lengths, return the maximum value of:...\n\nExample 15: \nLeetCode Problem #1137\nTitle: N-th Tribonacci Number\nDescription:\nThe Tribonacci sequence T n is defined as follows:...\n\nExample 16: \nLeetCode Problem #1138\nTitle: Alphabet Board Path\nDescription:\nOn an alphabet board, we start at position (0, 0), corresponding to character board[0][0]. \nExample 17: \nLeetCode Problem #1139\nTitle: Largest 1-Bordered Square\nDescription:\nGiven a 2D grid of 0 s and 1 s, return the number of elements in the largest square subgrid that has all 1 s on its border, or 0 if such a subgrid doesn't exist in the grid. \nExample 18: \nLeetCode Problem #1140\nTitle: Stone Game II\nDescription:\nAlice and Bob continue their games with piles of stones. There are a number of piles arranged in a row, and each pile has a positive integer number of stones piles[i]. The objective of the game is to end with the most stones. \nExample 19: \nLeetCode Problem #1143\nTitle: Longest Common Subsequence\nDescription:\nGiven two strings text1 and text2, return the length of their longest common subsequence. If there is no common subsequence, return 0. \nExample 20: \nLeetCode Problem #1144\nTitle: Decrease Elements To Make Array Zigzag\nDescription:\nGiven an array nums of integers, a move consists of choosing any element and decreasing it by 1. ", "expected_response": "Example 21: \nLeetCode Problem #1145\nTitle: Binary Tree Coloring Game\nDescription:\nTwo players play a turn based game on a binary tree. We are given the root of this binary tree, and the number of nodes n in the tree. n is odd, and each node has a distinct value from 1 to n. \nExample 22: \nLeetCode Problem #1146\nTitle: Snapshot Array\nDescription:\nImplement a SnapshotArray that supports the following interface:...\n\nExample 23: \nLeetCode Problem #1147\nTitle: Longest Chunked Palindrome Decomposition\nDescription:\nYou are given a string text. You should split it to k substrings (subtext 1, subtext 2,. . . , subtext k ) such that:...\n\nExample 24: \nLeetCode Problem #1154\nTitle: Day of the Year\nDescription:\nGiven a string date representing a Gregorian calendar date formatted as YYYY-MM-DD, return the day number of the year. \nExample 25: \nLeetCode Problem #1155\nTitle: Number of Dice Rolls With Target Sum\nDescription:\nYou have n dice, and each die has k faces numbered from 1 to k. \nExample 26: \nLeetCode Problem #1156\nTitle: Swap For Longest Repeated Character Substring\nDescription:\nYou are given a string text. You can swap two of the characters in the text. \nExample 27: \nLeetCode Problem #1157\nTitle: Online Majority Element In Subarray\nDescription:\nDesign a data structure that efficiently finds the majority element of a given subarray. \nExample 28: \nLeetCode Problem #1160\nTitle: Find Words That Can Be Formed by Characters\nDescription:\nYou are given an array of strings words and a string chars. \nExample 29: \nLeetCode Problem #1161\nTitle: Maximum Level Sum of a Binary Tree\nDescription:\nGiven the root of a binary tree, the level of its root is 1, the level of its children is 2, and so on. \nExample 30: \nLeetCode Problem #1162\nTitle: As Far from Land as Possible\nDescription:\nGiven an n x n grid containing only values 0 and 1, where 0 represents water and 1 represents land, find a water cell such that its distance to the nearest land cell is maximized, and return the distance. If no land or water exists in the grid, return -1. \nExample 31: \nLeetCode Problem #1163\nTitle: Last Substring in Lexicographical Order\nDescription:\nGiven a string s, return the last substring of s in lexicographical order. \nExample 32: \nLeetCode Problem #1169\nTitle: Invalid Transactions\nDescription:\nA transaction is possibly invalid if:...\n\nExample 33: \nLeetCode Problem #1170\nTitle: Compare Strings by Frequency of the Smallest Character\nDescription:\nLet the function f(s) be the frequency of the lexicographically smallest character in a non-empty string s. For example, if s = \"dcce\" then f(s) = 2 because the lexicographically smallest character is 'c', which has a frequency of 2. \nExample 34: \nLeetCode Problem #1171\nTitle: Remove Zero Sum Consecutive Nodes from Linked List\nDescription:\nGiven the head of a linked list, we repeatedly delete consecutive sequences of nodes that sum to 0 until there are no such sequences. \nExample 35: \nLeetCode Problem #1172\nTitle: Dinner Plate Stacks\nDescription:\nYou have an infinite number of stacks arranged in a row and numbered (left to right) from 0, each of the stacks has the same maximum capacity. \nExample 36: \nLeetCode Problem #1175\nTitle: Prime Arrangements\nDescription:\nReturn the number of permutations of 1 to n so that prime numbers are at prime indices (1-indexed. )...\n\nExample 37: \nLeetCode Problem #1177\nTitle: Can Make Palindrome from Substring\nDescription:\nYou are given a string s and array queries where queries[i] = [left i, right i, k i ]. We may rearrange the substring s[left i. . . right i ] for each query and then choose up to k i of them to replace with any lowercase English letter. \nExample 38: \nLeetCode Problem #1178\nTitle: Number of Valid Words for Each Puzzle\nDescription:\nWith respect to a given puzzle string, a word is valid if both the following conditions are satisfied: word contains the first letter of puzzle. For each letter in word, that letter is in puzzle. For example, if the puzzle is \"abcdefg\", then valid words are \"faced\", \"cabbage\", and \"baggage\", while invalid words are \"beefed\" (does not include 'a' ) and \"based\" (includes 's' which is not in the puzzle). Return an array answer, where answer[i] is the number of words in the given word list words that is valid with respect to the puzzle puzzles[i]. \nExample 39: \nLeetCode Problem #1184\nTitle: Distance Between Bus Stops\nDescription:\nA bus has n stops numbered from 0 to n - 1 that form a circle. We know the distance between all pairs of neighboring stops where distance[i] is the distance between the stops number i and (i + 1) % n. \nExample 40: \nLeetCode Problem #1185\nTitle: Day of the Week\nDescription:\nGiven a date, return the corresponding day of the week for that date. ", "iloc": 901, "frontend_question_id": 1186.0, "n_pass": 1, "response": "Example 21: \nLeetCode Problem #1145\nTitle: Binary Tree Coloring Game\nDescription:\nTwo players play a turn based game on a binary tree.  We are given the root of this binary tree, and the number of nodes n in the tree. \nExample 22: \nLeetCode Problem #1146\nTitle: Snapshot Array\nDescription:\nImplement a SnapshotArray that supports the following interface:...\nExample 23: \nLeetCode Problem #1147\nTitle: Longest Chunked Palindrome Decomposition\nDescription:\nReturn the largest possible k such that there exists a_1, a_2, ..., a_k such that:\nExample 24: \nLeetCode Problem #1150\nTitle: Check If a Number Is Majority Element in a Sorted Array\nDescription:\nGiven an integer array nums sorted in non-decreasing order, and a number target, return True if and only if target is a majority element.\nExample 25: \nLeetCode Problem #1151\nTitle: Minimum Swaps to Group All 1's Together\nDescription:\nGiven a binary array data, return the minimum number of swaps required to group all 1's present in the array together in any place in the array.\nExample 26: \nLeetCode Problem #1152\nTitle: Analyze User Website Visit Pattern\nDescription:\nWe are given some website visits: the user with name username[i] visited the website website[i] at time timestamp[i].\nExample 27: \nLeetCode Problem #1153\nTitle: String Transforms Into Another String\nDescription:\nGiven two strings str1 and str2 of the same length, determine whether you can transform str1 into str2 by doing zero or more conversions.\nExample 28: \nLeetCode Problem #1154\nTitle: Day of the Year\nDescription:\nGiven a string date representing a Gregorian calendar date formatted as YYYY-MM-DD, return the day number of the year.\nExample 29: \nLeetCode Problem #1155\nTitle: Number of Dice Rolls With Target Sum\nDescription:\nYou have d dice, and each die has f faces numbered 1, 2, ..., f. \nExample 30: \nLeetCode Problem #1160\nTitle: Find Words That Can Be Formed by Characters\nDescription:\nYou are given an array of strings words and a string chars.", "cleaned_response": " \nBinary Tree Coloring Game\n\nTwo players play a turn based game on a binary tree.  We are given the root of this binary tree, and the number of nodes n in the tree. \n \nSnapshot Array\n\nImplement a SnapshotArray that supports the following interface:...\n \nLongest Chunked Palindrome Decomposition\n\nReturn the largest possible k such that there exists a_1, a_2, ..., a_k such that:\n \nCheck If a Number Is Majority Element in a Sorted Array\n\nGiven an integer array nums sorted in non-decreasing order, and a number target, return True if and only if target is a majority element.\n \nMinimum Swaps to Group All 1's Together\n\nGiven a binary array data, return the minimum number of swaps required to group all 1's present in the array together in any place in the array.\n \nAnalyze User Website Visit Pattern\n\nWe are given some website visits: the user with name username[i] visited the website website[i] at time timestamp[i].\n \nString Transforms Into Another String\n\nGiven two strings str1 and str2 of the same length, determine whether you can transform str1 into str2 by doing zero or more conversions.\n \nDay of the Year\n\nGiven a string date representing a Gregorian calendar date formatted as YYYY-MM-DD, return the day number of the year.\n \nNumber of Dice Rolls With Target Sum\n\nYou have d dice, and each die has f faces numbered 1, 2, ..., f. \n \nFind Words That Can Be Formed by Characters\n\nYou are given an array of strings words and a string chars.", "similarity": 0.9534584405227642}
{"input_context": "Example 1: \nLeetCode Problem #1186\nTitle: Maximum Subarray Sum with One Deletion\nDescription:\nGiven an array of integers, return the maximum sum for a non-empty subarray (contiguous elements) with at most one element deletion. In other words, you want to choose a subarray and optionally delete one element from it so that there is still at least one element left and the sum of the remaining elements is maximum possible. \nExample 2: \nLeetCode Problem #1187\nTitle: Make Array Strictly Increasing\nDescription:\nGiven two integer arrays arr1 and arr2, return the minimum number of operations (possibly zero) needed to make arr1 strictly increasing. \nExample 3: \nLeetCode Problem #1189\nTitle: Maximum Number of Balloons\nDescription:\nGiven a string text, you want to use the characters of text to form as many instances of the word \"balloon\" as possible. \nExample 4: \nLeetCode Problem #1190\nTitle: Reverse Substrings Between Each Pair of Parentheses\nDescription:\nYou are given a string s that consists of lower case English letters and brackets. \nExample 5: \nLeetCode Problem #1191\nTitle: K-Concatenation Maximum Sum\nDescription:\nGiven an integer array arr and an integer k, modify the array by repeating it k times. \nExample 6: \nLeetCode Problem #1192\nTitle: Critical Connections in a Network\nDescription:\nThere are n servers numbered from 0 to n - 1 connected by undirected server-to-server connections forming a network where connections[i] = [a i, b i ] represents a connection between servers a i and b i. Any server can reach other servers directly or indirectly through the network. \nExample 7: \nLeetCode Problem #1200\nTitle: Minimum Absolute Difference\nDescription:\nGiven an array of distinct integers arr, find all pairs of elements with the minimum absolute difference of any two elements. \nExample 8: \nLeetCode Problem #1201\nTitle: Ugly Number III\nDescription:\nAn ugly number is a positive integer that is divisible by a, b, or c. \nExample 9: \nLeetCode Problem #1202\nTitle: Smallest String With Swaps\nDescription:\nYou are given a string s, and an array of pairs of indices in the string pairs where pairs[i] = [a, b] indicates 2 indices(0-indexed) of the string. \nExample 10: \nLeetCode Problem #1203\nTitle: Sort Items by Groups Respecting Dependencies\nDescription:\nThere are n items each belonging to zero or one of m groups where group[i] is the group that the i -th item belongs to and it's equal to -1 if the i -th item belongs to no group. The items and the groups are zero indexed. A group can have no item belonging to it. \nExample 11: \nLeetCode Problem #1206\nTitle: Design Skiplist\nDescription:\nDesign a Skiplist without using any built-in libraries. \nExample 12: \nLeetCode Problem #1207\nTitle: Unique Number of Occurrences\nDescription:\nGiven an array of integers arr, return true if the number of occurrences of each value in the array is unique or false otherwise. \nExample 13: \nLeetCode Problem #1208\nTitle: Get Equal Substrings Within Budget\nDescription:\nYou are given two strings s and t of the same length and an integer maxCost. \nExample 14: \nLeetCode Problem #1209\nTitle: Remove All Adjacent Duplicates in String II\nDescription:\nYou are given a string s and an integer k, a k duplicate removal consists of choosing k adjacent and equal letters from s and removing them, causing the left and the right side of the deleted substring to concatenate together. \nExample 15: \nLeetCode Problem #1210\nTitle: Minimum Moves to Reach Target with Rotations\nDescription:\nIn an n*n grid, there is a snake that spans 2 cells and starts moving from the top left corner at (0, 0) and (0, 1). The grid has empty cells represented by zeros and blocked cells represented by ones. The snake wants to reach the lower right corner at (n-1, n-2) and (n-1, n-1). \nExample 16: \nLeetCode Problem #1217\nTitle: Minimum Cost to Move Chips to The Same Position\nDescription:\nWe have n chips, where the position of the i th chip is position[i]. \nExample 17: \nLeetCode Problem #1218\nTitle: Longest Arithmetic Subsequence of Given Difference\nDescription:\nGiven an integer array arr and an integer difference, return the length of the longest subsequence in arr which is an arithmetic sequence such that the difference between adjacent elements in the subsequence equals difference. \nExample 18: \nLeetCode Problem #1219\nTitle: Path with Maximum Gold\nDescription:\nIn a gold mine grid of size m x n, each cell in this mine has an integer representing the amount of gold in that cell, 0 if it is empty. \nExample 19: \nLeetCode Problem #1220\nTitle: Count Vowels Permutation\nDescription:\nGiven an integer n, your task is to count how many strings of length n can be formed under the following rules:...\n\nExample 20: \nLeetCode Problem #1221\nTitle: Split a String in Balanced Strings\nDescription:\nBalanced strings are those that have an equal quantity of 'L' and 'R' characters. ", "expected_response": "Example 21: \nLeetCode Problem #1222\nTitle: Queens That Can Attack the King\nDescription:\nOn a 0-indexed 8 x 8 chessboard, there can be multiple black queens ad one white king. \nExample 22: \nLeetCode Problem #1223\nTitle: Dice Roll Simulation\nDescription:\nA die simulator generates a random number from 1 to 6 for each roll. You introduced a constraint to the generator such that it cannot roll the number i more than rollMax[i] ( 1-indexed ) consecutive times. \nExample 23: \nLeetCode Problem #1224\nTitle: Maximum Equal Frequency\nDescription:\nGiven an array nums of positive integers, return the longest possible length of an array prefix of nums, such that it is possible to remove exactly one element from this prefix so that every number that has appeared in it will have the same number of occurrences. \nExample 24: \nLeetCode Problem #1227\nTitle: Airplane Seat Assignment Probability\nDescription:\nn passengers board an airplane with exactly n seats. The first passenger has lost the ticket and picks a seat randomly. But after that, the rest of the passengers will:...\n\nExample 25: \nLeetCode Problem #1232\nTitle: Check If It Is a Straight Line\nDescription:\nYou are given an array coordinates, coordinates[i] = [x, y], where [x, y] represents the coordinate of a point. Check if these points make a straight line in the XY plane. \nExample 26: \nLeetCode Problem #1233\nTitle: Remove Sub-Folders from the Filesystem\nDescription:\nGiven a list of folders folder, return the folders after removing all sub-folders in those folders. You may return the answer in any order. \nExample 27: \nLeetCode Problem #1234\nTitle: Replace the Substring for Balanced String\nDescription:\nYou are given a string s of length n containing only four kinds of characters: 'Q', 'W', 'E', and 'R'. \nExample 28: \nLeetCode Problem #1235\nTitle: Maximum Profit in Job Scheduling\nDescription:\nWe have n jobs, where every job is scheduled to be done from startTime[i] to endTime[i], obtaining a profit of profit[i]. \nExample 29: \nLeetCode Problem #1237\nTitle: Find Positive Integer Solution for a Given Equation\nDescription:\nGiven a callable function f(x, y) with a hidden formula and a value z, reverse engineer the formula and return all positive integer pairs x and y where f(x, y) == z. You may return the pairs in any order. \nExample 30: \nLeetCode Problem #1238\nTitle: Circular Permutation in Binary Representation\nDescription:\nGiven 2 integers n and start. Your task is return any permutation p of (0, 1, 2. . . . . , 2^n -1) such that :...\n\nExample 31: \nLeetCode Problem #1239\nTitle: Maximum Length of a Concatenated String with Unique Characters\nDescription:\nYou are given an array of strings arr. A string s is formed by the concatenation of a subsequence of arr that has unique characters. \nExample 32: \nLeetCode Problem #1240\nTitle: Tiling a Rectangle with the Fewest Squares\nDescription:\nGiven a rectangle of size n x m, return the minimum number of integer-sided squares that tile the rectangle. \nExample 33: \nLeetCode Problem #1247\nTitle: Minimum Swaps to Make Strings Equal\nDescription:\nYou are given two strings s1 and s2 of equal length consisting of letters \"x\" and \"y\" only. Your task is to make these two strings equal to each other. You can swap any two characters that belong to different strings, which means: swap s1[i] and s2[j]. \nExample 34: \nLeetCode Problem #1248\nTitle: Count Number of Nice Subarrays\nDescription:\nGiven an array of integers nums and an integer k. A continuous subarray is called nice if there are k odd numbers on it. \nExample 35: \nLeetCode Problem #1249\nTitle: Minimum Remove to Make Valid Parentheses\nDescription:\nGiven a string s of '(', ')' and lowercase English characters. \nExample 36: \nLeetCode Problem #1250\nTitle: Check If It Is a Good Array\nDescription:\nGiven an array nums of positive integers. Your task is to select some subset of nums, multiply each element by an integer and add all these numbers. The array is said to be good if you can obtain a sum of 1 from the array by any possible subset and multiplicand. \nExample 37: \nLeetCode Problem #1252\nTitle: Cells with Odd Values in a Matrix\nDescription:\nThere is an m x n matrix that is initialized to all 0 's. There is also a 2D array indices where each indices[i] = [r i, c i ] represents a 0-indexed location to perform some increment operations on the matrix. \nExample 38: \nLeetCode Problem #1253\nTitle: Reconstruct a 2-Row Binary Matrix\nDescription:\nGiven the following details of a matrix with n columns and 2 rows :...\n\nExample 39: \nLeetCode Problem #1254\nTitle: Number of Closed Islands\nDescription:\nGiven a 2D grid consists of 0s (land) and 1s (water). An island is a maximal 4-directionally connected group of 0 s and a closed island is an island totally (all left, top, right, bottom) surrounded by 1s. \nExample 40: \nLeetCode Problem #1255\nTitle: Maximum Score Words Formed by Letters\nDescription:\nGiven a list of words, list of single letters (might be repeating) and score of every character. ", "iloc": 941, "frontend_question_id": 1260.0, "n_pass": 1, "response": "Example 21: \nLeetCode Problem #1222\nTitle: Queens That Can Attack the King\nDescription:\nOn an 8x8 chessboard, there can be multiple Black Queens and one White King. Given an array of integer coordinates queens that represents the positions of the Black Queens, and a pair of coordinates king that represents the position of the White King, return all the queens that can attack the king.\n\nExample 22: \nLeetCode Problem #1223\nTitle: Dice Roll Simulation\nDescription:\nA die simulator generates a random number from 1 to 6 for each roll. You introduced a constraint to the generator such that it cannot generate a number i, more than rollMax[i] consecutive times.\n\nExample 23: \nLeetCode Problem #1224\nTitle: Maximum Equal Frequency\nDescription:\nGiven an array nums of positive integers, return the longest possible length of an array prefix of nums, such that it is possible to remove exactly one element from this prefix so that every number that has appeared in it will have the same number of occurrences.\n\nExample 24: \nLeetCode Problem #1225\nTitle: Report Contiguous Dates\nDescription:\nYou are given an array date representing the date (month, day, year) of each cell in a calendar grid. Each date[i] is in the format \"Month Day, Year\".\n\nExample 25: \nLeetCode Problem #1226\nTitle: The Dining Philosophers\nDescription:\nThere are five philosophers, named phi0, phi1, phi2, phi3, and phi4, and the monitors fork[0], fork[1], fork[2], fork[3], and fork[4].\n\nExample 26: \nLeetCode Problem #1227\nTitle: Airplane Seat Assignment Probability\nDescription:\nn travelers are going to be seated in n seats in an airplane in the order of their arrival.\n\nExample 27: \nLeetCode Problem #1228\nTitle: Missing Number In Arithmetic Progression\nDescription:\nIn some array arr, the values were in arithmetic progression: the values arr[i+1] - arr[i] are all equal for every 0 <= i < arr.length - 1.\n\nExample 28: \nLeetCode Problem #1229\nTitle: Meeting Scheduler\nDescription:\nGiven the availability time slots arrays slots1 and slots2 of two people and a meeting duration duration, return the earliest time slot that works for both of them and is of duration duration.\n\nExample 29: \nLeetCode Problem #1230\nTitle: Toss Strange Coins\nDescription:\nYou have some coins. The i-th coin has a probability prob[i] of facing heads when tossed.\n\nExample 30: \nLeetCode Problem #1231\nTitle: Divide Chocolate\nDescription:\nYou have one chocolate bar that consists of some chunks. Each chunk has its own sweetness given by the array sweetness.", "cleaned_response": " \nQueens That Can Attack the King\n\nOn an 8x8 chessboard, there can be multiple Black Queens and one White King. Given an array of integer coordinates queens that represents the positions of the Black Queens, and a pair of coordinates king that represents the position of the White King, return all the queens that can attack the king.\n\n \nDice Roll Simulation\n\nA die simulator generates a random number from 1 to 6 for each roll. You introduced a constraint to the generator such that it cannot generate a number i, more than rollMax[i] consecutive times.\n\n \nMaximum Equal Frequency\n\nGiven an array nums of positive integers, return the longest possible length of an array prefix of nums, such that it is possible to remove exactly one element from this prefix so that every number that has appeared in it will have the same number of occurrences.\n\n \nReport Contiguous Dates\n\nYou are given an array date representing the date (month, day, year) of each cell in a calendar grid. Each date[i] is in the format \"Month Day, Year\".\n\n \nThe Dining Philosophers\n\nThere are five philosophers, named phi0, phi1, phi2, phi3, and phi4, and the monitors fork[0], fork[1], fork[2], fork[3], and fork[4].\n\n \nAirplane Seat Assignment Probability\n\nn travelers are going to be seated in n seats in an airplane in the order of their arrival.\n\n \nMissing Number In Arithmetic Progression\n\nIn some array arr, the values were in arithmetic progression: the values arr[i+1] - arr[i] are all equal for every 0 <= i < arr.length - 1.\n\n \nMeeting Scheduler\n\nGiven the availability time slots arrays slots1 and slots2 of two people and a meeting duration duration, return the earliest time slot that works for both of them and is of duration duration.\n\n \nToss Strange Coins\n\nYou have some coins. The i-th coin has a probability prob[i] of facing heads when tossed.\n\n \nDivide Chocolate\n\nYou have one chocolate bar that consists of some chunks. Each chunk has its own sweetness given by the array sweetness.", "similarity": 0.9490996768492497}
{"input_context": "Example 1: \nLeetCode Problem #1260\nTitle: Shift 2D Grid\nDescription:\nGiven a 2D grid of size m x n and an integer k. You need to shift the grid k times. \nExample 2: \nLeetCode Problem #1261\nTitle: Find Elements in a Contaminated Binary Tree\nDescription:\nGiven a binary tree with the following rules:...\n\nExample 3: \nLeetCode Problem #1262\nTitle: Greatest Sum Divisible by Three\nDescription:\nGiven an integer array nums, return the maximum possible sum of elements of the array such that it is divisible by three. \nExample 4: \nLeetCode Problem #1263\nTitle: Minimum Moves to Move a Box to Their Target Location\nDescription:\nA storekeeper is a game in which the player pushes boxes around in a warehouse trying to get them to target locations. \nExample 5: \nLeetCode Problem #1266\nTitle: Minimum Time Visiting All Points\nDescription:\nOn a 2D plane, there are n points with integer coordinates points[i] = [x i, y i ]. Return the minimum time in seconds to visit all the points in the order given by points. \nExample 6: \nLeetCode Problem #1267\nTitle: Count Servers that Communicate\nDescription:\nYou are given a map of a server center, represented as a m * n integer matrix grid, where 1 means that on that cell there is a server and 0 means that it is no server. Two servers are said to communicate if they are on the same row or on the same column. Return the number of servers that communicate with any other server. \nExample 7: \nLeetCode Problem #1268\nTitle: Search Suggestions System\nDescription:\nYou are given an array of strings products and a string searchWord. \nExample 8: \nLeetCode Problem #1269\nTitle: Number of Ways to Stay in the Same Place After Some Steps\nDescription:\nYou have a pointer at index 0 in an array of size arrLen. At each step, you can move 1 position to the left, 1 position to the right in the array, or stay in the same place (The pointer should not be placed outside the array at any time). \nExample 9: \nLeetCode Problem #1275\nTitle: Find Winner on a Tic Tac Toe Game\nDescription:\nTic-tac-toe is played by two players A and B on a 3 x 3 grid. The rules of Tic-Tac-Toe are:...\n\nExample 10: \nLeetCode Problem #1276\nTitle: Number of Burgers with No Waste of Ingredients\nDescription:\nGiven two integers tomatoSlices and cheeseSlices. The ingredients of different burgers are as follows:...\n\nExample 11: \nLeetCode Problem #1277\nTitle: Count Square Submatrices with All Ones\nDescription:\nGiven a m * n matrix of ones and zeros, return how many square submatrices have all ones. \nExample 12: \nLeetCode Problem #1278\nTitle: Palindrome Partitioning III\nDescription:\nYou are given a string s containing lowercase letters and an integer k. You need to :...\n\nExample 13: \nLeetCode Problem #1281\nTitle: Subtract the Product and Sum of Digits of an Integer\nDescription:\nGiven an integer number n, return the difference between the product of its digits and the sum of its digits. \nExample 14: \nLeetCode Problem #1282\nTitle: Group the People Given the Group Size They Belong To\nDescription:\nThere are n people that are split into some unknown number of groups. Each person is labeled with a unique ID from 0 to n - 1. \nExample 15: \nLeetCode Problem #1283\nTitle: Find the Smallest Divisor Given a Threshold\nDescription:\nGiven an array of integers nums and an integer threshold, we will choose a positive integer divisor, divide all the array by it, and sum the division's result. Find the smallest divisor such that the result mentioned above is less than or equal to threshold. \nExample 16: \nLeetCode Problem #1284\nTitle: Minimum Number of Flips to Convert Binary Matrix to Zero Matrix\nDescription:\nGiven a m x n binary matrix mat. In one step, you can choose one cell and flip it and all the four neighbors of it if they exist (Flip is changing 1 to 0 and 0 to 1 ). A pair of cells are called neighbors if they share one edge. \nExample 17: \nLeetCode Problem #1286\nTitle: Iterator for Combination\nDescription:\nDesign the CombinationIterator class:...\n\nExample 18: \nLeetCode Problem #1287\nTitle: Element Appearing More Than 25% In Sorted Array\nDescription:\nGiven an integer array sorted in non-decreasing order, there is exactly one integer in the array that occurs more than 25% of the time, return that integer. \nExample 19: \nLeetCode Problem #1288\nTitle: Remove Covered Intervals\nDescription:\nGiven an array intervals where intervals[i] = [l i, r i ] represent the interval [l i, r i ), remove all intervals that are covered by another interval in the list. \nExample 20: \nLeetCode Problem #1289\nTitle: Minimum Falling Path Sum II\nDescription:\nGiven an n x n integer matrix grid, return the minimum sum of a falling path with non-zero shifts. ", "expected_response": "Example 21: \nLeetCode Problem #1290\nTitle: Convert Binary Number in a Linked List to Integer\nDescription:\nGiven head which is a reference node to a singly-linked list. The value of each node in the linked list is either 0 or 1. The linked list holds the binary representation of a number. \nExample 22: \nLeetCode Problem #1291\nTitle: Sequential Digits\nDescription:\nAn integer has sequential digits if and only if each digit in the number is one more than the previous digit. \nExample 23: \nLeetCode Problem #1292\nTitle: Maximum Side Length of a Square with Sum Less than or Equal to Threshold\nDescription:\nGiven a m x n matrix mat and an integer threshold, return the maximum side-length of a square with a sum less than or equal to threshold or return 0 if there is no such square. \nExample 24: \nLeetCode Problem #1293\nTitle: Shortest Path in a Grid with Obstacles Elimination\nDescription:\nYou are given an m x n integer matrix grid where each cell is either 0 (empty) or 1 (obstacle). You can move up, down, left, or right from and to an empty cell in one step. \nExample 25: \nLeetCode Problem #1295\nTitle: Find Numbers with Even Number of Digits\nDescription:\nGiven an array nums of integers, return how many of them contain an even number of digits. \nExample 26: \nLeetCode Problem #1296\nTitle: Divide Array in Sets of K Consecutive Numbers\nDescription:\nGiven an array of integers nums and a positive integer k, check whether it is possible to divide this array into sets of k consecutive numbers. \nExample 27: \nLeetCode Problem #1297\nTitle: Maximum Number of Occurrences of a Substring\nDescription:\nGiven a string s, return the maximum number of occurrences of any substring under the following rules:...\n\nExample 28: \nLeetCode Problem #1298\nTitle: Maximum Candies You Can Get from Boxes\nDescription:\nYou have n boxes labeled from 0 to n - 1. You are given four arrays: status, candies, keys, and containedBoxes where:...\n\nExample 29: \nLeetCode Problem #1299\nTitle: Replace Elements with Greatest Element on Right Side\nDescription:\nGiven an array arr, replace every element in that array with the greatest element among the elements to its right, and replace the last element with -1. \nExample 30: \nLeetCode Problem #1300\nTitle: Sum of Mutated Array Closest to Target\nDescription:\nGiven an integer array arr and a target value target, return the integer value such that when we change all the integers larger than value in the given array to be equal to value, the sum of the array gets as close as possible (in absolute difference) to target. \nExample 31: \nLeetCode Problem #1301\nTitle: Number of Paths with Max Score\nDescription:\nYou are given a square board of characters. You can move on the board starting at the bottom right square marked with the character 'S'. \nExample 32: \nLeetCode Problem #1302\nTitle: Deepest Leaves Sum\nDescription:\nGiven the root of a binary tree, return the sum of values of its deepest leaves. \nExample 33: \nLeetCode Problem #1304\nTitle: Find N Unique Integers Sum up to Zero\nDescription:\nGiven an integer n, return any array containing n unique integers such that they add up to 0. \nExample 34: \nLeetCode Problem #1305\nTitle: All Elements in Two Binary Search Trees\nDescription:\nGiven two binary search trees root1 and root2, return a list containing all the integers from both trees sorted in ascending order. \nExample 35: \nLeetCode Problem #1306\nTitle: Jump Game III\nDescription:\nGiven an array of non-negative integers arr, you are initially positioned at start index of the array. When you are at index i, you can jump to i + arr[i] or i - arr[i], check if you can reach any index with value 0. \nExample 36: \nLeetCode Problem #1307\nTitle: Verbal Arithmetic Puzzle\nDescription:\nGiven an equation, represented by words on the left side and the result on the right side. \nExample 37: \nLeetCode Problem #1309\nTitle: Decrypt String from Alphabet to Integer Mapping\nDescription:\nYou are given a string s formed by digits and '#'. We want to map s to English lowercase characters as follows:...\n\nExample 38: \nLeetCode Problem #1310\nTitle: XOR Queries of a Subarray\nDescription:\nYou are given an array arr of positive integers. You are also given the array queries where queries[i] = [left i, right i ]. \nExample 39: \nLeetCode Problem #1311\nTitle: Get Watched Videos by Your Friends\nDescription:\nThere are n people, each person has a unique id between 0 and n-1. Given the arrays watchedVideos and friends, where watchedVideos[i] and friends[i] contain the list of watched videos and the list of friends respectively for the person with id = i. \nExample 40: \nLeetCode Problem #1312\nTitle: Minimum Insertion Steps to Make a String Palindrome\nDescription:\nGiven a string s. In one step you can insert any character at any index of the string. ", "iloc": 981, "frontend_question_id": 1313.0, "n_pass": 1, "response": "Example 21: \nLeetCode Problem #1290\nTitle: Convert Binary Number in a Linked List to Integer\nDescription:\nGiven a singly linked list, return the decimal value represented in binary.\n\nExample 22: \nLeetCode Problem #1291\nTitle: Sequential Digits\nDescription:\nAn integer has sequential digits if and only if each digit in its representation is one more than the previous digit in the sequence.\n\nExample 23: \nLeetCode Problem #1292\nTitle: Odd Even Linked List\nDescription:\nGiven a singly linked list, group all odd nodes together followed by the even nodes.\n\nExample 24: \nLeetCode Problem #1293\nTitle: Shortest Path in a Grid with Obstacles Elimination\nDescription:\nYou are given an m x n integer matrix grid where grid[i][j] == 0 or 1. \n\nExample 25: \nLeetCode Problem #1294\nTitle: Weather Type in Each Country\nDescription:\nYou are given a list of strings logs where logs[i] is the entrylog for the ith country. The ith country has ith country[0] and the weather type on the start date.\n\nExample 26: \nLeetCode Problem #1295\nTitle: Range Sum of BST\nDescription:\nGiven the root node of a binary search tree and two integers low and high, return the sum of values of all nodes with a value in the inclusive range [low, high].\n\nExample 27: \nLeetCode Problem #1296\nTitle: Divide Array into Increasing Sequences\nDescription:\nYou are given a 2D integer array, groups, and an integer, k. \n\nExample 28: \nLeetCode Problem #1297\nTitle: Maximum Number of Occurrences of a Substring\nDescription:\nGiven a string s, return the maximum number of occurrences of any substring under the following rules.\n\nExample 29: \nLeetCode Problem #1298\nTitle: Maximum Product of Splitted Binary Tree\nDescription:\nGiven the root of a binary tree, split the binary tree into two subtrees by removing one edge such that the product of the sums of the subtrees is maximized.\n\nExample 30: \nLeetCode Problem #1299\nTitle: Replace Elements with Greatest Element on Right Side\nDescription:\nGiven an array arr, replace every element in that array with the greatest element among the elements to its right, and replace the last element with -1.", "cleaned_response": " \nConvert Binary Number in a Linked List to Integer\n\nGiven a singly linked list, return the decimal value represented in binary.\n\n \nSequential Digits\n\nAn integer has sequential digits if and only if each digit in its representation is one more than the previous digit in the sequence.\n\n \nOdd Even Linked List\n\nGiven a singly linked list, group all odd nodes together followed by the even nodes.\n\n \nShortest Path in a Grid with Obstacles Elimination\n\nYou are given an m x n integer matrix grid where grid[i][j] == 0 or 1. \n\n \nWeather Type in Each Country\n\nYou are given a list of strings logs where logs[i] is the entrylog for the ith country. The ith country has ith country[0] and the weather type on the start date.\n\n \nRange Sum of BST\n\nGiven the root node of a binary search tree and two integers low and high, return the sum of values of all nodes with a value in the inclusive range [low, high].\n\n \nDivide Array into Increasing Sequences\n\nYou are given a 2D integer array, groups, and an integer, k. \n\n \nMaximum Number of Occurrences of a Substring\n\nGiven a string s, return the maximum number of occurrences of any substring under the following rules.\n\n \nMaximum Product of Splitted Binary Tree\n\nGiven the root of a binary tree, split the binary tree into two subtrees by removing one edge such that the product of the sums of the subtrees is maximized.\n\n \nReplace Elements with Greatest Element on Right Side\n\nGiven an array arr, replace every element in that array with the greatest element among the elements to its right, and replace the last element with -1.", "similarity": 0.932570658461948}
{"input_context": "Example 1: \nLeetCode Problem #1313\nTitle: Decompress Run-Length Encoded List\nDescription:\nWe are given a list nums of integers representing a list compressed with run-length encoding. \nExample 2: \nLeetCode Problem #1314\nTitle: Matrix Block Sum\nDescription:\nGiven a m x n matrix mat and an integer k, return a matrix answer where each answer[i][j] is the sum of all elements mat[r][c] for :...\n\nExample 3: \nLeetCode Problem #1315\nTitle: Sum of Nodes with Even-Valued Grandparent\nDescription:\nGiven the root of a binary tree, return the sum of values of nodes with an even-valued grandparent. If there are no nodes with an even-valued grandparent, return 0. \nExample 4: \nLeetCode Problem #1316\nTitle: Distinct Echo Substrings\nDescription:\nReturn the number of distinct non-empty substrings of text that can be written as the concatenation of some string with itself (i. e. it can be written as a + a where a is some string). \nExample 5: \nLeetCode Problem #1317\nTitle: Convert Integer to the Sum of Two No-Zero Integers\nDescription:\nNo-Zero integer is a positive integer that does not contain any 0 in its decimal representation. \nExample 6: \nLeetCode Problem #1318\nTitle: Minimum Flips to Make a OR b Equal to c\nDescription:\nGiven 3 positives numbers a, b and c. Return the minimum flips required in some bits of a and b to make ( a OR b == c ). (bitwise OR operation). Flip operation consists of change any single bit 1 to 0 or change the bit 0 to 1 in their binary representation. \nExample 7: \nLeetCode Problem #1319\nTitle: Number of Operations to Make Network Connected\nDescription:\nThere are n computers numbered from 0 to n - 1 connected by ethernet cables connections forming a network where connections[i] = [a i, b i ] represents a connection between computers a i and b i. Any computer can reach any other computer directly or indirectly through the network. \nExample 8: \nLeetCode Problem #1320\nTitle: Minimum Distance to Type a Word Using Two Fingers\nDescription:\nYou have a keyboard layout as shown above in the X-Y plane, where each English uppercase letter is located at some coordinate. \nExample 9: \nLeetCode Problem #1323\nTitle: Maximum 69 Number\nDescription:\nYou are given a positive integer num consisting only of digits 6 and 9. \nExample 10: \nLeetCode Problem #1324\nTitle: Print Words Vertically\nDescription:\nGiven a string s. Return all the words vertically in the same order in which they appear in s. Words are returned as a list of strings, complete with spaces when is necessary. (Trailing spaces are not allowed). Each word would be put on only one column and that in one column there will be only one word. \nExample 11: \nLeetCode Problem #1325\nTitle: Delete Leaves With a Given Value\nDescription:\nGiven a binary tree root and an integer target, delete all the leaf nodes with value target. \nExample 12: \nLeetCode Problem #1326\nTitle: Minimum Number of Taps to Open to Water a Garden\nDescription:\nThere is a one-dimensional garden on the x-axis. The garden starts at the point 0 and ends at the point n. (i. e The length of the garden is n ). \nExample 13: \nLeetCode Problem #1328\nTitle: Break a Palindrome\nDescription:\nGiven a palindromic string of lowercase English letters palindrome, replace exactly one character with any lowercase English letter so that the resulting string is not a palindrome and that it is the lexicographically smallest one possible. \nExample 14: \nLeetCode Problem #1329\nTitle: Sort the Matrix Diagonally\nDescription:\nA matrix diagonal is a diagonal line of cells starting from some cell in either the topmost row or leftmost column and going in the bottom-right direction until reaching the matrix's end. For example, the matrix diagonal starting from mat[2][0], where mat is a 6 x 3 matrix, includes cells mat[2][0], mat[3][1], and mat[4][2]. \nExample 15: \nLeetCode Problem #1330\nTitle: Reverse Subarray To Maximize Array Value\nDescription:\nYou are given an integer array nums. The value of this array is defined as the sum of |nums[i] - nums[i + 1]| for all 0 <= i < nums.length - 1. \nExample 16: \nLeetCode Problem #1331\nTitle: Rank Transform of an Array\nDescription:\nGiven an array of integers arr, replace each element with its rank. \nExample 17: \nLeetCode Problem #1332\nTitle: Remove Palindromic Subsequences\nDescription:\nYou are given a string s consisting only of letters 'a' and 'b'. In a single step you can remove one palindromic subsequence from s. \nExample 18: \nLeetCode Problem #1333\nTitle: Filter Restaurants by Vegan-Friendly, Price and Distance\nDescription:\nGiven the array restaurants where restaurants[i] = [id i, rating i, veganFriendly i, price i, distance i ]. You have to filter the restaurants using three filters. \nExample 19: \nLeetCode Problem #1334\nTitle: Find the City With the Smallest Number of Neighbors at a Threshold Distance\nDescription:\nThere are n cities numbered from 0 to n-1. Given the array edges where edges[i] = [from i, to i, weight i ] represents a bidirectional and weighted edge between cities from i and to i, and given the integer distanceThreshold. \nExample 20: \nLeetCode Problem #1335\nTitle: Minimum Difficulty of a Job Schedule\nDescription:\nYou want to schedule a list of jobs in d days. Jobs are dependent (i. e To work on the i th job, you have to finish all the jobs j where 0 <= j < i ). ", "expected_response": "Example 21: \nLeetCode Problem #1337\nTitle: The K Weakest Rows in a Matrix\nDescription:\nYou are given an m x n binary matrix mat of 1 's (representing soldiers) and 0 's (representing civilians). The soldiers are positioned in front of the civilians. That is, all the 1 's will appear to the left of all the 0 's in each row. \nExample 22: \nLeetCode Problem #1338\nTitle: Reduce Array Size to The Half\nDescription:\nYou are given an integer array arr. You can choose a set of integers and remove all the occurrences of these integers in the array. \nExample 23: \nLeetCode Problem #1339\nTitle: Maximum Product of Splitted Binary Tree\nDescription:\nGiven the root of a binary tree, split the binary tree into two subtrees by removing one edge such that the product of the sums of the subtrees is maximized. \nExample 24: \nLeetCode Problem #1340\nTitle: Jump Game V\nDescription:\nGiven an array of integers arr and an integer d. In one step you can jump from index i to index:...\n\nExample 25: \nLeetCode Problem #1342\nTitle: Number of Steps to Reduce a Number to Zero\nDescription:\nGiven an integer num, return the number of steps to reduce it to zero. \nExample 26: \nLeetCode Problem #1343\nTitle: Number of Sub-arrays of Size K and Average Greater than or Equal to Threshold\nDescription:\nGiven an array of integers arr and two integers k and threshold, return the number of sub-arrays of size k and average greater than or equal to threshold. \nExample 27: \nLeetCode Problem #1344\nTitle: Angle Between Hands of a Clock\nDescription:\nGiven two numbers, hour and minutes, return the smaller angle (in degrees) formed between the hour and the minute hand. \nExample 28: \nLeetCode Problem #1345\nTitle: Jump Game IV\nDescription:\nGiven an array of integers arr, you are initially positioned at the first index of the array. \nExample 29: \nLeetCode Problem #1346\nTitle: Check If N and Its Double Exist\nDescription:\nGiven an array arr of integers, check if there exist two indices i and j such that :...\n\nExample 30: \nLeetCode Problem #1347\nTitle: Minimum Number of Steps to Make Two Strings Anagram\nDescription:\nYou are given two strings of the same length s and t. In one step you can choose any character of t and replace it with another character. \nExample 31: \nLeetCode Problem #1348\nTitle: Tweet Counts Per Frequency\nDescription:\nA social media company is trying to monitor activity on their site by analyzing the number of tweets that occur in select periods of time. These periods can be partitioned into smaller time chunks based on a certain frequency (every minute, hour, or day ). \nExample 32: \nLeetCode Problem #1349\nTitle: Maximum Students Taking Exam\nDescription:\nGiven a m * n matrix seats that represent seats distributions in a classroom. If a seat is broken, it is denoted by '#' character otherwise it is denoted by a . character. \nExample 33: \nLeetCode Problem #1351\nTitle: Count Negative Numbers in a Sorted Matrix\nDescription:\nGiven a m x n matrix grid which is sorted in non-increasing order both row-wise and column-wise, return the number of negative numbers in grid. \nExample 34: \nLeetCode Problem #1352\nTitle: Product of the Last K Numbers\nDescription:\nDesign an algorithm that accepts a stream of integers and retrieves the product of the last k integers of the stream. \nExample 35: \nLeetCode Problem #1353\nTitle: Maximum Number of Events That Can Be Attended\nDescription:\nYou are given an array of events where events[i] = [startDay i, endDay i ]. Every event i starts at startDay i and ends at endDay i. \nExample 36: \nLeetCode Problem #1354\nTitle: Construct Target Array With Multiple Sums\nDescription:\nYou are given an array target of n integers. From a starting array arr consisting of n 1's, you may perform the following procedure :...\n\nExample 37: \nLeetCode Problem #1356\nTitle: Sort Integers by The Number of 1 Bits\nDescription:\nYou are given an integer array arr. Sort the integers in the array in ascending order by the number of 1 's in their binary representation and in case of two or more integers have the same number of 1 's you have to sort them in ascending order. \nExample 38: \nLeetCode Problem #1357\nTitle: Apply Discount Every n Orders\nDescription:\nThere is a supermarket that is frequented by many customers. The products sold at the supermarket are represented as two parallel integer arrays products and prices, where the i th product has an ID of products[i] and a price of prices[i]. \nExample 39: \nLeetCode Problem #1358\nTitle: Number of Substrings Containing All Three Characters\nDescription:\nGiven a string s consisting only of characters a, b and c. \nExample 40: \nLeetCode Problem #1359\nTitle: Count All Valid Pickup and Delivery Options\nDescription:\nGiven n orders, each order consist in pickup and delivery services. ", "iloc": 1021, "frontend_question_id": 1360.0, "n_pass": 1, "response": "Example 21: \nLeetCode Problem #1336\nTitle: Number of Transactions for Each Person\nDescription:\nYou are given a list of transactions transactions where transactions[i] = [name i, time i, amount i, city i ]. \n\nExample 22: \nLeetCode Problem #1337\nTitle: The K Weakest Rows in a Matrix\nDescription:\nYou are given an m x n binary matrix mat of 1's (representing soldiers) and 0's (representing civilians). \n\nExample 23: \nLeetCode Problem #1338\nTitle: Reduce Array Size to The Half\nDescription:\nYou are given an integer array arr. You can choose a set of integers and remove all the occurrences of these integers in the array. \n\nExample 24: \nLeetCode Problem #1339\nTitle: Maximum Product of Splitted Binary Tree\nDescription:\nGiven the root of a binary tree, split the binary tree into two subtrees by removing one edge such that the product of the sums of the subtrees is maximized. Return the maximum product. \n\nExample 25: \nLeetCode Problem #1340\nTitle: Jump Game V\nDescription:\nGiven an array arr and an integer d. In one step you can jump from index i to index: i + x where: \n\nExample 26: \nLeetCode Problem #1341\nTitle: The K Weakest Rows in a Matrix\nDescription:\nYou are given an m x n binary matrix mat of 1's (representing soldiers) and 0's (representing civilians). \n\nExample 27: \nLeetCode Problem #1342\nTitle: Number of Steps to Reduce a Number to Zero\nDescription:\nGiven a non-negative integer num, return the number of steps to reduce it to zero. If the current number is even, you have to divide it by 2, otherwise, you have to subtract 1 from it.\n\nExample 28: \nLeetCode Problem #1343\nTitle: Number of Sub-arrays of Size K and Average Greater than or Equal to Threshold\nDescription:\nGiven an array of integers arr and two integers k and threshold. \n\nExample 29: \nLeetCode Problem #1344\nTitle: Angle Between Hands of a Clock\nDescription:\nGiven two numbers, hour and minutes. Return the smaller angle (in degrees) formed between the hour and the minute hand.\n\nExample 30: \nLeetCode Problem #1345\nTitle: Jump Game IV\nDescription:\nGiven an array of integers arr, you are initially positioned at the first index of the array.", "cleaned_response": " \nNumber of Transactions for Each Person\n\nYou are given a list of transactions transactions where transactions[i] = [name i, time i, amount i, city i ]. \n\n \nThe K Weakest Rows in a Matrix\n\nYou are given an m x n binary matrix mat of 1's (representing soldiers) and 0's (representing civilians). \n\n \nReduce Array Size to The Half\n\nYou are given an integer array arr. You can choose a set of integers and remove all the occurrences of these integers in the array. \n\n \nMaximum Product of Splitted Binary Tree\n\nGiven the root of a binary tree, split the binary tree into two subtrees by removing one edge such that the product of the sums of the subtrees is maximized. Return the maximum product. \n\n \nJump Game V\n\nGiven an array arr and an integer d. In one step you can jump from index i to index: i + x where: \n\n \nThe K Weakest Rows in a Matrix\n\nYou are given an m x n binary matrix mat of 1's (representing soldiers) and 0's (representing civilians). \n\n \nNumber of Steps to Reduce a Number to Zero\n\nGiven a non-negative integer num, return the number of steps to reduce it to zero. If the current number is even, you have to divide it by 2, otherwise, you have to subtract 1 from it.\n\n \nNumber of Sub-arrays of Size K and Average Greater than or Equal to Threshold\n\nGiven an array of integers arr and two integers k and threshold. \n\n \nAngle Between Hands of a Clock\n\nGiven two numbers, hour and minutes. Return the smaller angle (in degrees) formed between the hour and the minute hand.\n\n \nJump Game IV\n\nGiven an array of integers arr, you are initially positioned at the first index of the array.", "similarity": 0.9728718521550168}
{"input_context": "Example 1: \nLeetCode Problem #1360\nTitle: Number of Days Between Two Dates\nDescription:\nWrite a program to count the number of days between two dates. \nExample 2: \nLeetCode Problem #1361\nTitle: Validate Binary Tree Nodes\nDescription:\nYou have n binary tree nodes numbered from 0 to n - 1 where node i has two children leftChild[i] and rightChild[i], return true if and only if all the given nodes form exactly one valid binary tree. \nExample 3: \nLeetCode Problem #1362\nTitle: Closest Divisors\nDescription:\nGiven an integer num, find the closest two integers in absolute difference whose product equals num + 1 or num + 2. \nExample 4: \nLeetCode Problem #1363\nTitle: Largest Multiple of Three\nDescription:\nGiven an array of digits digits, return the largest multiple of three that can be formed by concatenating some of the given digits in any order. If there is no answer return an empty string. \nExample 5: \nLeetCode Problem #1365\nTitle: How Many Numbers Are Smaller Than the Current Number\nDescription:\nGiven the array nums, for each nums[i] find out how many numbers in the array are smaller than it. That is, for each nums[i] you have to count the number of valid j's such that j != i and nums[j] < nums[i]. \nExample 6: \nLeetCode Problem #1366\nTitle: Rank Teams by Votes\nDescription:\nIn a special ranking system, each voter gives a rank from highest to lowest to all teams participating in the competition. \nExample 7: \nLeetCode Problem #1367\nTitle: Linked List in Binary Tree\nDescription:\nGiven a binary tree root and a linked list with head as the first node. \nExample 8: \nLeetCode Problem #1368\nTitle: Minimum Cost to Make at Least One Valid Path in a Grid\nDescription:\nGiven an m x n grid. Each cell of the grid has a sign pointing to the next cell you should visit if you are currently in this cell. The sign of grid[i][j] can be:...\n\nExample 9: \nLeetCode Problem #1370\nTitle: Increasing Decreasing String\nDescription:\nYou are given a string s. Reorder the string using the following algorithm:...\n\nExample 10: \nLeetCode Problem #1371\nTitle: Find the Longest Substring Containing Vowels in Even Counts\nDescription:\nGiven the string s, return the size of the longest substring containing each vowel an even number of times. That is, 'a', 'e', 'i', 'o', and 'u' must appear an even number of times. \nExample 11: \nLeetCode Problem #1372\nTitle: Longest ZigZag Path in a Binary Tree\nDescription:\nYou are given the root of a binary tree. \nExample 12: \nLeetCode Problem #1373\nTitle: Maximum Sum BST in Binary Tree\nDescription:\nGiven a binary tree root, return the maximum sum of all keys of any sub-tree which is also a Binary Search Tree (BST). \nExample 13: \nLeetCode Problem #1374\nTitle: Generate a String With Characters That Have Odd Counts\nDescription:\nGiven an integer n, return a string with n characters such that each character in such string occurs an odd number of times. \nExample 14: \nLeetCode Problem #1375\nTitle: Number of Times Binary String Is Prefix-Aligned\nDescription:\nYou have a 1-indexed binary string of length n where all the bits are 0 initially. We will flip all the bits of this binary string (i. e. , change them from 0 to 1 ) one by one. You are given a 1-indexed integer array flips where flips[i] indicates that the bit at index i will be flipped in the i th step. \nExample 15: \nLeetCode Problem #1376\nTitle: Time Needed to Inform All Employees\nDescription:\nA company has n employees with a unique ID for each employee from 0 to n - 1. The head of the company is the one with headID. \nExample 16: \nLeetCode Problem #1377\nTitle: Frog Position After T Seconds\nDescription:\nGiven an undirected tree consisting of n vertices numbered from 1 to n. A frog starts jumping from vertex 1. In one second, the frog jumps from its current vertex to another unvisited vertex if they are directly connected. The frog can not jump back to a visited vertex. In case the frog can jump to several vertices, it jumps randomly to one of them with the same probability. Otherwise, when the frog can not jump to any unvisited vertex, it jumps forever on the same vertex. \nExample 17: \nLeetCode Problem #1379\nTitle: Find a Corresponding Node of a Binary Tree in a Clone of That Tree\nDescription:\nGiven two binary trees original and cloned and given a reference to a node target in the original tree. \nExample 18: \nLeetCode Problem #1380\nTitle: Lucky Numbers in a Matrix\nDescription:\nGiven an m x n matrix of distinct numbers, return all lucky numbers in the matrix in any order. \nExample 19: \nLeetCode Problem #1381\nTitle: Design a Stack With Increment Operation\nDescription:\nDesign a stack that supports increment operations on its elements. \nExample 20: \nLeetCode Problem #1382\nTitle: Balance a Binary Search Tree\nDescription:\nGiven the root of a binary search tree, return a balanced binary search tree with the same node values. If there is more than one answer, return any of them. ", "expected_response": "Example 21: \nLeetCode Problem #1383\nTitle: Maximum Performance of a Team\nDescription:\nYou are given two integers n and k and two integer arrays speed and efficiency both of length n. There are n engineers numbered from 1 to n. speed[i] and efficiency[i] represent the speed and efficiency of the i th engineer respectively. \nExample 22: \nLeetCode Problem #1385\nTitle: Find the Distance Value Between Two Arrays\nDescription:\nGiven two integer arrays arr1 and arr2, and the integer d, return the distance value between the two arrays. \nExample 23: \nLeetCode Problem #1386\nTitle: Cinema Seat Allocation\nDescription:\n...\n\nExample 24: \nLeetCode Problem #1387\nTitle: Sort Integers by The Power Value\nDescription:\nThe power of an integer x is defined as the number of steps needed to transform x into 1 using the following steps:...\n\nExample 25: \nLeetCode Problem #1388\nTitle: Pizza With 3n Slices\nDescription:\nThere is a pizza with 3n slices of varying size, you and your friends will take slices of pizza as follows:...\n\nExample 26: \nLeetCode Problem #1389\nTitle: Create Target Array in the Given Order\nDescription:\nGiven two arrays of integers nums and index. Your task is to create target array under the following rules:...\n\nExample 27: \nLeetCode Problem #1390\nTitle: Four Divisors\nDescription:\nGiven an integer array nums, return the sum of divisors of the integers in that array that have exactly four divisors. If there is no such integer in the array, return 0. \nExample 28: \nLeetCode Problem #1391\nTitle: Check if There is a Valid Path in a Grid\nDescription:\nYou are given an m x n grid. Each cell of grid represents a street. The street of grid[i][j] can be:...\n\nExample 29: \nLeetCode Problem #1392\nTitle: Longest Happy Prefix\nDescription:\nA string is called a happy prefix if is a non-empty prefix which is also a suffix (excluding itself). \nExample 30: \nLeetCode Problem #1394\nTitle: Find Lucky Integer in an Array\nDescription:\nGiven an array of integers arr, a lucky integer is an integer that has a frequency in the array equal to its value. \nExample 31: \nLeetCode Problem #1395\nTitle: Count Number of Teams\nDescription:\nThere are n soldiers standing in a line. Each soldier is assigned a unique rating value. \nExample 32: \nLeetCode Problem #1396\nTitle: Design Underground System\nDescription:\nAn underground railway system is keeping track of customer travel times between different stations. They are using this data to calculate the average time it takes to travel from one station to another. \nExample 33: \nLeetCode Problem #1397\nTitle: Find All Good Strings\nDescription:\nGiven the strings s1 and s2 of size n and the string evil, return the number of good strings. \nExample 34: \nLeetCode Problem #1399\nTitle: Count Largest Group\nDescription:\nYou are given an integer n. \nExample 35: \nLeetCode Problem #1400\nTitle: Construct K Palindrome Strings\nDescription:\nGiven a string s and an integer k, return true if you can use all the characters in s to construct k palindrome strings or false otherwise. \nExample 36: \nLeetCode Problem #1401\nTitle: Circle and Rectangle Overlapping\nDescription:\nYou are given a circle represented as (radius, xCenter, yCenter) and an axis-aligned rectangle represented as (x1, y1, x2, y2), where (x1, y1) are the coordinates of the bottom-left corner, and (x2, y2) are the coordinates of the top-right corner of the rectangle. \nExample 37: \nLeetCode Problem #1402\nTitle: Reducing Dishes\nDescription:\nA chef has collected data on the satisfaction level of his n dishes. Chef can cook any dish in 1 unit of time. \nExample 38: \nLeetCode Problem #1403\nTitle: Minimum Subsequence in Non-Increasing Order\nDescription:\nGiven the array nums, obtain a subsequence of the array whose sum of elements is strictly greater than the sum of the non included elements in such subsequence. \nExample 39: \nLeetCode Problem #1404\nTitle: Number of Steps to Reduce a Number in Binary Representation to One\nDescription:\nGiven the binary representation of an integer as a string s, return the number of steps to reduce it to 1 under the following rules :...\n\nExample 40: \nLeetCode Problem #1405\nTitle: Longest Happy String\nDescription:\nA string s is called happy if it satisfies the following conditions:...\n", "iloc": 1061, "frontend_question_id": 1406.0, "n_pass": 1, "response": "Example 21: \nLeetCode Problem #1383\nTitle: Maximum Performance of a Team\nDescription:\nThere are n engineers numbered from 1 to n and two arrays: speed and efficiency, where speed[i] and efficiency[i] represent the speed and efficiency of the i-th engineer respectively. Return the maximum performance of a team composed of at most k engineers, since the answer can be a huge number, return it modulo 10^9 + 7. \n\nExample 22: \nLeetCode Problem #1384\nTitle: Total Sales Amount by Year\nDescription:\nTable: Sales\nExample 23: \nLeetCode Problem #1385\nTitle: Find the Distance Value Between Two Arrays\nDescription:\nGiven two integer arrays arr1 and arr2, and the integer d. Return the distance value between the two arrays. \nExample 24: \nLeetCode Problem #1386\nTitle: Cinema Seat Allocation\nDescription:\nA cinema has n rows of seats, numbered from 1 to n and there are ten seats in each row, labelled from 1 to 10 as shown in this example. \nExample 25: \nLeetCode Problem #1387\nTitle: Sort Integers by The Power Value\nDescription:\nThe power of an integer x is defined as the number of steps needed to transform x into 1 using the following steps:\nExample 26: \nLeetCode Problem #1388\nTitle: Pizza With 3n Slices\nDescription:\nThere is a pizza with 3n slices of varying size, you and your friends will take slices of pizza as follows: \nExample 27: \nLeetCode Problem #1389\nTitle: Create Target Array in the Given Order\nDescription:\nGiven two arrays of integers nums and index. Your task is to create target array under the following rules:\nExample 28: \nLeetCode Problem #1390\nTitle: Four Divisors\nDescription:\nGiven an integer array nums, return the sum of divisors of the integers in that array that have exactly four divisors. \nExample 29: \nLeetCode Problem #1391\nTitle: Check if There is a Valid Path in a Grid\nDescription:\nGiven a m x n grid. Each cell of the grid represents a street. The street of grid[i][j] can be:\nExample 30: \nLeetCode Problem #1392\nTitle: Longest Happy Prefix\nDescription:\nA string is called a happy prefix if is a non-empty prefix which is also a suffix (excluding itself).", "cleaned_response": " \nMaximum Performance of a Team\n\nThere are n engineers numbered from 1 to n and two arrays: speed and efficiency, where speed[i] and efficiency[i] represent the speed and efficiency of the i-th engineer respectively. Return the maximum performance of a team composed of at most k engineers, since the answer can be a huge number, return it modulo 10^9 + 7. \n\n \nTotal Sales Amount by Year\n\nTable: Sales\n \nFind the Distance Value Between Two Arrays\n\nGiven two integer arrays arr1 and arr2, and the integer d. Return the distance value between the two arrays. \n \nCinema Seat Allocation\n\nA cinema has n rows of seats, numbered from 1 to n and there are ten seats in each row, labelled from 1 to 10 as shown in this example. \n \nSort Integers by The Power Value\n\nThe power of an integer x is defined as the number of steps needed to transform x into 1 using the following steps:\n \nPizza With 3n Slices\n\nThere is a pizza with 3n slices of varying size, you and your friends will take slices of pizza as follows: \n \nCreate Target Array in the Given Order\n\nGiven two arrays of integers nums and index. Your task is to create target array under the following rules:\n \nFour Divisors\n\nGiven an integer array nums, return the sum of divisors of the integers in that array that have exactly four divisors. \n \nCheck if There is a Valid Path in a Grid\n\nGiven a m x n grid. Each cell of the grid represents a street. The street of grid[i][j] can be:\n \nLongest Happy Prefix\n\nA string is called a happy prefix if is a non-empty prefix which is also a suffix (excluding itself).", "similarity": 0.9414666254696659}
{"input_context": "Example 1: \nLeetCode Problem #1406\nTitle: Stone Game III\nDescription:\nAlice and Bob continue their games with piles of stones. There are several stones arranged in a row, and each stone has an associated value which is an integer given in the array stoneValue. \nExample 2: \nLeetCode Problem #1408\nTitle: String Matching in an Array\nDescription:\nGiven an array of string words, return all strings in words that is a substring of another word. You can return the answer in any order. \nExample 3: \nLeetCode Problem #1409\nTitle: Queries on a Permutation With Key\nDescription:\nGiven the array queries of positive integers between 1 and m, you have to process all queries[i] (from i=0 to i=queries.length-1 ) according to the following rules:...\n\nExample 4: \nLeetCode Problem #1410\nTitle: HTML Entity Parser\nDescription:\nHTML entity parser is the parser that takes HTML code as input and replace all the entities of the special characters by the characters itself. \nExample 5: \nLeetCode Problem #1411\nTitle: Number of Ways to Paint N \u00d7 3 Grid\nDescription:\nYou have a grid of size n x 3 and you want to paint each cell of the grid with exactly one of the three colors: Red, Yellow, or Green while making sure that no two adjacent cells have the same color (i. e. , no two cells that share vertical or horizontal sides have the same color). \nExample 6: \nLeetCode Problem #1413\nTitle: Minimum Value to Get Positive Step by Step Sum\nDescription:\nGiven an array of integers nums, you start with an initial positive value startValue. \nExample 7: \nLeetCode Problem #1414\nTitle: Find the Minimum Number of Fibonacci Numbers Whose Sum Is K\nDescription:\nGiven an integer k, return the minimum number of Fibonacci numbers whose sum is equal to k. The same Fibonacci number can be used multiple times. \nExample 8: \nLeetCode Problem #1415\nTitle: The k-th Lexicographical String of All Happy Strings of Length n\nDescription:\nA happy string is a string that:...\n\nExample 9: \nLeetCode Problem #1416\nTitle: Restore The Array\nDescription:\nA program was supposed to print an array of integers. The program forgot to print whitespaces and the array is printed as a string of digits s and all we know is that all integers in the array were in the range [1, k] and there are no leading zeros in the array. \nExample 10: \nLeetCode Problem #1417\nTitle: Reformat The String\nDescription:\nYou are given an alphanumeric string s. ( Alphanumeric string is a string consisting of lowercase English letters and digits). \nExample 11: \nLeetCode Problem #1418\nTitle: Display Table of Food Orders in a Restaurant\nDescription:\nGiven the array orders, which represents the orders that customers have done in a restaurant. More specifically orders[i]=[customerName i, tableNumber i, foodItem i ] where customerName i is the name of the customer, tableNumber i is the table customer sit at, and foodItem i is the item customer orders. \nExample 12: \nLeetCode Problem #1419\nTitle: Minimum Number of Frogs Croaking\nDescription:\nYou are given the string croakOfFrogs, which represents a combination of the string \"croak\" from different frogs, that is, multiple frogs can croak at the same time, so multiple \"croak\" are mixed. \nExample 13: \nLeetCode Problem #1420\nTitle: Build Array Where You Can Find The Maximum Exactly K Comparisons\nDescription:\nYou are given three integers n, m and k. Consider the following algorithm to find the maximum element of an array of positive integers:...\n\nExample 14: \nLeetCode Problem #1422\nTitle: Maximum Score After Splitting a String\nDescription:\nGiven a string s of zeros and ones, return the maximum score after splitting the string into two non-empty substrings (i. e. left substring and right substring). \nExample 15: \nLeetCode Problem #1423\nTitle: Maximum Points You Can Obtain from Cards\nDescription:\nThere are several cards arranged in a row, and each card has an associated number of points. The points are given in the integer array cardPoints. \nExample 16: \nLeetCode Problem #1424\nTitle: Diagonal Traverse II\nDescription:\nGiven a 2D integer array nums, return all elements of nums in diagonal order as shown in the below images. \nExample 17: \nLeetCode Problem #1425\nTitle: Constrained Subsequence Sum\nDescription:\nGiven an integer array nums and an integer k, return the maximum sum of a non-empty subsequence of that array such that for every two consecutive integers in the subsequence, nums[i] and nums[j], where i < j, the condition j - i <= k is satisfied. \nExample 18: \nLeetCode Problem #1431\nTitle: Kids With the Greatest Number of Candies\nDescription:\nThere are n kids with candies. You are given an integer array candies, where each candies[i] represents the number of candies the i th kid has, and an integer extraCandies, denoting the number of extra candies that you have. \nExample 19: \nLeetCode Problem #1432\nTitle: Max Difference You Can Get From Changing an Integer\nDescription:\nYou are given an integer num. You will apply the following steps exactly two times:...\n\nExample 20: \nLeetCode Problem #1433\nTitle: Check If a String Can Break Another String\nDescription:\nGiven two strings: s1 and s2 with the same size, check if some permutation of string s1 can break some permutation of string s2 or vice-versa. In other words s2 can break s1 or vice-versa. ", "expected_response": "Example 21: \nLeetCode Problem #1434\nTitle: Number of Ways to Wear Different Hats to Each Other\nDescription:\nThere are n people and 40 types of hats labeled from 1 to 40. \nExample 22: \nLeetCode Problem #1436\nTitle: Destination City\nDescription:\nYou are given the array paths, where paths[i] = [cityA i, cityB i ] means there exists a direct path going from cityA i to cityB i. Return the destination city, that is, the city without any path outgoing to another city. \nExample 23: \nLeetCode Problem #1437\nTitle: Check If All 1's Are at Least Length K Places Away\nDescription:\nGiven an binary array nums and an integer k, return true if all 1 's are at least k places away from each other, otherwise return false. \nExample 24: \nLeetCode Problem #1438\nTitle: Longest Continuous Subarray With Absolute Diff Less Than or Equal to Limit\nDescription:\nGiven an array of integers nums and an integer limit, return the size of the longest non-empty subarray such that the absolute difference between any two elements of this subarray is less than or equal to limit. \nExample 25: \nLeetCode Problem #1439\nTitle: Find the Kth Smallest Sum of a Matrix With Sorted Rows\nDescription:\nYou are given an m x n matrix mat that has its rows sorted in non-decreasing order and an integer k. \nExample 26: \nLeetCode Problem #1441\nTitle: Build an Array With Stack Operations\nDescription:\nYou are given an integer array target and an integer n. \nExample 27: \nLeetCode Problem #1442\nTitle: Count Triplets That Can Form Two Arrays of Equal XOR\nDescription:\nGiven an array of integers arr. \nExample 28: \nLeetCode Problem #1443\nTitle: Minimum Time to Collect All Apples in a Tree\nDescription:\nGiven an undirected tree consisting of n vertices numbered from 0 to n-1, which has some apples in their vertices. You spend 1 second to walk over one edge of the tree. Return the minimum time in seconds you have to spend to collect all apples in the tree, starting at vertex 0 and coming back to this vertex. \nExample 29: \nLeetCode Problem #1444\nTitle: Number of Ways of Cutting a Pizza\nDescription:\nGiven a rectangular pizza represented as a rows x cols matrix containing the following characters: 'A' (an apple) and . (empty cell) and given the integer k. You have to cut the pizza into k pieces using k-1 cuts. \nExample 30: \nLeetCode Problem #1446\nTitle: Consecutive Characters\nDescription:\nThe power of the string is the maximum length of a non-empty substring that contains only one unique character. \nExample 31: \nLeetCode Problem #1447\nTitle: Simplified Fractions\nDescription:\nGiven an integer n, return a list of all simplified fractions between 0 and 1 (exclusive) such that the denominator is less-than-or-equal-to n. You can return the answer in any order. \nExample 32: \nLeetCode Problem #1448\nTitle: Count Good Nodes in Binary Tree\nDescription:\nGiven a binary tree root, a node X in the tree is named good if in the path from root to X there are no nodes with a value greater than X. \nExample 33: \nLeetCode Problem #1449\nTitle: Form Largest Integer With Digits That Add up to Target\nDescription:\nGiven an array of integers cost and an integer target, return the maximum integer you can paint under the following rules :...\n\nExample 34: \nLeetCode Problem #1450\nTitle: Number of Students Doing Homework at a Given Time\nDescription:\nGiven two integer arrays startTime and endTime and given an integer queryTime. \nExample 35: \nLeetCode Problem #1451\nTitle: Rearrange Words in a Sentence\nDescription:\nGiven a sentence text (A sentence is a string of space-separated words) in the following format:...\n\nExample 36: \nLeetCode Problem #1452\nTitle: People Whose List of Favorite Companies Is Not a Subset of Another List\nDescription:\nGiven the array favoriteCompanies where favoriteCompanies[i] is the list of favorites companies for the ith person ( indexed from 0 ). \nExample 37: \nLeetCode Problem #1453\nTitle: Maximum Number of Darts Inside of a Circular Dartboard\nDescription:\nAlice is throwing n darts on a very large wall. You are given an array darts where darts[i] = [x i, y i ] is the position of the i th dart that Alice threw on the wall. \nExample 38: \nLeetCode Problem #1455\nTitle: Check If a Word Occurs As a Prefix of Any Word in a Sentence\nDescription:\nGiven a sentence that consists of some words separated by a single space, and a searchWord, check if searchWord is a prefix of any word in sentence. \nExample 39: \nLeetCode Problem #1456\nTitle: Maximum Number of Vowels in a Substring of Given Length\nDescription:\nGiven a string s and an integer k, return the maximum number of vowel letters in any substring of s with length k. \nExample 40: \nLeetCode Problem #1457\nTitle: Pseudo-Palindromic Paths in a Binary Tree\nDescription:\nGiven a binary tree where node values are digits from 1 to 9. A path in the binary tree is said to be pseudo-palindromic if at least one permutation of the node values in the path is a palindrome. ", "iloc": 1101, "frontend_question_id": 1458.0, "n_pass": 1, "response": "Example 21: \nLeetCode Problem #1434\nTitle: Number of Ways to Wear Different Hats to Each Other\nDescription: \nThere are n people and 40 types of hats labeled from 1 to 40. Given a list of list of integers hats, where hats[i] is a list of all hats preferred by the i-th person. Return the number of ways such that every person choose at least one hat and no two persons choose the same hat. \n\nExample 22: \nLeetCode Problem #1435\nTitle: Create a Session Bar Chart\nDescription: \nYou have a session bar chart that consists of a matrix bars of size m x 3, where bars[i] = [start, end, height] represents a bar in the chart. A session bar is a bar that can be selected as one large bar and contains at least one other bar inside it. \n\nExample 23: \nLeetCode Problem #1436\nTitle: Destination City\nDescription: \nYou are given the array paths, where paths[i] = [cityAi, cityBi] means there exists a direct path going from cityAi to cityBi. Return the destination city, that is, the city without any path outgoing to another city. \n\nExample 24: \nLeetCode Problem #1437\nTitle: Check If All 1's Are at Least Length K Places Away\nDescription: \nGiven an array nums of 0s and 1s and an integer k, return True if all 1's are at least k places away from each other, otherwise return False. \n\nExample 25: \nLeetCode Problem #1438\nTitle: Longest Continuous Subarray With Absolute Diff Less Than or Equal to Limit\nDescription: \nGiven an integer array nums, return the maximum length of a subarray that satisfies the following condition: ...\n\nExample 26: \nLeetCode Problem #1439\nTitle: Find the Kth Smallest Sum of a Matrix With Sorted Rows\nDescription: \nYou are given an m * n matrix, mat, and an integer k, which has its rows sorted in non-decreasing order. \n\nExample 27: \nLeetCode Problem #1440\nTitle: Evaluate Boolean Expression\nDescription: \nGiven a boolean expression s composed of the following symbols: 't' representing the true, 'f' representing the false, '&amp;' representing the bitwise AND operator...\n\nExample 28: \nLeetCode Problem #1441\nTitle: Build an Array With Stack Operations\nDescription: \nGiven an array target and an integer n. In each iteration, you will read a number from  list = {1,2,3..., n}. \n\nExample 29: \nLeetCode Problem #1442\nTitle: Count Triplets That Can Form Two Arrays of Equal XOR\nDescription:\nGiven an array arr, you need to find the number of triplets of indices (i, j, k), such that i < j < k and arr[i] XOR arr[i+1] XOR ... XOR arr[j-1] XOR arr[j] XOR ... XOR arr[k] = 0.\n\nExample 30: \nLeetCode Problem #1443\nTitle: Minimum Time to Collect All Apples in a Tree\nDescription: \nGiven an undirected tree consisting of n vertices numbered from 0 to n-1, which has some apples in their vertices. You spend 1 second to walk over one edge of the tree. \n\nExample 31: \nLeetCode Problem #1444\nTitle: Number of Ways of Cutting a Pizza\nDescription: \nGiven a rectangular pizza represented as a rows x cols matrix containing the following characters: 'A' (an apple) and '.' (empty cell). \n\nExample 32: \nLeetCode Problem #1445\nTitle: Apples &amp; Oranges\nDescription: \nYou have two bags of apples and oranges. You are given array apples and array oranges where apples[i] and oranges[i] are the weights of the i-th apple and orange respectively...\n\nExample 33: \nLeetCode Problem #1446\nTitle: Consecutive Characters\nDescription: \nGiven a string s, the power of the string is the maximum length of a non-empty substring that contains only one unique character.\n\nExample 34: \nLeetCode Problem #1447\nTitle: Simplified Fractions\nDescription: \nGiven an integer n, return a list of all simplified fractions between 0 and 1 (exclusive) such that the denominator is less-than-or-equal-to n. \n\nExample 35: \nLeetCode Problem #1448\nTitle: Count Good Nodes in Binary Tree\nDescription: \nGiven a binary tree root, a node X in the tree is named good if in the path from root to X there are no nodes with a value greater than X.\n\nExample 36: \nLeetCode Problem #1449\nTitle: Form Largest Integer With Digits That Add up to Target\nDescription: \nGiven an array of integers cost and an integer target. Return the maximum integer you can paint under the following rules: ...\n\nExample 37: \nLeetCode Problem #1450\nTitle: Number of Students Doing Homework at a Given Time\nDescription: \nGiven two integer arrays startTime and endTime and given an integer queryTime.\n\nExample 38: \nLeetCode Problem #1451\nTitle: Rearrange Words in a Sentence\nDescription: \nGiven a sentence text (A sentence is a string of space-separated words) in the following format: \n\nExample 39: \nLeetCode Problem #1452\nTitle: People Whose List of Favorite Companies Is Not a Subset of Another List\nDescription: \nGiven the array favoriteCompanies where favoriteCompanies[i] is the list of favorites companies for the ith person (indexed from 0). \n\nExample 40: \nLeetCode Problem #1453\nTitle: Maximum Number of Darts Inside of a Circular Dartboard\nDescription: \nYou have a very large square wall and a circular dartboard placed on the wall. You have been challenged to throw darts into the board blindfolded. \n\nExample 41: \nLeetCode Problem #1454\nTitle: Active Users\nDescription: \nTable: Accounts\n\nExample 42: \nLeetCode Problem #1455\nTitle: Check If a Word Occurs As a Prefix of Any Word in a Sentence\nDescription: \nGiven a sentence that consists of some words separated by a single space, and a searchWord, check if searchWord is a prefix of any word in sentence.\n\nExample 43: \nLeetCode Problem #1456\nTitle: Maximum Number of Vowels in a Substring of Given Length\nDescription: \nGiven a string s and an integer k.\n\nExample 44: \nLeetCode Problem #1457\nTitle: Pseudo-Palindromic Paths in a Binary Tree\nDescription: \nGiven a binary tree where node values are digits from 1 to 9. \n\nExample 45: \nLeetCode Problem #1458\nTitle: Max Dot Product of Two Subsequences\nDescription: \nGiven two arrays nums1 and nums2.\n\nExample 46: \nLeetCode Problem #1459\nTitle: Rectangles Area\nDescription: \nYou are given an array rectangles where rectangles[i] = [li, wi] represents the ith rectangle of length li and width wi.\n\nExample 47: \nLeetCode Problem #1460\nTitle: Make Two Arrays Equal by Reversing Sub-arrays\nDescription: \nGiven two integer arrays of equal length target and arr.\n\nExample 48: \nLeetCode Problem #1461\nTitle: Check If a String Contains All Binary Codes of Size K\nDescription: \nGiven a binary string s and an integer k.\n\nExample 49: \nLeetCode Problem #1462\nTitle: Course Schedule IV\nDescription: \nThere are a total of n courses you have to take labeled from 0 to n-1.\n\nExample 50: \nLeetCode Problem #1463\nTitle: Cherry Pickup II\nDescription: \nGiven a rows x cols matrix grid representing a field of cherries.", "cleaned_response": " \nNumber of Ways to Wear Different Hats to Each Other\n \nThere are n people and 40 types of hats labeled from 1 to 40. Given a list of list of integers hats, where hats[i] is a list of all hats preferred by the i-th person. Return the number of ways such that every person choose at least one hat and no two persons choose the same hat. \n\n \nCreate a Session Bar Chart\n \nYou have a session bar chart that consists of a matrix bars of size m x 3, where bars[i] = [start, end, height] represents a bar in the chart. A session bar is a bar that can be selected as one large bar and contains at least one other bar inside it. \n\n \nDestination City\n \nYou are given the array paths, where paths[i] = [cityAi, cityBi] means there exists a direct path going from cityAi to cityBi. Return the destination city, that is, the city without any path outgoing to another city. \n\n \nCheck If All 1's Are at Least Length K Places Away\n \nGiven an array nums of 0s and 1s and an integer k, return True if all 1's are at least k places away from each other, otherwise return False. \n\n \nLongest Continuous Subarray With Absolute Diff Less Than or Equal to Limit\n \nGiven an integer array nums, return the maximum length of a subarray that satisfies the following condition: ...\n\n \nFind the Kth Smallest Sum of a Matrix With Sorted Rows\n \nYou are given an m * n matrix, mat, and an integer k, which has its rows sorted in non-decreasing order. \n\n \nEvaluate Boolean Expression\n \nGiven a boolean expression s composed of the following symbols: 't' representing the true, 'f' representing the false, '&amp;' representing the bitwise AND operator...\n\n \nBuild an Array With Stack Operations\n \nGiven an array target and an integer n. In each iteration, you will read a number from  list = {1,2,3..., n}. \n\n \nCount Triplets That Can Form Two Arrays of Equal XOR\n\nGiven an array arr, you need to find the number of triplets of indices (i, j, k), such that i < j < k and arr[i] XOR arr[i+1] XOR ... XOR arr[j-1] XOR arr[j] XOR ... XOR arr[k] = 0.\n\n \nMinimum Time to Collect All Apples in a Tree\n \nGiven an undirected tree consisting of n vertices numbered from 0 to n-1, which has some apples in their vertices. You spend 1 second to walk over one edge of the tree. \n\n \nNumber of Ways of Cutting a Pizza\n \nGiven a rectangular pizza represented as a rows x cols matrix containing the following characters: 'A' (an apple) and '.' (empty cell). \n\n \nApples &amp; Oranges\n \nYou have two bags of apples and oranges. You are given array apples and array oranges where apples[i] and oranges[i] are the weights of the i-th apple and orange respectively...\n\n \nConsecutive Characters\n \nGiven a string s, the power of the string is the maximum length of a non-empty substring that contains only one unique character.\n\n \nSimplified Fractions\n \nGiven an integer n, return a list of all simplified fractions between 0 and 1 (exclusive) such that the denominator is less-than-or-equal-to n. \n\n \nCount Good Nodes in Binary Tree\n \nGiven a binary tree root, a node X in the tree is named good if in the path from root to X there are no nodes with a value greater than X.\n\n \nForm Largest Integer With Digits That Add up to Target\n \nGiven an array of integers cost and an integer target. Return the maximum integer you can paint under the following rules: ...\n\n \nNumber of Students Doing Homework at a Given Time\n \nGiven two integer arrays startTime and endTime and given an integer queryTime.\n\n \nRearrange Words in a Sentence\n \nGiven a sentence text (A sentence is a string of space-separated words) in the following format: \n\n \nPeople Whose List of Favorite Companies Is Not a Subset of Another List\n \nGiven the array favoriteCompanies where favoriteCompanies[i] is the list of favorites companies for the ith person (indexed from 0). \n\n \nMaximum Number of Darts Inside of a Circular Dartboard\n \nYou have a very large square wall and a circular dartboard placed on the wall. You have been challenged to throw darts into the board blindfolded. \n\n \nActive Users\n \nTable: Accounts\n\n \nCheck If a Word Occurs As a Prefix of Any Word in a Sentence\n \nGiven a sentence that consists of some words separated by a single space, and a searchWord, check if searchWord is a prefix of any word in sentence.\n\n \nMaximum Number of Vowels in a Substring of Given Length\n \nGiven a string s and an integer k.\n\n \nPseudo-Palindromic Paths in a Binary Tree\n \nGiven a binary tree where node values are digits from 1 to 9. \n\n \nMax Dot Product of Two Subsequences\n \nGiven two arrays nums1 and nums2.\n\n \nRectangles Area\n \nYou are given an array rectangles where rectangles[i] = [li, wi] represents the ith rectangle of length li and width wi.\n\n \nMake Two Arrays Equal by Reversing Sub-arrays\n \nGiven two integer arrays of equal length target and arr.\n\n \nCheck If a String Contains All Binary Codes of Size K\n \nGiven a binary string s and an integer k.\n\n \nCourse Schedule IV\n \nThere are a total of n courses you have to take labeled from 0 to n-1.\n\n \nCherry Pickup II\n \nGiven a rows x cols matrix grid representing a field of cherries.", "similarity": 0.9380954783937823}
{"input_context": "Example 1: \nLeetCode Problem #1458\nTitle: Max Dot Product of Two Subsequences\nDescription:\nGiven two arrays nums1 and nums2. \nExample 2: \nLeetCode Problem #1460\nTitle: Make Two Arrays Equal by Reversing Subarrays\nDescription:\nYou are given two integer arrays of equal length target and arr. In one step, you can select any non-empty subarray of arr and reverse it. You are allowed to make any number of steps. \nExample 3: \nLeetCode Problem #1461\nTitle: Check If a String Contains All Binary Codes of Size K\nDescription:\nGiven a binary string s and an integer k, return true if every binary code of length k is a substring of s. Otherwise, return false. \nExample 4: \nLeetCode Problem #1462\nTitle: Course Schedule IV\nDescription:\nThere are a total of numCourses courses you have to take, labeled from 0 to numCourses - 1. You are given an array prerequisites where prerequisites[i] = [a i, b i ] indicates that you must take course a i first if you want to take course b i. \nExample 5: \nLeetCode Problem #1463\nTitle: Cherry Pickup II\nDescription:\nYou are given a rows x cols matrix grid representing a field of cherries where grid[i][j] represents the number of cherries that you can collect from the (i, j) cell. \nExample 6: \nLeetCode Problem #1464\nTitle: Maximum Product of Two Elements in an Array\nDescription:\nGiven the array of integers nums, you will choose two different indices i and j of that array. Return the maximum value of (nums[i]-1)*(nums[j]-1). \nExample 7: \nLeetCode Problem #1465\nTitle: Maximum Area of a Piece of Cake After Horizontal and Vertical Cuts\nDescription:\nYou are given a rectangular cake of size h x w and two arrays of integers horizontalCuts and verticalCuts where:...\n\nExample 8: \nLeetCode Problem #1466\nTitle: Reorder Routes to Make All Paths Lead to the City Zero\nDescription:\nThere are n cities numbered from 0 to n - 1 and n - 1 roads such that there is only one way to travel between two different cities (this network form a tree). Last year, The ministry of transport decided to orient the roads in one direction because they are too narrow. \nExample 9: \nLeetCode Problem #1467\nTitle: Probability of a Two Boxes Having The Same Number of Distinct Balls\nDescription:\nGiven 2n balls of k distinct colors. You will be given an integer array balls of size k where balls[i] is the number of balls of color i. \nExample 10: \nLeetCode Problem #1470\nTitle: Shuffle the Array\nDescription:\nGiven the array nums consisting of 2n elements in the form [x 1, x 2,. . . , x n, y 1, y 2,. . . , y n ]. \nExample 11: \nLeetCode Problem #1471\nTitle: The k Strongest Values in an Array\nDescription:\nGiven an array of integers arr and an integer k. \nExample 12: \nLeetCode Problem #1472\nTitle: Design Browser History\nDescription:\nYou have a browser of one tab where you start on the homepage and you can visit another url, get back in the history number of steps or move forward in the history number of steps. \nExample 13: \nLeetCode Problem #1473\nTitle: Paint House III\nDescription:\nThere is a row of m houses in a small city, each house must be painted with one of the n colors (labeled from 1 to n ), some houses that have been painted last summer should not be painted again. \nExample 14: \nLeetCode Problem #1475\nTitle: Final Prices With a Special Discount in a Shop\nDescription:\nYou are given an integer array prices where prices[i] is the price of the i th item in a shop. \nExample 15: \nLeetCode Problem #1476\nTitle: Subrectangle Queries\nDescription:\nImplement the class SubrectangleQueries which receives a rows x cols rectangle as a matrix of integers in the constructor and supports two methods:...\n\nExample 16: \nLeetCode Problem #1477\nTitle: Find Two Non-overlapping Sub-arrays Each With Target Sum\nDescription:\nYou are given an array of integers arr and an integer target. \nExample 17: \nLeetCode Problem #1478\nTitle: Allocate Mailboxes\nDescription:\nGiven the array houses where houses[i] is the location of the i th house along a street and an integer k, allocate k mailboxes in the street. \nExample 18: \nLeetCode Problem #1480\nTitle: Running Sum of 1d Array\nDescription:\nGiven an array nums. We define a running sum of an array as runningSum[i] = sum(nums[0]\u2026nums[i]). \nExample 19: \nLeetCode Problem #1481\nTitle: Least Number of Unique Integers after K Removals\nDescription:\nGiven an array of integers arr and an integer k. Find the least number of unique integers after removing exactly k elements. \nExample 20: \nLeetCode Problem #1482\nTitle: Minimum Number of Days to Make m Bouquets\nDescription:\nYou are given an integer array bloomDay, an integer m and an integer k. ", "expected_response": "Example 21: \nLeetCode Problem #1483\nTitle: Kth Ancestor of a Tree Node\nDescription:\nYou are given a tree with n nodes numbered from 0 to n - 1 in the form of a parent array parent where parent[i] is the parent of i th node. The root of the tree is node 0. Find the k th ancestor of a given node. \nExample 22: \nLeetCode Problem #1486\nTitle: XOR Operation in an Array\nDescription:\nYou are given an integer n and an integer start. \nExample 23: \nLeetCode Problem #1487\nTitle: Making File Names Unique\nDescription:\nGiven an array of strings names of size n. You will create n folders in your file system such that, at the i th minute, you will create a folder with the name names[i]. \nExample 24: \nLeetCode Problem #1488\nTitle: Avoid Flood in The City\nDescription:\nYour country has an infinite number of lakes. Initially, all the lakes are empty, but when it rains over the nth lake, the nth lake becomes full of water. If it rains over a lake that is full of water, there will be a flood. Your goal is to avoid floods in any lake. \nExample 25: \nLeetCode Problem #1489\nTitle: Find Critical and Pseudo-Critical Edges in Minimum Spanning Tree\nDescription:\nGiven a weighted undirected connected graph with n vertices numbered from 0 to n - 1, and an array edges where edges[i] = [a i, b i, weight i ] represents a bidirectional and weighted edge between nodes a i and b i. A minimum spanning tree (MST) is a subset of the graph's edges that connects all vertices without cycles and with the minimum possible total edge weight. \nExample 26: \nLeetCode Problem #1491\nTitle: Average Salary Excluding the Minimum and Maximum Salary\nDescription:\nYou are given an array of unique integers salary where salary[i] is the salary of the i th employee. \nExample 27: \nLeetCode Problem #1492\nTitle: The kth Factor of n\nDescription:\nYou are given two positive integers n and k. A factor of an integer n is defined as an integer i where n % i == 0. \nExample 28: \nLeetCode Problem #1493\nTitle: Longest Subarray of 1's After Deleting One Element\nDescription:\nGiven a binary array nums, you should delete one element from it. \nExample 29: \nLeetCode Problem #1494\nTitle: Parallel Courses II\nDescription:\nYou are given an integer n, which indicates that there are n courses labeled from 1 to n. You are also given an array relations where relations[i] = [prevCourse i, nextCourse i ], representing a prerequisite relationship between course prevCourse i and course nextCourse i : course prevCourse i has to be taken before course nextCourse i. Also, you are given the integer k. \nExample 30: \nLeetCode Problem #1496\nTitle: Path Crossing\nDescription:\nGiven a string path, where path[i] = 'N', 'S', 'E' or 'W', each representing moving one unit north, south, east, or west, respectively. You start at the origin (0, 0) on a 2D plane and walk on the path specified by path. \nExample 31: \nLeetCode Problem #1497\nTitle: Check If Array Pairs Are Divisible by k\nDescription:\nGiven an array of integers arr of even length n and an integer k. \nExample 32: \nLeetCode Problem #1498\nTitle: Number of Subsequences That Satisfy the Given Sum Condition\nDescription:\nYou are given an array of integers nums and an integer target. \nExample 33: \nLeetCode Problem #1499\nTitle: Max Value of Equation\nDescription:\nYou are given an array points containing the coordinates of points on a 2D plane, sorted by the x-values, where points[i] = [x i, y i ] such that x i < x j for all 1 <= i < j <= points.length. You are also given an integer k. \nExample 34: \nLeetCode Problem #1502\nTitle: Can Make Arithmetic Progression From Sequence\nDescription:\nA sequence of numbers is called an arithmetic progression if the difference between any two consecutive elements is the same. \nExample 35: \nLeetCode Problem #1503\nTitle: Last Moment Before All Ants Fall Out of a Plank\nDescription:\nWe have a wooden plank of the length n units. Some ants are walking on the plank, each ant moves with a speed of 1 unit per second. Some of the ants move to the left, the other move to the right. \nExample 36: \nLeetCode Problem #1504\nTitle: Count Submatrices With All Ones\nDescription:\nGiven an m x n binary matrix mat, return the number of submatrices that have all ones. \nExample 37: \nLeetCode Problem #1505\nTitle: Minimum Possible Integer After at Most K Adjacent Swaps On Digits\nDescription:\nYou are given a string num representing the digits of a very large integer and an integer k. You are allowed to swap any two adjacent digits of the integer at most k times. \nExample 38: \nLeetCode Problem #1507\nTitle: Reformat Date\nDescription:\nGiven a date string in the form Day Month Year, where:...\n\nExample 39: \nLeetCode Problem #1508\nTitle: Range Sum of Sorted Subarray Sums\nDescription:\nYou are given the array nums consisting of n positive integers. You computed the sum of all non-empty continuous subarrays from the array and then sorted them in non-decreasing order, creating a new array of n * (n + 1) / 2 numbers. \nExample 40: \nLeetCode Problem #1509\nTitle: Minimum Difference Between Largest and Smallest Value in Three Moves\nDescription:\nYou are given an integer array nums. ", "iloc": 1141, "frontend_question_id": 1510.0, "n_pass": 1, "response": "Example 21:\nLeetCode Problem #1483\nTitle: Kth Ancestor of a Tree Node\nDescription:\nYou are given a tree with n nodes labeled from 0 to n-1 and an array of n-1 edges where edges[i] = [parent[i], i] represents a directed edge from node parent[i] to node i. You are also given several queries, where queries[i] = [node i, k i ].\nExample 22:\nLeetCode Problem #1484\nTitle: Clone Binary Tree With Random Pointer\nDescription:\nA binary tree is given such that each node contains an additional random pointer which could point to any node in the tree or null.\nExample 23:\nLeetCode Problem #1485\nTitle: Clone N-ary Tree\nDescription:\nGiven a root of an N-ary tree, return a deep copy (clone) of the tree.\nExample 24:\nLeetCode Problem #1486\nTitle: XOR Operation in an Array\nDescription:\nGiven an integer n and an integer start.\nExample 25:\nLeetCode Problem #1487\nTitle: Making File Names Unique\nDescription:\nGiven an array of strings names of size n. You will create n folders in your file system such that, at ith minute, you will create a folder with the name names[i].\nExample 26:\nLeetCode Problem #1488\nTitle: Avoid Flood in The City\nDescription:\nYour country has an infinite number of lakes. Initially, all the lakes are empty, but when it rains over the ith lake, the lake becomes full of water and the water is outflowed to its neighboring lakes if they are empty. \nExample 27:\nLeetCode Problem #1489\nTitle: Find Critical and Pseudo-Critical Edges in Minimum Spanning Tree\nDescription:\nGiven a weighted undirected connected graph with n vertices numbered from 0 to n-1, and an array edges where edges[i] = [from i, to i, weight i ] represents a bidirectional and weighted edge between nodes from i and to i. \nExample 28:\nLeetCode Problem #1490\nTitle: Clone Binary Tree With Random Pointer\nDescription:\nGiven the following details of a matrix with n columns and 2 rows :\nExample 29:\nLeetCode Problem #1492\nTitle: The kth Factor of n\nDescription:\nGiven two positive integers n and k.\nExample 30:\nLeetCode Problem #1493\nTitle: Longest Subarray of 1's After Deleting One Element\nDescription:\nGiven a binary array nums, you should delete one element from it.\nExample 31:\nLeetCode Problem #1494\nTitle: Parallel Courses II\nDescription:\nGiven an integer n, the number of courses taken before.\nExample 32:\nLeetCode Problem #1495\nTitle: Friendly Movies Streamed Last N Days\nDescription:\nGiven a stream of n movies including their release dates and plays, and a list of movie genres, pick two different movies from the stream that belong to different genres and have been streamed on the last n days. \nExample 33:\nLeetCode Problem #1496\nTitle: Path Crossing\nDescription:\nGiven a string path, where path[i] = 'N', 'S', 'E' or 'W', each representing moving one unit north, south, east, or west, respectively.\nExample 34:\nLeetCode Problem #1497\nTitle: Check If Array Pairs Are Divisible by k\nDescription:\nGiven an array of integers arr of even length n and an integer k.\nExample 35:\nLeetCode Problem #1498\nTitle: Number of Subsequences That Satisfy the Given Sum Condition\nDescription:\nGiven an array of integers nums and an integer target.\nExample 36:\nLeetCode Problem #1499\nTitle: Max Value of Equation\nDescription:\nGiven an array points containing the coordinates of points on a 2D plane, sorted by the x-values.\nExample 37:\nLeetCode Problem #1500\nTitle: Design a File Sharing System\nDescription:\nWe will use a file-sharing system to share a very large file that consists of m small chunks.\nExample 38:\nLeetCode Problem #1501\nTitle: Number of Different Integers in a String\nDescription:\nYou are given a string word that consists of digits and lowercase English letters.\nExample 39:\nLeetCode Problem #1502\nTitle: Can Make Arithmetic Progression From Sequence\nDescription:\nGiven an array of numbers arr. A sequence of numbers is called an arithmetic progression if the difference between any two consecutive elements is the same.\nExample 40:\nLeetCode Problem #1503\nTitle: Last Moment Before All Ants Fall Out of a Plank\nDescription:\nWe have a wooden plank of the length n units.\nExample 41:\nLeetCode Problem #1504\nTitle: Count Submatrices With All Ones\nDescription:\nGiven a rows * columns matrix mat of ones and zeros, return how many submatrices have all ones.\nExample 42:\nLeetCode Problem #1505\nTitle: Minimum Possible Integer After at Most K Adjacent Swaps On Digits\nDescription:\nGiven a string num representing the digits of a very large integer and an integer k.\nExample 43:\nLeetCode Problem #1506\nTitle: Find Root of N-Ary Tree\nDescription:\nYou are given all the nodes of an N-ary tree as an array of Node objects, where each node has a unique value.\nExample 44:\nLeetCode Problem #1507\nTitle: Reformat Date\nDescription:\nGiven a date string in the form Day Month Year, where:\nExample 45:\nLeetCode Problem #1508\nTitle: Range Sum of Sorted Subarray Sums\nDescription:\nGiven the array nums consisting of n positive integers.\nExample 46:\nLeetCode Problem #1509\nTitle: Minimum Difference Between Largest and Smallest Value in Three Moves\nDescription:\nGiven an array nums, you are allowed to choose one element of nums and change it by any value in one move.\nExample 47:\nLeetCode Problem #1510\nTitle: Stone Game IV\nDescription:\nAlice and Bob take turns playing a game, with Alice starting first.\nExample 48:\nLeetCode Problem #1511\nTitle: Customer Order Frequency\nDescription:\nWrite an SQL query to report the frequency of each customer's orders regardless whether they were successful or not.\nExample 49:\nLeetCode Problem #1512\nTitle: Number of Good Pairs\nDescription:\nGiven an array of integers nums.\nExample 50:\nLeetCode Problem #1513\nTitle: Minimum Number of People to Teach\nDescription:\nOn a social network consisting of m users and some friendships between users, two users can communicate with each other if they know a common language.", "cleaned_response": "\nKth Ancestor of a Tree Node\n\nYou are given a tree with n nodes labeled from 0 to n-1 and an array of n-1 edges where edges[i] = [parent[i], i] represents a directed edge from node parent[i] to node i. You are also given several queries, where queries[i] = [node i, k i ].\n\nClone Binary Tree With Random Pointer\n\nA binary tree is given such that each node contains an additional random pointer which could point to any node in the tree or null.\n\nClone N-ary Tree\n\nGiven a root of an N-ary tree, return a deep copy (clone) of the tree.\n\nXOR Operation in an Array\n\nGiven an integer n and an integer start.\n\nMaking File Names Unique\n\nGiven an array of strings names of size n. You will create n folders in your file system such that, at ith minute, you will create a folder with the name names[i].\n\nAvoid Flood in The City\n\nYour country has an infinite number of lakes. Initially, all the lakes are empty, but when it rains over the ith lake, the lake becomes full of water and the water is outflowed to its neighboring lakes if they are empty. \n\nFind Critical and Pseudo-Critical Edges in Minimum Spanning Tree\n\nGiven a weighted undirected connected graph with n vertices numbered from 0 to n-1, and an array edges where edges[i] = [from i, to i, weight i ] represents a bidirectional and weighted edge between nodes from i and to i. \n\nClone Binary Tree With Random Pointer\n\nGiven the following details of a matrix with n columns and 2 rows :\n\nThe kth Factor of n\n\nGiven two positive integers n and k.\n\nLongest Subarray of 1's After Deleting One Element\n\nGiven a binary array nums, you should delete one element from it.\n\nParallel Courses II\n\nGiven an integer n, the number of courses taken before.\n\nFriendly Movies Streamed Last N Days\n\nGiven a stream of n movies including their release dates and plays, and a list of movie genres, pick two different movies from the stream that belong to different genres and have been streamed on the last n days. \n\nPath Crossing\n\nGiven a string path, where path[i] = 'N', 'S', 'E' or 'W', each representing moving one unit north, south, east, or west, respectively.\n\nCheck If Array Pairs Are Divisible by k\n\nGiven an array of integers arr of even length n and an integer k.\n\nNumber of Subsequences That Satisfy the Given Sum Condition\n\nGiven an array of integers nums and an integer target.\n\nMax Value of Equation\n\nGiven an array points containing the coordinates of points on a 2D plane, sorted by the x-values.\n\nDesign a File Sharing System\n\nWe will use a file-sharing system to share a very large file that consists of m small chunks.\n\nNumber of Different Integers in a String\n\nYou are given a string word that consists of digits and lowercase English letters.\n\nCan Make Arithmetic Progression From Sequence\n\nGiven an array of numbers arr. A sequence of numbers is called an arithmetic progression if the difference between any two consecutive elements is the same.\n\nLast Moment Before All Ants Fall Out of a Plank\n\nWe have a wooden plank of the length n units.\n\nCount Submatrices With All Ones\n\nGiven a rows * columns matrix mat of ones and zeros, return how many submatrices have all ones.\n\nMinimum Possible Integer After at Most K Adjacent Swaps On Digits\n\nGiven a string num representing the digits of a very large integer and an integer k.\n\nFind Root of N-Ary Tree\n\nYou are given all the nodes of an N-ary tree as an array of Node objects, where each node has a unique value.\n\nReformat Date\n\nGiven a date string in the form Day Month Year, where:\n\nRange Sum of Sorted Subarray Sums\n\nGiven the array nums consisting of n positive integers.\n\nMinimum Difference Between Largest and Smallest Value in Three Moves\n\nGiven an array nums, you are allowed to choose one element of nums and change it by any value in one move.\n\nStone Game IV\n\nAlice and Bob take turns playing a game, with Alice starting first.\n\nCustomer Order Frequency\n\nWrite an SQL query to report the frequency of each customer's orders regardless whether they were successful or not.\n\nNumber of Good Pairs\n\nGiven an array of integers nums.\n\nMinimum Number of People to Teach\n\nOn a social network consisting of m users and some friendships between users, two users can communicate with each other if they know a common language.", "similarity": 0.9627238945914788}
{"input_context": "Example 1: \nLeetCode Problem #1510\nTitle: Stone Game IV\nDescription:\nAlice and Bob take turns playing a game, with Alice starting first. \nExample 2: \nLeetCode Problem #1512\nTitle: Number of Good Pairs\nDescription:\nGiven an array of integers nums, return the number of good pairs. \nExample 3: \nLeetCode Problem #1513\nTitle: Number of Substrings With Only 1s\nDescription:\nGiven a binary string s, return the number of substrings with all characters 1 's. Since the answer may be too large, return it modulo 10e9 + 7. \nExample 4: \nLeetCode Problem #1514\nTitle: Path with Maximum Probability\nDescription:\nYou are given an undirected weighted graph of n nodes (0-indexed), represented by an edge list where edges[i] = [a, b] is an undirected edge connecting the nodes a and b with a probability of success of traversing that edge succProb[i]. \nExample 5: \nLeetCode Problem #1515\nTitle: Best Position for a Service Centre\nDescription:\nA delivery company wants to build a new service center in a new city. The company knows the positions of all the customers in this city on a 2D-Map and wants to build the new center in a position such that the sum of the euclidean distances to all customers is minimum. \nExample 6: \nLeetCode Problem #1518\nTitle: Water Bottles\nDescription:\nThere are numBottles water bottles that are initially full of water. You can exchange numExchange empty water bottles from the market with one full water bottle. \nExample 7: \nLeetCode Problem #1519\nTitle: Number of Nodes in the Sub-Tree With the Same Label\nDescription:\nYou are given a tree (i. e. a connected, undirected graph that has no cycles) consisting of n nodes numbered from 0 to n - 1 and exactly n - 1 edges. The root of the tree is the node 0, and each node of the tree has a label which is a lower-case character given in the string labels (i. e. The node with the number i has the label labels[i] ). \nExample 8: \nLeetCode Problem #1520\nTitle: Maximum Number of Non-Overlapping Substrings\nDescription:\nGiven a string s of lowercase letters, you need to find the maximum number of non-empty substrings of s that meet the following conditions:...\n\nExample 9: \nLeetCode Problem #1521\nTitle: Find a Value of a Mysterious Function Closest to Target\nDescription:\n...\n\nExample 10: \nLeetCode Problem #1523\nTitle: Count Odd Numbers in an Interval Range\nDescription:\nGiven two non-negative integers low and high. Return the count of odd numbers between low and high (inclusive). \nExample 11: \nLeetCode Problem #1524\nTitle: Number of Sub-arrays With Odd Sum\nDescription:\nGiven an array of integers arr, return the number of subarrays with an odd sum. \nExample 12: \nLeetCode Problem #1525\nTitle: Number of Good Ways to Split a String\nDescription:\nYou are given a string s. \nExample 13: \nLeetCode Problem #1526\nTitle: Minimum Number of Increments on Subarrays to Form a Target Array\nDescription:\nYou are given an integer array target. You have an integer array initial of the same size as target with all elements initially zeros. \nExample 14: \nLeetCode Problem #1528\nTitle: Shuffle String\nDescription:\nYou are given a string s and an integer array indices of the same length. The string s will be shuffled such that the character at the i th position moves to indices[i] in the shuffled string. \nExample 15: \nLeetCode Problem #1529\nTitle: Minimum Suffix Flips\nDescription:\nYou are given a 0-indexed binary string target of length n. You have another binary string s of length n that is initially set to all zeros. You want to make s equal to target. \nExample 16: \nLeetCode Problem #1530\nTitle: Number of Good Leaf Nodes Pairs\nDescription:\nYou are given the root of a binary tree and an integer distance. A pair of two different leaf nodes of a binary tree is said to be good if the length of the shortest path between them is less than or equal to distance. \nExample 17: \nLeetCode Problem #1531\nTitle: String Compression II\nDescription:\nRun-length encoding is a string compression method that works by replacing consecutive identical characters (repeated 2 or more times) with the concatenation of the character and the number marking the count of the characters (length of the run). For example, to compress the string \"aabccc\" we replace \"aa\" by \"a2\" and replace \"ccc\" by \"c3\". Thus the compressed string becomes \"a2bc3\". \nExample 18: \nLeetCode Problem #1534\nTitle: Count Good Triplets\nDescription:\nGiven an array of integers arr, and three integers a, b and c. You need to find the number of good triplets. \nExample 19: \nLeetCode Problem #1535\nTitle: Find the Winner of an Array Game\nDescription:\nGiven an integer array arr of distinct integers and an integer k. \nExample 20: \nLeetCode Problem #1536\nTitle: Minimum Swaps to Arrange a Binary Grid\nDescription:\nGiven an n x n binary grid, in one step you can choose two adjacent rows of the grid and swap them. ", "expected_response": "Example 21: \nLeetCode Problem #1537\nTitle: Get the Maximum Score\nDescription:\nYou are given two sorted arrays of distinct integers nums1 and nums2. \nExample 22: \nLeetCode Problem #1539\nTitle: Kth Missing Positive Number\nDescription:\nGiven an array arr of positive integers sorted in a strictly increasing order, and an integer k. \nExample 23: \nLeetCode Problem #1540\nTitle: Can Convert String in K Moves\nDescription:\nGiven two strings s and t, your goal is to convert s into t in k moves or less. \nExample 24: \nLeetCode Problem #1541\nTitle: Minimum Insertions to Balance a Parentheses String\nDescription:\nGiven a parentheses string s containing only the characters '(' and ')'. A parentheses string is balanced if:...\n\nExample 25: \nLeetCode Problem #1542\nTitle: Find Longest Awesome Substring\nDescription:\nYou are given a string s. An awesome substring is a non-empty substring of s such that we can make any number of swaps in order to make it a palindrome. \nExample 26: \nLeetCode Problem #1544\nTitle: Make The String Great\nDescription:\nGiven a string s of lower and upper case English letters. \nExample 27: \nLeetCode Problem #1545\nTitle: Find Kth Bit in Nth Binary String\nDescription:\nGiven two positive integers n and k, the binary string S n is formed as follows:...\n\nExample 28: \nLeetCode Problem #1546\nTitle: Maximum Number of Non-Overlapping Subarrays With Sum Equals Target\nDescription:\nGiven an array nums and an integer target, return the maximum number of non-empty non-overlapping subarrays such that the sum of values in each subarray is equal to target. \nExample 29: \nLeetCode Problem #1547\nTitle: Minimum Cost to Cut a Stick\nDescription:\nGiven a wooden stick of length n units. The stick is labelled from 0 to n. For example, a stick of length 6 is labelled as follows:...\n\nExample 30: \nLeetCode Problem #1550\nTitle: Three Consecutive Odds\nDescription:\nGiven an integer array arr, return true if there are three consecutive odd numbers in the array. Otherwise, return false. \nExample 31: \nLeetCode Problem #1551\nTitle: Minimum Operations to Make Array Equal\nDescription:\nYou have an array arr of length n where arr[i] = (2 * i) + 1 for all valid values of i (i. e. , 0 <= i < n ). \nExample 32: \nLeetCode Problem #1552\nTitle: Magnetic Force Between Two Balls\nDescription:\nIn the universe Earth C-137, Rick discovered a special form of magnetic force between two balls if they are put in his new invented basket. Rick has n empty baskets, the i th basket is at position[i], Morty has m balls and needs to distribute the balls into the baskets such that the minimum magnetic force between any two balls is maximum. \nExample 33: \nLeetCode Problem #1553\nTitle: Minimum Number of Days to Eat N Oranges\nDescription:\nThere are n oranges in the kitchen and you decided to eat some of these oranges every day as follows:...\n\nExample 34: \nLeetCode Problem #1556\nTitle: Thousand Separator\nDescription:\nGiven an integer n, add a dot (\". \") as the thousands separator and return it in string format. \nExample 35: \nLeetCode Problem #1557\nTitle: Minimum Number of Vertices to Reach All Nodes\nDescription:\nGiven a directed acyclic graph, with n vertices numbered from 0 to n-1, and an array edges where edges[i] = [from i, to i ] represents a directed edge from node from i to node to i. \nExample 36: \nLeetCode Problem #1558\nTitle: Minimum Numbers of Function Calls to Make Target Array\nDescription:\nYou are given an integer array nums. You have an integer array arr of the same length with all values set to 0 initially. You also have the following modify function:...\n\nExample 37: \nLeetCode Problem #1559\nTitle: Detect Cycles in 2D Grid\nDescription:\nGiven a 2D array of characters grid of size m x n, you need to find if there exists any cycle consisting of the same value in grid. \nExample 38: \nLeetCode Problem #1560\nTitle: Most Visited Sector in  a Circular Track\nDescription:\nGiven an integer n and an integer array rounds. We have a circular track which consists of n sectors labeled from 1 to n. A marathon will be held on this track, the marathon consists of m rounds. The i th round starts at sector rounds[i - 1] and ends at sector rounds[i]. For example, round 1 starts at sector rounds[0] and ends at sector rounds[1]...\n\nExample 39: \nLeetCode Problem #1561\nTitle: Maximum Number of Coins You Can Get\nDescription:\nThere are 3n piles of coins of varying size, you and your friends will take piles of coins as follows:...\n\nExample 40: \nLeetCode Problem #1562\nTitle: Find Latest Group of Size M\nDescription:\nGiven an array arr that represents a permutation of numbers from 1 to n. ", "iloc": 1181, "frontend_question_id": 1563.0, "n_pass": 1, "response": "Example 21: \nLeetCode Problem #1537\nTitle: Get the Maximum Score\nDescription:\nExample 22: \nLeetCode Problem #1538\nTitle: Guess the Majority in a Hidden Array\nDescription:\nExample 23: \nLeetCode Problem #1539\nTitle: Kth Missing Positive Number\nDescription:\nExample 24: \nLeetCode Problem #1540\nTitle: Circular Permutation in Binary Representation\nDescription:\nExample 25: \nLeetCode Problem #1541\nTitle: Minimum Insertions to Balance a Parentheses String\nDescription:\nExample 26: \nLeetCode Problem #1542\nTitle: Find Longest Awesome Substring\nDescription:\nExample 27: \nLeetCode Problem #1543\nTitle: Splitting a String Into Descending Consecutive Values\nDescription:\nExample 28: \nLeetCode Problem #1544\nTitle: Make The String Great\nDescription:\nExample 29: \nLeetCode Problem #1545\nTitle: Find Kth Bit in Nth Binary String\nDescription:\nExample 30: \nLeetCode Problem #1546\nTitle: Maximum Number of Non-Overlapping Subarrays With Sum Equals Target\nDescription:\nExample 31: \nLeetCode Problem #1547\nTitle: Minimum Cost to Cut a Stick\nDescription:\nExample 32: \nLeetCode Problem #1548\nTitle: The Most Similar Path in a Graph\nDescription:\nExample 33: \nLeetCode Problem #1549\nTitle: The Most Similar Path in a Grid\nDescription:\nExample 34: \nLeetCode Problem #1550\nTitle: Three Consecutive Odds\nDescription:\nExample 35: \nLeetCode Problem #1551\nTitle: Minimum Operations to Make Array Equal\nDescription:\nExample 36: \nLeetCode Problem #1552\nTitle: Magnetic Force Between Two Balls\nDescription:\nExample 37: \nLeetCode Problem #1553\nTitle: Minimum Number of Days to Eat N Oranges\nDescription:\nExample 38: \nLeetCode Problem #1554\nTitle: Strings Differ by One Character\nDescription:\nExample 39: \nLeetCode Problem #1555\nTitle: Bank Account Summary\nDescription:\nExample 40: \nLeetCode Problem #1556\nTitle: Thousand Separator\nDescription:\nExample 41: \nLeetCode Problem #1557\nTitle: Minimum Number of Vertices to Reach All Nodes\nDescription:\nExample 42: \nLeetCode Problem #1558\nTitle: Minimum Numbers of Function Calls to Make Target Array\nDescription:\nExample 43: \nLeetCode Problem #1559\nTitle: Detective Boats\nDescription:\nExample 44: \nLeetCode Problem #1560\nTitle: Most Visited Sector in a Circular Track\nDescription:\nExample 45: \nLeetCode Problem #1561\nTitle: Maximum Number of Coins You Can Get\nDescription:\nExample 46: \nLeetCode Problem #1562\nTitle: Find Latest Group of Size M\nDescription:\nExample 47: \nLeetCode Problem #1563\nTitle: Stone Game V\nDescription:\nExample 48: \nLeetCode Problem #1564\nTitle: Put Boxes Into the Warehouse I\nDescription:\nExample 49: \nLeetCode Problem #1565\nTitle: Unique Orders and Customers Per Month\nDescription:\nExample 50: \nLeetCode Problem #1566\nTitle: Detect Pattern of Length M Repeated K or More Times\nDescription:", "cleaned_response": " \nGet the Maximum Score\n\n \nGuess the Majority in a Hidden Array\n\n \nKth Missing Positive Number\n\n \nCircular Permutation in Binary Representation\n\n \nMinimum Insertions to Balance a Parentheses String\n\n \nFind Longest Awesome Substring\n\n \nSplitting a String Into Descending Consecutive Values\n\n \nMake The String Great\n\n \nFind Kth Bit in Nth Binary String\n\n \nMaximum Number of Non-Overlapping Subarrays With Sum Equals Target\n\n \nMinimum Cost to Cut a Stick\n\n \nThe Most Similar Path in a Graph\n\n \nThe Most Similar Path in a Grid\n\n \nThree Consecutive Odds\n\n \nMinimum Operations to Make Array Equal\n\n \nMagnetic Force Between Two Balls\n\n \nMinimum Number of Days to Eat N Oranges\n\n \nStrings Differ by One Character\n\n \nBank Account Summary\n\n \nThousand Separator\n\n \nMinimum Number of Vertices to Reach All Nodes\n\n \nMinimum Numbers of Function Calls to Make Target Array\n\n \nDetective Boats\n\n \nMost Visited Sector in a Circular Track\n\n \nMaximum Number of Coins You Can Get\n\n \nFind Latest Group of Size M\n\n \nStone Game V\n\n \nPut Boxes Into the Warehouse I\n\n \nUnique Orders and Customers Per Month\n\n \nDetect Pattern of Length M Repeated K or More Times\n", "similarity": 0.8956741165966473}
{"input_context": "Example 1: \nLeetCode Problem #1617\nTitle: Count Subtrees With Max Distance Between Cities\nDescription:\nThere are n cities numbered from 1 to n. You are given an array edges of size n-1, where edges[i] = [u i, v i ] represents a bidirectional edge between cities u i and v i. There exists a unique path between each pair of cities. In other words, the cities form a tree. \nExample 2: \nLeetCode Problem #1619\nTitle: Mean of Array After Removing Some Elements\nDescription:\nGiven an integer array arr, return the mean of the remaining integers after removing the smallest 5% and the largest 5% of the elements. \nExample 3: \nLeetCode Problem #1620\nTitle: Coordinate With Maximum Network Quality\nDescription:\nYou are given an array of network towers towers, where towers[i] = [x i, y i, q i ] denotes the i th network tower with location (x i, y i ) and quality factor q i. All the coordinates are integral coordinates on the X-Y plane, and the distance between the two coordinates is the Euclidean distance. \nExample 4: \nLeetCode Problem #1621\nTitle: Number of Sets of K Non-Overlapping Line Segments\nDescription:\nGiven n points on a 1-D plane, where the i th point (from 0 to n-1 ) is at x = i, find the number of ways we can draw exactly k non-overlapping line segments such that each segment covers two or more points. The endpoints of each segment must have integral coordinates. The k line segments do not have to cover all n points, and they are allowed to share endpoints. \nExample 5: \nLeetCode Problem #1622\nTitle: Fancy Sequence\nDescription:\nWrite an API that generates fancy sequences using the append, addAll, and multAll operations. \nExample 6: \nLeetCode Problem #1624\nTitle: Largest Substring Between Two Equal Characters\nDescription:\nGiven a string s, return the length of the longest substring between two equal characters, excluding the two characters. If there is no such substring return -1. \nExample 7: \nLeetCode Problem #1625\nTitle: Lexicographically Smallest String After Applying Operations\nDescription:\nYou are given a string s of even length consisting of digits from 0 to 9, and two integers a and b. \nExample 8: \nLeetCode Problem #1626\nTitle: Best Team With No Conflicts\nDescription:\nYou are the manager of a basketball team. For the upcoming tournament, you want to choose the team with the highest overall score. The score of the team is the sum of scores of all the players in the team. \nExample 9: \nLeetCode Problem #1627\nTitle: Graph Connectivity With Threshold\nDescription:\nWe have n cities labeled from 1 to n. Two different cities with labels x and y are directly connected by a bidirectional road if and only if x and y share a common divisor strictly greater than some threshold. More formally, cities with labels x and y have a road between them if there exists an integer z such that all of the following are true:...\n\nExample 10: \nLeetCode Problem #1629\nTitle: Slowest Key\nDescription:\nA newly designed keypad was tested, where a tester pressed a sequence of n keys, one at a time. \nExample 11: \nLeetCode Problem #1630\nTitle: Arithmetic Subarrays\nDescription:\nA sequence of numbers is called arithmetic if it consists of at least two elements, and the difference between every two consecutive elements is the same. More formally, a sequence s is arithmetic if and only if s[i+1] - s[i] == s[1] - s[0] for all valid i. \nExample 12: \nLeetCode Problem #1631\nTitle: Path With Minimum Effort\nDescription:\nYou are a hiker preparing for an upcoming hike. You are given heights, a 2D array of size rows x columns, where heights[row][col] represents the height of cell (row, col). You are situated in the top-left cell, (0, 0), and you hope to travel to the bottom-right cell, (rows-1, columns-1) (i. e. , 0-indexed ). You can move up, down, left, or right, and you wish to find a route that requires the minimum effort. \nExample 13: \nLeetCode Problem #1632\nTitle: Rank Transform of a Matrix\nDescription:\nGiven an m x n matrix, return a new matrix answer where answer[row][col] is the rank of matrix[row][col]. \nExample 14: \nLeetCode Problem #1636\nTitle: Sort Array by Increasing Frequency\nDescription:\nGiven an array of integers nums, sort the array in increasing order based on the frequency of the values. If multiple values have the same frequency, sort them in decreasing order. \nExample 15: \nLeetCode Problem #1637\nTitle: Widest Vertical Area Between Two Points Containing No Points\nDescription:\nGiven n points on a 2D plane where points[i] = [x i, y i ], Return the widest vertical area between two points such that no points are inside the area. \nExample 16: \nLeetCode Problem #1638\nTitle: Count Substrings That Differ by One Character\nDescription:\nGiven two strings s and t, find the number of ways you can choose a non-empty substring of s and replace a single character by a different character such that the resulting substring is a substring of t. In other words, find the number of substrings in s that differ from some substring in t by exactly one character. \nExample 17: \nLeetCode Problem #1639\nTitle: Number of Ways to Form a Target String Given a Dictionary\nDescription:\nYou are given a list of strings of the same length words and a string target. \nExample 18: \nLeetCode Problem #1640\nTitle: Check Array Formation Through Concatenation\nDescription:\nYou are given an array of distinct integers arr and an array of integer arrays pieces, where the integers in pieces are distinct. Your goal is to form arr by concatenating the arrays in pieces in any order. However, you are not allowed to reorder the integers in each array pieces[i]. \nExample 19: \nLeetCode Problem #1641\nTitle: Count Sorted Vowel Strings\nDescription:\nGiven an integer n, return the number of strings of length n that consist only of vowels ( a, e, i, o, u ) and are lexicographically sorted. \nExample 20: \nLeetCode Problem #1642\nTitle: Furthest Building You Can Reach\nDescription:\nYou are given an integer array heights representing the heights of buildings, some bricks, and some ladders. ", "expected_response": "Example 21: \nLeetCode Problem #1643\nTitle: Kth Smallest Instructions\nDescription:\nBob is standing at cell (0, 0), and he wants to reach destination : (row, column). He can only travel right and down. You are going to help Bob by providing instructions for him to reach destination. \nExample 22: \nLeetCode Problem #1646\nTitle: Get Maximum in Generated Array\nDescription:\nYou are given an integer n. A 0-indexed integer array nums of length n + 1 is generated in the following way:...\n\nExample 23: \nLeetCode Problem #1647\nTitle: Minimum Deletions to Make Character Frequencies Unique\nDescription:\nA string s is called good if there are no two different characters in s that have the same frequency. \nExample 24: \nLeetCode Problem #1648\nTitle: Sell Diminishing-Valued Colored Balls\nDescription:\nYou have an inventory of different colored balls, and there is a customer that wants orders balls of any color. \nExample 25: \nLeetCode Problem #1649\nTitle: Create Sorted Array through Instructions\nDescription:\nGiven an integer array instructions, you are asked to create a sorted array from the elements in instructions. You start with an empty container nums. For each element from left to right in instructions, insert it into nums. The cost of each insertion is the minimum of the following:...\n\nExample 26: \nLeetCode Problem #1652\nTitle: Defuse the Bomb\nDescription:\nYou have a bomb to defuse, and your time is running out! Your informer will provide you with a circular array code of length of n and a key k. \nExample 27: \nLeetCode Problem #1653\nTitle: Minimum Deletions to Make String Balanced\nDescription:\nYou are given a string s consisting only of characters 'a' and 'b' \u200b\u200b\u200b\u200b. \nExample 28: \nLeetCode Problem #1654\nTitle: Minimum Jumps to Reach Home\nDescription:\nA certain bug's home is on the x-axis at position x. Help them get there from position 0. \nExample 29: \nLeetCode Problem #1655\nTitle: Distribute Repeating Integers\nDescription:\nYou are given an array of n integers, nums, where there are at most 50 unique values in the array. You are also given an array of m customer order quantities, quantity, where quantity[i] is the amount of integers the i th customer ordered. Determine if it is possible to distribute nums such that:...\n\nExample 30: \nLeetCode Problem #1656\nTitle: Design an Ordered Stream\nDescription:\nThere is a stream of n (idKey, value) pairs arriving in an arbitrary order, where idKey is an integer between 1 and n and value is a string. No two pairs have the same id. \nExample 31: \nLeetCode Problem #1657\nTitle: Determine if Two Strings Are Close\nDescription:\nTwo strings are considered close if you can attain one from the other using the following operations:...\n\nExample 32: \nLeetCode Problem #1658\nTitle: Minimum Operations to Reduce X to Zero\nDescription:\nYou are given an integer array nums and an integer x. In one operation, you can either remove the leftmost or the rightmost element from the array nums and subtract its value from x. Note that this modifies the array for future operations. \nExample 33: \nLeetCode Problem #1659\nTitle: Maximize Grid Happiness\nDescription:\nYou are given four integers, m, n, introvertsCount, and extrovertsCount. You have an m x n grid, and there are two types of people: introverts and extroverts. There are introvertsCount introverts and extrovertsCount extroverts. \nExample 34: \nLeetCode Problem #1662\nTitle: Check If Two String Arrays are Equivalent\nDescription:\nGiven two string arrays word1 and word2, return true if the two arrays represent the same string, and false otherwise. \nExample 35: \nLeetCode Problem #1663\nTitle: Smallest String With A Given Numeric Value\nDescription:\nThe numeric value of a lowercase character is defined as its position (1-indexed) in the alphabet, so the numeric value of a is 1, the numeric value of b is 2, the numeric value of c is 3, and so on. \nExample 36: \nLeetCode Problem #1664\nTitle: Ways to Make a Fair Array\nDescription:\nYou are given an integer array nums. You can choose exactly one index ( 0-indexed ) and remove the element. Notice that the index of the elements may change after the removal. \nExample 37: \nLeetCode Problem #1665\nTitle: Minimum Initial Energy to Finish Tasks\nDescription:\nYou are given an array tasks where tasks[i] = [actual i, minimum i ] :...\n\nExample 38: \nLeetCode Problem #1668\nTitle: Maximum Repeating Substring\nDescription:\nFor a string sequence, a string word is k -repeating if word concatenated k times is a substring of sequence. The word 's maximum k -repeating value is the highest value k where word is k -repeating in sequence. If word is not a substring of sequence, word 's maximum k -repeating value is 0. \nExample 39: \nLeetCode Problem #1669\nTitle: Merge In Between Linked Lists\nDescription:\nYou are given two linked lists: list1 and list2 of sizes n and m respectively. \nExample 40: \nLeetCode Problem #1670\nTitle: Design Front Middle Back Queue\nDescription:\nDesign a queue that supports push and pop operations in the front, middle, and back. ", "iloc": 1261, "frontend_question_id": 1671.0, "n_pass": 1, "response": "Example 21: \nLeetCode Problem #1643\nTitle: Kth Smallest Instructions\nDescription:\nYou are given two integers n and k representing the dimensions of a grid and an integer k. The grid has the size n x n, and each cell of the grid represents a different instruction. The top-left cell is (0, 0), and the bottom-right cell is (n-1, n-1). You want to find the kth smallest instruction that will lead you from the top-left cell to the bottom-right cell.\n\nExample 22: \nLeetCode Problem #1644\nTitle: Lowest Common Ancestor of a Binary Tree II\nDescription:\nGiven the root of a binary tree, return the lowest common ancestor (LCA) of two given nodes, p and q, in the tree. If either node p or q does not exist in the tree, return null. All values of the nodes in the tree are unique.\n\nExample 23: \nLeetCode Problem #1645\nTitle: Hopper Company Queries I\nDescription:\nThere are n hops that you can take. Each hop i is represented by an integer hopPower[i], which indicates the minimum power you need to take this hop. You start at position 0 and can only move forward. Each time you move, you consume one energy. If you don't have enough energy to take the next hop, you can't move. \n\nExample 24: \nLeetCode Problem #1646\nTitle: Get Maximum in Generated Array\nDescription:\nYou are given an integer n. An array nums of length n + 1 is generated in the following way:\n\nExample 25: \nLeetCode Problem #1647\nTitle: Lowest Common Ancestor of a Binary Tree IV\nDescription:\nGiven the root of a binary tree and an array of TreeNode objects nodes, return the lowest common ancestor (LCA) of all the nodes in nodes. All the nodes will exist in the tree, and all values of the tree's nodes are unique.\n\nExample 26: \nLeetCode Problem #1648\nTitle: Sell Diminishing-Valued Colored Balls\nDescription:\nYou have an inventory of different colored balls, and there is a customer that wants orders balls of any color. The customer weirdly values the colored balls. Each colored ball's value is the number of balls of that color you currently have in your inventory. For example, if you own 6 yellow balls, the customer would pay 6 for the first yellow ball. After the transaction, there are only 5 yellow balls left, so the next yellow ball is then valued at 5 (i.e., the value of the balls decreases as you sell more to the customer).\n\nExample 27: \nLeetCode Problem #1649\nTitle: Create Sorted Array through Instructions\nDescription:\nGiven an integer array instructions, you are asked to create a sorted array from the elements in instructions. You start with an empty container nums. For each element from left to right in instructions, insert it into nums. The cost of each insertion is the minimum of the following:\n\nExample 28: \nLeetCode Problem #1650\nTitle: Lowest Common Ancestor of a Binary Tree III\nDescription:\nGiven the root of a binary tree and two nodes p and q, return the lowest common ancestor (LCA) of p and q in the tree. If either node p or q does not exist in the tree, return null. All values of the nodes in the tree are unique.\n\nExample 29: \nLeetCode Problem #1651\nTitle: Hopper Company Queries II\nDescription:\nThere are n hops that you can take. Each hop i is represented by an integer hopPower[i], which indicates the power required to take this hop. You start at position 0 and can only move forward. Each time you move, you consume one energy. If you don't have enough energy to take the next hop, you can't move. \n\nExample 30: \nLeetCode Problem #1652\nTitle: Defuse the Bomb\nDescription:\nYou have a bomb to defuse, and your time is running out! Your task is to find the minimum number of moves to reach the target in the given time.\n\nExample 31: \nLeetCode Problem #1653\nTitle: Minimum Deletions to Make String Balanced\nDescription:\nYou are given a string s consisting only of characters 'a' and 'b'.\n\nExample 32: \nLeetCode Problem #1654\nTitle: Minimum Jumps to Reach Home\nDescription:\nA certain bug's home is on the x-axis at position x. Help them get there from position 0.\n\nExample 33: \nLeetCode Problem #1655\nTitle: Distribute Repeating Integers\nDescription:\nYou are given an array of n integers, nums, where there are at most 50 unique values in the array. You are also given an array of m customer orders, customers, where customers[i] = [a i, b i ], the customer ordered b i units of the product with id a i. \n\nExample 34: \nLeetCode Problem #1656\nTitle: Design an Ordered Stream\nDescription:\nThere is a stream of n (id, value) pairs arriving in an arbitrary order, where id is an integer between 1 and n and value is a string. No two pairs have the same id.\n\nExample 35: \nLeetCode Problem #1657\nTitle: Determine if Two Strings Are Close\nDescription:\nTwo strings are considered close if you can attain one from the other using the following operations:\n\nExample 36: \nLeetCode Problem #1658\nTitle: Minimum Operations to Reduce X to Zero\nDescription:\nYou are given an integer array nums and an integer x. In one operation, you can either remove the leftmost or the rightmost element from the array nums and subtract its value from x. Note that this modifies the array for future operations.\n\nExample 37: \nLeetCode Problem #1659\nTitle: Maximize Grid Happiness\nDescription:\nYou are given four integers m, n, introvertsCount, and extrovertsCount. You have an m x n grid, and there are two types of people: introverts and extroverts. There are introvertsCount introverts and extrovertsCount extroverts.\n\nExample 38: \nLeetCode Problem #1660\nTitle: Correct a Binary Tree\nDescription:\nYou have a binary tree with a small defect. There are exactly two nodes that have been swapped. \n\nExample 39: \nLeetCode Problem #1661\nTitle: Minimum Number of Increments on Subarrays to Form a Target Array\nDescription:\nGiven an array of positive integers target and an array initial of same size with all zeros.\n\nExample 40: \nLeetCode Problem #1662\nTitle: Check If Two String Arrays are Equivalent\nDescription:\nGiven two string arrays word1 and word2, return true if the two arrays represent the same string, and false otherwise.\n\nExample 41: \nLeetCode Problem #1663\nTitle: Smallest String With A Given Numeric Value\nDescription:\nThe numeric value of a lowercase character is defined as its position (1-indexed) in the alphabet, so the numeric value of a is 1, the numeric value of b is 2, the numeric value of c is 3, and so on. The numeric value of a string consisting of lowercase characters is defined as the sum of its characters' numeric values. \n\nExample 42: \nLeetCode Problem #1664\nTitle: Ways to Make a Fair Array\nDescription:\nYou are given an integer array nums. You can choose exactly one index (0-indexed) and remove the element. Notice that the index of the elements may change after the removal.\n\nExample 43: \nLeetCode Problem #1665\nTitle: Minimum Initial Energy to Finish Tasks\nDescription:\nYou are given an array tasks where tasks[i] = [actual i, minimum i ]. \n\nExample 44: \nLeetCode Problem #1666\nTitle: Change the Root of a Binary Tree\nDescription:\nGiven the root of a binary tree, the depth of the deepest node in the tree, and an integer key, implement a function to change the root of the tree to the node with the key if the node with the key exists in the tree.\n\nExample 45: \nLeetCode Problem #1667\nTitle: Ways to Make a Fair Array II\nDescription:\nYou are given an integer array nums. You can perform two types of operations any number of times:\n\nExample 46: \nLeetCode Problem #1668\nTitle: Maximum Repeating Substring\nDescription:\nFor a string sequence, a string word is k-repeating if word concatenated k times is a substring of sequence. The kth repeating of word is the maximal value of k that makes word k-repeating. If word is not a substring of sequence, word is 0-repeating. \n\nExample 47: \nLeetCode Problem #1669\nTitle: Merge In Between Linked Lists\nDescription:\nYou are given two linked lists: list1 and list2 of sizes n and m respectively.\n\nExample 48: \nLeetCode Problem #1670\nTitle: Design Front Middle Back Queue\nDescription:\nDesign a queue that supports push and pop operations in the front, middle, and back.\n\nExample 49: \nLeetCode Problem #1671\nTitle: Minimum Number of Removals to Make Mountain Array\nDescription:\nYou may recall that an array arr is a mountain array if and only if:\n\nExample 50: \nLeetCode Problem #1672\nTitle: Richest Customer Wealth\nDescription:\nYou are given an m x n integer grid accounts where accounts[i][j] is the amount of money the ith customer has in the jth bank.", "cleaned_response": " \nKth Smallest Instructions\n\nYou are given two integers n and k representing the dimensions of a grid and an integer k. The grid has the size n x n, and each cell of the grid represents a different instruction. The top-left cell is (0, 0), and the bottom-right cell is (n-1, n-1). You want to find the kth smallest instruction that will lead you from the top-left cell to the bottom-right cell.\n\n \nLowest Common Ancestor of a Binary Tree II\n\nGiven the root of a binary tree, return the lowest common ancestor (LCA) of two given nodes, p and q, in the tree. If either node p or q does not exist in the tree, return null. All values of the nodes in the tree are unique.\n\n \nHopper Company Queries I\n\nThere are n hops that you can take. Each hop i is represented by an integer hopPower[i], which indicates the minimum power you need to take this hop. You start at position 0 and can only move forward. Each time you move, you consume one energy. If you don't have enough energy to take the next hop, you can't move. \n\n \nGet Maximum in Generated Array\n\nYou are given an integer n. An array nums of length n + 1 is generated in the following way:\n\n \nLowest Common Ancestor of a Binary Tree IV\n\nGiven the root of a binary tree and an array of TreeNode objects nodes, return the lowest common ancestor (LCA) of all the nodes in nodes. All the nodes will exist in the tree, and all values of the tree's nodes are unique.\n\n \nSell Diminishing-Valued Colored Balls\n\nYou have an inventory of different colored balls, and there is a customer that wants orders balls of any color. The customer weirdly values the colored balls. Each colored ball's value is the number of balls of that color you currently have in your inventory. For example, if you own 6 yellow balls, the customer would pay 6 for the first yellow ball. After the transaction, there are only 5 yellow balls left, so the next yellow ball is then valued at 5 (i.e., the value of the balls decreases as you sell more to the customer).\n\n \nCreate Sorted Array through Instructions\n\nGiven an integer array instructions, you are asked to create a sorted array from the elements in instructions. You start with an empty container nums. For each element from left to right in instructions, insert it into nums. The cost of each insertion is the minimum of the following:\n\n \nLowest Common Ancestor of a Binary Tree III\n\nGiven the root of a binary tree and two nodes p and q, return the lowest common ancestor (LCA) of p and q in the tree. If either node p or q does not exist in the tree, return null. All values of the nodes in the tree are unique.\n\n \nHopper Company Queries II\n\nThere are n hops that you can take. Each hop i is represented by an integer hopPower[i], which indicates the power required to take this hop. You start at position 0 and can only move forward. Each time you move, you consume one energy. If you don't have enough energy to take the next hop, you can't move. \n\n \nDefuse the Bomb\n\nYou have a bomb to defuse, and your time is running out! Your task is to find the minimum number of moves to reach the target in the given time.\n\n \nMinimum Deletions to Make String Balanced\n\nYou are given a string s consisting only of characters 'a' and 'b'.\n\n \nMinimum Jumps to Reach Home\n\nA certain bug's home is on the x-axis at position x. Help them get there from position 0.\n\n \nDistribute Repeating Integers\n\nYou are given an array of n integers, nums, where there are at most 50 unique values in the array. You are also given an array of m customer orders, customers, where customers[i] = [a i, b i ], the customer ordered b i units of the product with id a i. \n\n \nDesign an Ordered Stream\n\nThere is a stream of n (id, value) pairs arriving in an arbitrary order, where id is an integer between 1 and n and value is a string. No two pairs have the same id.\n\n \nDetermine if Two Strings Are Close\n\nTwo strings are considered close if you can attain one from the other using the following operations:\n\n \nMinimum Operations to Reduce X to Zero\n\nYou are given an integer array nums and an integer x. In one operation, you can either remove the leftmost or the rightmost element from the array nums and subtract its value from x. Note that this modifies the array for future operations.\n\n \nMaximize Grid Happiness\n\nYou are given four integers m, n, introvertsCount, and extrovertsCount. You have an m x n grid, and there are two types of people: introverts and extroverts. There are introvertsCount introverts and extrovertsCount extroverts.\n\n \nCorrect a Binary Tree\n\nYou have a binary tree with a small defect. There are exactly two nodes that have been swapped. \n\n \nMinimum Number of Increments on Subarrays to Form a Target Array\n\nGiven an array of positive integers target and an array initial of same size with all zeros.\n\n \nCheck If Two String Arrays are Equivalent\n\nGiven two string arrays word1 and word2, return true if the two arrays represent the same string, and false otherwise.\n\n \nSmallest String With A Given Numeric Value\n\nThe numeric value of a lowercase character is defined as its position (1-indexed) in the alphabet, so the numeric value of a is 1, the numeric value of b is 2, the numeric value of c is 3, and so on. The numeric value of a string consisting of lowercase characters is defined as the sum of its characters' numeric values. \n\n \nWays to Make a Fair Array\n\nYou are given an integer array nums. You can choose exactly one index (0-indexed) and remove the element. Notice that the index of the elements may change after the removal.\n\n \nMinimum Initial Energy to Finish Tasks\n\nYou are given an array tasks where tasks[i] = [actual i, minimum i ]. \n\n \nChange the Root of a Binary Tree\n\nGiven the root of a binary tree, the depth of the deepest node in the tree, and an integer key, implement a function to change the root of the tree to the node with the key if the node with the key exists in the tree.\n\n \nWays to Make a Fair Array II\n\nYou are given an integer array nums. You can perform two types of operations any number of times:\n\n \nMaximum Repeating Substring\n\nFor a string sequence, a string word is k-repeating if word concatenated k times is a substring of sequence. The kth repeating of word is the maximal value of k that makes word k-repeating. If word is not a substring of sequence, word is 0-repeating. \n\n \nMerge In Between Linked Lists\n\nYou are given two linked lists: list1 and list2 of sizes n and m respectively.\n\n \nDesign Front Middle Back Queue\n\nDesign a queue that supports push and pop operations in the front, middle, and back.\n\n \nMinimum Number of Removals to Make Mountain Array\n\nYou may recall that an array arr is a mountain array if and only if:\n\n \nRichest Customer Wealth\n\nYou are given an m x n integer grid accounts where accounts[i][j] is the amount of money the ith customer has in the jth bank.", "similarity": 0.9354544062593276}
{"input_context": "Example 1: \nLeetCode Problem #1671\nTitle: Minimum Number of Removals to Make Mountain Array\nDescription:\nYou may recall that an array arr is a mountain array if and only if:...\n\nExample 2: \nLeetCode Problem #1672\nTitle: Richest Customer Wealth\nDescription:\nYou are given an m x n integer grid accounts where accounts[i][j] is the amount of money the i\u200b\u200b\u200b\u200b\u200b \u200b\u200b\u200b\u200b\u200b\u200bth \u200b\u200b\u200b\u200b customer has in the j\u200b\u200b\u200b\u200b\u200b \u200b\u200b\u200b\u200b\u200b\u200bth \u200b\u200b\u200b\u200b bank. Return the wealth that the richest customer has. \nExample 3: \nLeetCode Problem #1673\nTitle: Find the Most Competitive Subsequence\nDescription:\nGiven an integer array nums and a positive integer k, return the most competitive subsequence of nums of size k. \nExample 4: \nLeetCode Problem #1674\nTitle: Minimum Moves to Make Array Complementary\nDescription:\nYou are given an integer array nums of even length n and an integer limit. In one move, you can replace any integer from nums with another integer between 1 and limit, inclusive. \nExample 5: \nLeetCode Problem #1675\nTitle: Minimize Deviation in Array\nDescription:\nYou are given an array nums of n positive integers. \nExample 6: \nLeetCode Problem #1678\nTitle: Goal Parser Interpretation\nDescription:\nYou own a Goal Parser that can interpret a string command. The command consists of an alphabet of \"G\", \"()\" and/or \"(al)\" in some order. The Goal Parser will interpret \"G\" as the string \"G\", \"()\" as the string \"o\", and \"(al)\" as the string \"al\". The interpreted strings are then concatenated in the original order. \nExample 7: \nLeetCode Problem #1679\nTitle: Max Number of K-Sum Pairs\nDescription:\nYou are given an integer array nums and an integer k. \nExample 8: \nLeetCode Problem #1680\nTitle: Concatenation of Consecutive Binary Numbers\nDescription:\nGiven an integer n, return the decimal value of the binary string formed by concatenating the binary representations of 1 to n in order, modulo 10e9 + 7. \nExample 9: \nLeetCode Problem #1681\nTitle: Minimum Incompatibility\nDescription:\nYou are given an integer array nums \u200b\u200b\u200b and an integer k. You are asked to distribute this array into k subsets of equal size such that there are no two equal elements in the same subset. \nExample 10: \nLeetCode Problem #1684\nTitle: Count the Number of Consistent Strings\nDescription:\nYou are given a string allowed consisting of distinct characters and an array of strings words. A string is consistent if all characters in the string appear in the string allowed. \nExample 11: \nLeetCode Problem #1685\nTitle: Sum of Absolute Differences in a Sorted Array\nDescription:\nYou are given an integer array nums sorted in non-decreasing order. \nExample 12: \nLeetCode Problem #1686\nTitle: Stone Game VI\nDescription:\nAlice and Bob take turns playing a game, with Alice starting first. \nExample 13: \nLeetCode Problem #1687\nTitle: Delivering Boxes from Storage to Ports\nDescription:\nYou have the task of delivering some boxes from storage to their ports using only one ship. However, this ship has a limit on the number of boxes and the total weight that it can carry. \nExample 14: \nLeetCode Problem #1688\nTitle: Count of Matches in Tournament\nDescription:\nYou are given an integer n, the number of teams in a tournament that has strange rules:...\n\nExample 15: \nLeetCode Problem #1689\nTitle: Partitioning Into Minimum Number Of Deci-Binary Numbers\nDescription:\nA decimal number is called deci-binary if each of its digits is either 0 or 1 without any leading zeros. For example, 101 and 1100 are deci-binary, while 112 and 3001 are not. \nExample 16: \nLeetCode Problem #1690\nTitle: Stone Game VII\nDescription:\nAlice and Bob take turns playing a game, with Alice starting first. \nExample 17: \nLeetCode Problem #1691\nTitle: Maximum Height by Stacking Cuboids \nDescription:\nGiven n cuboids where the dimensions of the i th cuboid is cuboids[i] = [width i, length i, height i ] ( 0-indexed ). Choose a subset of cuboids and place them on each other. \nExample 18: \nLeetCode Problem #1694\nTitle: Reformat Phone Number\nDescription:\nYou are given a phone number as a string number. number consists of digits, spaces ' ', and/or dashes '-'. \nExample 19: \nLeetCode Problem #1695\nTitle: Maximum Erasure Value\nDescription:\nYou are given an array of positive integers nums and want to erase a subarray containing unique elements. The score you get by erasing the subarray is equal to the sum of its elements. \nExample 20: \nLeetCode Problem #1696\nTitle: Jump Game VI\nDescription:\nYou are given a 0-indexed integer array nums and an integer k. ", "expected_response": "Example 21: \nLeetCode Problem #1697\nTitle: Checking Existence of Edge Length Limited Paths\nDescription:\nAn undirected graph of n nodes is defined by edgeList, where edgeList[i] = [u i, v i, dis i ] denotes an edge between nodes u i and v i with distance dis i. Note that there may be multiple edges between two nodes. \nExample 22: \nLeetCode Problem #1700\nTitle: Number of Students Unable to Eat Lunch\nDescription:\nThe school cafeteria offers circular and square sandwiches at lunch break, referred to by numbers 0 and 1 respectively. All students stand in a queue. Each student either prefers square or circular sandwiches. \nExample 23: \nLeetCode Problem #1701\nTitle: Average Waiting Time\nDescription:\nThere is a restaurant with a single chef. You are given an array customers, where customers[i] = [arrival i, time i ]:...\n\nExample 24: \nLeetCode Problem #1702\nTitle: Maximum Binary String After Change\nDescription:\nYou are given a binary string binary consisting of only 0 's or 1 's. You can apply each of the following operations any number of times:...\n\nExample 25: \nLeetCode Problem #1703\nTitle: Minimum Adjacent Swaps for K Consecutive Ones\nDescription:\nYou are given an integer array, nums, and an integer k. nums comprises of only 0 's and 1 's. In one move, you can choose two adjacent indices and swap their values. \nExample 26: \nLeetCode Problem #1704\nTitle: Determine if String Halves Are Alike\nDescription:\nYou are given a string s of even length. Split this string into two halves of equal lengths, and let a be the first half and b be the second half. \nExample 27: \nLeetCode Problem #1705\nTitle: Maximum Number of Eaten Apples\nDescription:\nThere is a special kind of apple tree that grows apples every day for n days. On the i th day, the tree grows apples[i] apples that will rot after days[i] days, that is on day i + days[i] the apples will be rotten and cannot be eaten. On some days, the apple tree does not grow any apples, which are denoted by apples[i] == 0 and days[i] == 0. \nExample 28: \nLeetCode Problem #1706\nTitle: Where Will the Ball Fall\nDescription:\nYou have a 2-D grid of size m x n representing a box, and you have n balls. The box is open on the top and bottom sides. \nExample 29: \nLeetCode Problem #1707\nTitle: Maximum XOR With an Element From Array\nDescription:\nYou are given an array nums consisting of non-negative integers. You are also given a queries array, where queries[i] = [x i, m i ]. \nExample 30: \nLeetCode Problem #1710\nTitle: Maximum Units on a Truck\nDescription:\nYou are assigned to put some amount of boxes onto one truck. You are given a 2D array boxTypes, where boxTypes[i] = [numberOfBoxes i, numberOfUnitsPerBox i ] :...\n\nExample 31: \nLeetCode Problem #1711\nTitle: Count Good Meals\nDescription:\nA good meal is a meal that contains exactly two different food items with a sum of deliciousness equal to a power of two. \nExample 32: \nLeetCode Problem #1712\nTitle: Ways to Split Array Into Three Subarrays\nDescription:\nA split of an integer array is good if:...\n\nExample 33: \nLeetCode Problem #1713\nTitle: Minimum Operations to Make a Subsequence\nDescription:\nYou are given an array target that consists of distinct integers and another integer array arr that can have duplicates. \nExample 34: \nLeetCode Problem #1716\nTitle: Calculate Money in Leetcode Bank\nDescription:\nHercy wants to save money for his first car. He puts money in the Leetcode bank every day. \nExample 35: \nLeetCode Problem #1717\nTitle: Maximum Score From Removing Substrings\nDescription:\nYou are given a string s and two integers x and y. You can perform two types of operations any number of times. \nExample 36: \nLeetCode Problem #1718\nTitle: Construct the Lexicographically Largest Valid Sequence\nDescription:\nGiven an integer n, find a sequence that satisfies all of the following:...\n\nExample 37: \nLeetCode Problem #1719\nTitle: Number Of Ways To Reconstruct A Tree\nDescription:\nYou are given an array pairs, where pairs[i] = [x i, y i ], and:...\n\nExample 38: \nLeetCode Problem #1720\nTitle: Decode XORed Array\nDescription:\nThere is a hidden integer array arr that consists of n non-negative integers. \nExample 39: \nLeetCode Problem #1721\nTitle: Swapping Nodes in a Linked List\nDescription:\nYou are given the head of a linked list, and an integer k. \nExample 40: \nLeetCode Problem #1722\nTitle: Minimize Hamming Distance After Swap Operations\nDescription:\nYou are given two integer arrays, source and target, both of length n. You are also given an array allowedSwaps where each allowedSwaps[i] = [a i, b i ] indicates that you are allowed to swap the elements at index a i and index b i (0-indexed) of array source. Note that you can swap elements at a specific pair of indices multiple times and in any order. ", "iloc": 1301, "frontend_question_id": 1723.0, "n_pass": 1, "response": "Example 21: \nLeetCode Problem #1700\nTitle: Number of Students Unable to Eat Lunch\nDescription:\nThe school cafeteria offers circular and square sandwiches at lunch break, referred to by numbers 0 and 1 respectively. When students are hungry, they will always prefer to eat a sandwich of their own type. \n\nExample 22: \nLeetCode Problem #1701\nTitle: Average Waiting Time\nDescription:\nThere is a restaurant with a single chef. You are given an array customers, where customers[i] = [arrivali, timei]: - arrivali is the arrival time of the ith customer. - timei is the time needed to prepare the order of the ith customer.\n\nExample 23: \nLeetCode Problem #1702\nTitle: Maximum Binary String After Change\nDescription:\nYou are given a binary string binary consisting of only 0's or 1's. You can apply each of the following operations any number of times:...\n\nExample 24: \nLeetCode Problem #1703\nTitle: Minimum Adjacent Swaps for K Consecutive Ones\nDescription:\nYou are given an integer array nums\u200b\u200b\u200b\u200b\u200b\u200b and an integer k. You want to rearrange the elements of the array in a particular order.\n\nExample 25: \nLeetCode Problem #1704\nTitle: Determine if String Halves Are Alike\nDescription:\nYou are given a string s of even length. Split this string into two halves of equal lengths, and let a be the first half and b be the second half.\n\nExample 26: \nLeetCode Problem #1705\nTitle: Maximum Number of Eaten Apples\nDescription:\nThere is a special kind of apple tree that grows apples every day for n days. On the ith day, the tree grows apples[i] apples that will rot after days[i] days.\n\nExample 27: \nLeetCode Problem #1706\nTitle: Where Will the Ball Fall\nDescription:\nYou have a 2-D grid of size m x n representing a box, and you have n balls. The box is open on the top and bottom sides. \n\nExample 28: \nLeetCode Problem #1707\nTitle: Maximum XOR With an Element From Array\nDescription:\nYou are given an array nums consisting of non-negative integers. You are also given a queries array, where queries[i] = [xi, mi]. \n\nExample 29: \nLeetCode Problem #1708\nTitle: Largest Subarray Length K\nDescription:\nYou are given an array nums of integers, and an integer k. You need to find the maximum length of a subarray that contains at most k unique elements.\n\nExample 30: \nLeetCode Problem #1709\nTitle: Biggest Window Between Visits\nDescription:\nThere is a country, where some properties are connected by one-way roads.\n", "cleaned_response": " \nNumber of Students Unable to Eat Lunch\n\nThe school cafeteria offers circular and square sandwiches at lunch break, referred to by numbers 0 and 1 respectively. When students are hungry, they will always prefer to eat a sandwich of their own type. \n\n \nAverage Waiting Time\n\nThere is a restaurant with a single chef. You are given an array customers, where customers[i] = [arrivali, timei]: - arrivali is the arrival time of the ith customer. - timei is the time needed to prepare the order of the ith customer.\n\n \nMaximum Binary String After Change\n\nYou are given a binary string binary consisting of only 0's or 1's. You can apply each of the following operations any number of times:...\n\n \nMinimum Adjacent Swaps for K Consecutive Ones\n\nYou are given an integer array nums\u200b\u200b\u200b\u200b\u200b\u200b and an integer k. You want to rearrange the elements of the array in a particular order.\n\n \nDetermine if String Halves Are Alike\n\nYou are given a string s of even length. Split this string into two halves of equal lengths, and let a be the first half and b be the second half.\n\n \nMaximum Number of Eaten Apples\n\nThere is a special kind of apple tree that grows apples every day for n days. On the ith day, the tree grows apples[i] apples that will rot after days[i] days.\n\n \nWhere Will the Ball Fall\n\nYou have a 2-D grid of size m x n representing a box, and you have n balls. The box is open on the top and bottom sides. \n\n \nMaximum XOR With an Element From Array\n\nYou are given an array nums consisting of non-negative integers. You are also given a queries array, where queries[i] = [xi, mi]. \n\n \nLargest Subarray Length K\n\nYou are given an array nums of integers, and an integer k. You need to find the maximum length of a subarray that contains at most k unique elements.\n\n \nBiggest Window Between Visits\n\nThere is a country, where some properties are connected by one-way roads.\n", "similarity": 0.8568305430482634}
{"input_context": "Example 1: \nLeetCode Problem #1723\nTitle: Find Minimum Time to Finish All Jobs\nDescription:\nYou are given an integer array jobs, where jobs[i] is the amount of time it takes to complete the i th job. \nExample 2: \nLeetCode Problem #1725\nTitle: Number Of Rectangles That Can Form The Largest Square\nDescription:\nYou are given an array rectangles where rectangles[i] = [l i, w i ] represents the i th rectangle of length l i and width w i. \nExample 3: \nLeetCode Problem #1726\nTitle: Tuple with Same Product\nDescription:\nGiven an array nums of distinct positive integers, return the number of tuples (a, b, c, d) such that a * b = c * d where a, b, c, and d are elements of nums, and a != b != c != d. \nExample 4: \nLeetCode Problem #1727\nTitle: Largest Submatrix With Rearrangements\nDescription:\nYou are given a binary matrix matrix of size m x n, and you are allowed to rearrange the columns of the matrix in any order. \nExample 5: \nLeetCode Problem #1728\nTitle: Cat and Mouse II\nDescription:\nA game is played by a cat and a mouse named Cat and Mouse. \nExample 6: \nLeetCode Problem #1732\nTitle: Find the Highest Altitude\nDescription:\nThere is a biker going on a road trip. The road trip consists of n + 1 points at different altitudes. The biker starts his trip on point 0 with altitude equal 0. \nExample 7: \nLeetCode Problem #1733\nTitle: Minimum Number of People to Teach\nDescription:\nOn a social network consisting of m users and some friendships between users, two users can communicate with each other if they know a common language. \nExample 8: \nLeetCode Problem #1734\nTitle: Decode XORed Permutation\nDescription:\nThere is an integer array perm that is a permutation of the first n positive integers, where n is always odd. \nExample 9: \nLeetCode Problem #1735\nTitle: Count Ways to Make Array With Product\nDescription:\nYou are given a 2D integer array, queries. For each queries[i], where queries[i] = [n i, k i ], find the number of different ways you can place positive integers into an array of size n i such that the product of the integers is k i. As the number of ways may be too large, the answer to the i th query is the number of ways modulo 10e9 + 7. \nExample 10: \nLeetCode Problem #1736\nTitle: Latest Time by Replacing Hidden Digits\nDescription:\nYou are given a string time in the form of hh:mm, where some of the digits in the string are hidden (represented by ? ). \nExample 11: \nLeetCode Problem #1737\nTitle: Change Minimum Characters to Satisfy One of Three Conditions\nDescription:\nYou are given two strings a and b that consist of lowercase letters. In one operation, you can change any character in a or b to any lowercase letter. \nExample 12: \nLeetCode Problem #1738\nTitle: Find Kth Largest XOR Coordinate Value\nDescription:\nYou are given a 2D matrix of size m x n, consisting of non-negative integers. You are also given an integer k. \nExample 13: \nLeetCode Problem #1739\nTitle: Building Boxes\nDescription:\nYou have a cubic storeroom where the width, length, and height of the room are all equal to n units. You are asked to place n boxes in this room where each box is a cube of unit side length. There are however some rules to placing the boxes:...\n\nExample 14: \nLeetCode Problem #1742\nTitle: Maximum Number of Balls in a Box\nDescription:\nYou are working in a ball factory where you have n balls numbered from lowLimit up to highLimit inclusive (i. e. , n == highLimit - lowLimit + 1 ), and an infinite number of boxes numbered from 1 to infinity. \nExample 15: \nLeetCode Problem #1743\nTitle: Restore the Array From Adjacent Pairs\nDescription:\nThere is an integer array nums that consists of n unique elements, but you have forgotten it. However, you do remember every pair of adjacent elements in nums. \nExample 16: \nLeetCode Problem #1744\nTitle: Can You Eat Your Favorite Candy on Your Favorite Day?\nDescription:\nYou are given a (0-indexed) array of positive integers candiesCount where candiesCount[i] represents the number of candies of the i th type you have. You are also given a 2D array queries where queries[i] = [favoriteType i, favoriteDay i, dailyCap i ]. \nExample 17: \nLeetCode Problem #1745\nTitle: Palindrome Partitioning IV\nDescription:\nGiven a string s, return true if it is possible to split the string s into three non-empty palindromic substrings. Otherwise, return false. \u200b\u200b\u200b\u200b\u200b...\n\nExample 18: \nLeetCode Problem #1748\nTitle: Sum of Unique Elements\nDescription:\nYou are given an integer array nums. The unique elements of an array are the elements that appear exactly once in the array. \nExample 19: \nLeetCode Problem #1749\nTitle: Maximum Absolute Sum of Any Subarray\nDescription:\nYou are given an integer array nums. The absolute sum of a subarray [nums l, nums l+1,. . . , nums r-1, nums r ] is abs(nums l + nums l+1 +. . . + nums r-1 + nums r ). \nExample 20: \nLeetCode Problem #1750\nTitle: Minimum Length of String After Deleting Similar Ends\nDescription:\nGiven a string s consisting only of characters 'a', 'b', and 'c'. You are asked to apply the following algorithm on the string any number of times:...\n", "expected_response": "Example 21: \nLeetCode Problem #1751\nTitle: Maximum Number of Events That Can Be Attended II\nDescription:\nYou are given an array of events where events[i] = [startDay i, endDay i, value i ]. The i th event starts at startDay i and ends at endDay i, and if you attend this event, you will receive a value of value i. You are also given an integer k which represents the maximum number of events you can attend. \nExample 22: \nLeetCode Problem #1752\nTitle: Check if Array Is Sorted and Rotated\nDescription:\nGiven an array nums, return true if the array was originally sorted in non-decreasing order, then rotated some number of positions (including zero). Otherwise, return false. \nExample 23: \nLeetCode Problem #1753\nTitle: Maximum Score From Removing Stones\nDescription:\nYou are playing a solitaire game with three piles of stones of sizes a \u200b\u200b\u200b\u200b\u200b\u200b, b, \u200b\u200b\u200b\u200b\u200b\u200b and c \u200b\u200b\u200b\u200b\u200b\u200b respectively. Each turn you choose two different non-empty piles, take one stone from each, and add 1 point to your score. The game stops when there are fewer than two non-empty piles (meaning there are no more available moves). \nExample 24: \nLeetCode Problem #1754\nTitle: Largest Merge Of Two Strings\nDescription:\nYou are given two strings word1 and word2. You want to construct a string merge in the following way: while either word1 or word2 are non-empty, choose one of the following options:...\n\nExample 25: \nLeetCode Problem #1755\nTitle: Closest Subsequence Sum\nDescription:\nYou are given an integer array nums and an integer goal. \nExample 26: \nLeetCode Problem #1758\nTitle: Minimum Changes To Make Alternating Binary String\nDescription:\nYou are given a string s consisting only of the characters '0' and '1'. In one operation, you can change any '0' to '1' or vice versa. \nExample 27: \nLeetCode Problem #1759\nTitle: Count Number of Homogenous Substrings\nDescription:\nGiven a string s, return the number of homogenous substrings of s. Since the answer may be too large, return it modulo 10e9 + 7. \nExample 28: \nLeetCode Problem #1760\nTitle: Minimum Limit of Balls in a Bag\nDescription:\nYou are given an integer array nums where the i th bag contains nums[i] balls. You are also given an integer maxOperations. \nExample 29: \nLeetCode Problem #1761\nTitle: Minimum Degree of a Connected Trio in a Graph\nDescription:\nYou are given an undirected graph. You are given an integer n which is the number of nodes in the graph and an array edges, where each edges[i] = [u i, v i ] indicates that there is an undirected edge between u i and v i. \nExample 30: \nLeetCode Problem #1763\nTitle: Longest Nice Substring\nDescription:\nA string s is nice if, for every letter of the alphabet that s contains, it appears both in uppercase and lowercase. For example, \"abABB\" is nice because 'A' and 'a' appear, and 'B' and 'b' appear. However, \"abA\" is not because 'b' appears, but 'B' does not. \nExample 31: \nLeetCode Problem #1764\nTitle: Form Array by Concatenating Subarrays of Another Array\nDescription:\nYou are given a 2D integer array groups of length n. You are also given an integer array nums. \nExample 32: \nLeetCode Problem #1765\nTitle: Map of Highest Peak\nDescription:\nYou are given an integer matrix isWater of size m x n that represents a map of land and water cells. \nExample 33: \nLeetCode Problem #1766\nTitle: Tree of Coprimes\nDescription:\nThere is a tree (i. e. , a connected, undirected graph that has no cycles) consisting of n nodes numbered from 0 to n - 1 and exactly n - 1 edges. Each node has a value associated with it, and the root of the tree is node 0. \nExample 34: \nLeetCode Problem #1768\nTitle: Merge Strings Alternately\nDescription:\nYou are given two strings word1 and word2. Merge the strings by adding letters in alternating order, starting with word1. If a string is longer than the other, append the additional letters onto the end of the merged string. \nExample 35: \nLeetCode Problem #1769\nTitle: Minimum Number of Operations to Move All Balls to Each Box\nDescription:\nYou have n boxes. You are given a binary string boxes of length n, where boxes[i] is '0' if the i th box is empty, and '1' if it contains one ball. \nExample 36: \nLeetCode Problem #1770\nTitle: Maximum Score from Performing Multiplication Operations\nDescription:\nYou are given two 0-indexed integer arrays nums and multipliers of size n and m respectively, where n >= m. \nExample 37: \nLeetCode Problem #1771\nTitle: Maximize Palindrome Length From Subsequences\nDescription:\nYou are given two strings, word1 and word2. You want to construct a string in the following manner:...\n\nExample 38: \nLeetCode Problem #1773\nTitle: Count Items Matching a Rule\nDescription:\nYou are given an array items, where each items[i] = [type i, color i, name i ] describes the type, color, and name of the i th item. You are also given a rule represented by two strings, ruleKey and ruleValue. \nExample 39: \nLeetCode Problem #1774\nTitle: Closest Dessert Cost\nDescription:\nYou would like to make dessert and are preparing to buy the ingredients. You have n ice cream base flavors and m types of toppings to choose from. You must follow these rules when making your dessert:...\n\nExample 40: \nLeetCode Problem #1775\nTitle: Equal Sum Arrays With Minimum Number of Operations\nDescription:\nYou are given two arrays of integers nums1 and nums2, possibly of different lengths. The values in the arrays are between 1 and 6, inclusive. ", "iloc": 1341, "frontend_question_id": 1776.0, "n_pass": 1, "response": "Example 21: \nLeetCode Problem #1751\nTitle: Maximum Number of Events That Can Be Attended II\nDescription:\nYou are given an array of events where events[i] = [startDay i, endDay i, value i ]. The i th event starts at startDay i and ends at endDay i, and has a value of value i. \nExample 22: \nLeetCode Problem #1752\nTitle: Check if Array Is Sorted and Rotated\nDescription:\nGiven an array nums, return true if the array was originally sorted in non-decreasing order, then rotated some number of positions (including zero). Otherwise, return false. \u200b\u200b\u200b\u200b\u200b...\nExample 23: \nLeetCode Problem #1753\nTitle: Maximum Score From Removing Stones\nDescription:\nYou are playing a stone removal game with n stones in a row. Each stone has an associated value, which is an integer. \nExample 24: \nLeetCode Problem #1754\nTitle: Largest Merge Of Two Strings\nDescription:\nYou are given two strings word1 and word2. You want to construct a string merge in the following way: while either word1 or word2 are non-empty, do the following...\nExample 25: \nLeetCode Problem #1755\nTitle: Closest Subsequence Sum\nDescription:\nYou are given an integer array nums and an integer goal. You want to choose a subsequence of nums such that the sum of its elements is the closest possible to goal. \nExample 26: \nLeetCode Problem #1756\nTitle: Design Most Recently Used Queue\nDescription:\nDesign a queue-like data structure that supports push, pop, peek, and retrieving the minimum element in constant time. \nExample 27: \nLeetCode Problem #1757\nTitle: Recyclable and Low Fat Products\nDescription:\nTable: Products\nExample 28: \nLeetCode Problem #1758\nTitle: Minimum Changes To Make Alternating Binary String\nDescription:\nYou are given a string s consisting only of the characters '0' and '1'. In one operation, you can change any '0' to '1' or vice versa. \nExample 29: \nLeetCode Problem #1759\nTitle: Count Number of Homogenous Substrings\nDescription:\nGiven a string s, return the number of homogenous substrings of s. Since the answer may be too large, return it modulo 10e9 + 7. \u200b\u200b\u200b\u200b\u200b...\nExample 30: \nLeetCode Problem #1760\nTitle: Minimum Limit of Balls in a Bag\nDescription:\nYou are given an integer array nums where the i th bag contains nums[ i ] balls. You are also given an integer maxOperations.", "cleaned_response": " \nMaximum Number of Events That Can Be Attended II\n\nYou are given an array of events where events[i] = [startDay i, endDay i, value i ]. The i th event starts at startDay i and ends at endDay i, and has a value of value i. \n \nCheck if Array Is Sorted and Rotated\n\nGiven an array nums, return true if the array was originally sorted in non-decreasing order, then rotated some number of positions (including zero). Otherwise, return false. \u200b\u200b\u200b\u200b\u200b...\n \nMaximum Score From Removing Stones\n\nYou are playing a stone removal game with n stones in a row. Each stone has an associated value, which is an integer. \n \nLargest Merge Of Two Strings\n\nYou are given two strings word1 and word2. You want to construct a string merge in the following way: while either word1 or word2 are non-empty, do the following...\n \nClosest Subsequence Sum\n\nYou are given an integer array nums and an integer goal. You want to choose a subsequence of nums such that the sum of its elements is the closest possible to goal. \n \nDesign Most Recently Used Queue\n\nDesign a queue-like data structure that supports push, pop, peek, and retrieving the minimum element in constant time. \n \nRecyclable and Low Fat Products\n\nTable: Products\n \nMinimum Changes To Make Alternating Binary String\n\nYou are given a string s consisting only of the characters '0' and '1'. In one operation, you can change any '0' to '1' or vice versa. \n \nCount Number of Homogenous Substrings\n\nGiven a string s, return the number of homogenous substrings of s. Since the answer may be too large, return it modulo 10e9 + 7. \u200b\u200b\u200b\u200b\u200b...\n \nMinimum Limit of Balls in a Bag\n\nYou are given an integer array nums where the i th bag contains nums[ i ] balls. You are also given an integer maxOperations.", "similarity": 0.9715472532582108}
{"input_context": "Example 1: \nLeetCode Problem #1776\nTitle: Car Fleet II\nDescription:\nThere are n cars traveling at different speeds in the same direction along a one-lane road. You are given an array cars of length n, where cars[i] = [position i, speed i ] represents:...\n\nExample 2: \nLeetCode Problem #1779\nTitle: Find Nearest Point That Has the Same X or Y Coordinate\nDescription:\nYou are given two integers, x and y, which represent your current location on a Cartesian grid: (x, y). You are also given an array points where each points[i] = [a i, b i ] represents that a point exists at (a i, b i ). A point is valid if it shares the same x-coordinate or the same y-coordinate as your location. \nExample 3: \nLeetCode Problem #1780\nTitle: Check if Number is a Sum of Powers of Three\nDescription:\nGiven an integer n, return true if it is possible to represent n as the sum of distinct powers of three. Otherwise, return false. \nExample 4: \nLeetCode Problem #1781\nTitle: Sum of Beauty of All Substrings\nDescription:\nThe beauty of a string is the difference in frequencies between the most frequent and least frequent characters. \nExample 5: \nLeetCode Problem #1782\nTitle: Count Pairs Of Nodes\nDescription:\nYou are given an undirected graph defined by an integer n, the number of nodes, and a 2D integer array edges, the edges in the graph, where edges[i] = [u i, v i ] indicates that there is an undirected edge between u i and v i. You are also given an integer array queries. \nExample 6: \nLeetCode Problem #1784\nTitle: Check if Binary String Has at Most One Segment of Ones\nDescription:\nGiven a binary string s \u200b\u200b\u200b\u200b\u200bwithout leading zeros, return true \u200b\u200b\u200b if s contains at most one contiguous segment of ones. Otherwise, return false. \nExample 7: \nLeetCode Problem #1785\nTitle: Minimum Elements to Add to Form a Given Sum\nDescription:\nYou are given an integer array nums and two integers limit and goal. The array nums has an interesting property that abs(nums[i]) <= limit. \nExample 8: \nLeetCode Problem #1786\nTitle: Number of Restricted Paths From First to Last Node\nDescription:\nThere is an undirected weighted connected graph. You are given a positive integer n which denotes that the graph has n nodes labeled from 1 to n, and an array edges where each edges[i] = [u i, v i, weight i ] denotes that there is an edge between nodes u i and v i with weight equal to weight i. \nExample 9: \nLeetCode Problem #1787\nTitle: Make the XOR of All Segments Equal to Zero\nDescription:\nYou are given an array nums \u200b\u200b\u200b and an integer k \u200b\u200b\u200b\u200b\u200b. The XOR of a segment [left, right] where left <= right is the XOR of all the elements with indices between left and right, inclusive: nums[left] XOR nums[left+1] XOR. . . XOR nums[right]. \nExample 10: \nLeetCode Problem #1790\nTitle: Check if One String Swap Can Make Strings Equal\nDescription:\nYou are given two strings s1 and s2 of equal length. A string swap is an operation where you choose two indices in a string (not necessarily different) and swap the characters at these indices. \nExample 11: \nLeetCode Problem #1791\nTitle: Find Center of Star Graph\nDescription:\nThere is an undirected star graph consisting of n nodes labeled from 1 to n. A star graph is a graph where there is one center node and exactly n - 1 edges that connect the center node with every other node. \nExample 12: \nLeetCode Problem #1792\nTitle: Maximum Average Pass Ratio\nDescription:\nThere is a school that has classes of students and each class will be having a final exam. You are given a 2D integer array classes, where classes[i] = [pass i, total i ]. You know beforehand that in the i th class, there are total i total students, but only pass i number of students will pass the exam. \nExample 13: \nLeetCode Problem #1793\nTitle: Maximum Score of a Good Subarray\nDescription:\nYou are given an array of integers nums (0-indexed) and an integer k. \nExample 14: \nLeetCode Problem #1796\nTitle: Second Largest Digit in a String\nDescription:\nGiven an alphanumeric string s, return the second largest numerical digit that appears in s, or -1 if it does not exist. \nExample 15: \nLeetCode Problem #1797\nTitle: Design Authentication Manager\nDescription:\nThere is an authentication system that works with authentication tokens. For each session, the user will receive a new authentication token that will expire timeToLive seconds after the currentTime. If the token is renewed, the expiry time will be extended to expire timeToLive seconds after the (potentially different) currentTime. \nExample 16: \nLeetCode Problem #1798\nTitle: Maximum Number of Consecutive Values You Can Make\nDescription:\nYou are given an integer array coins of length n which represents the n coins that you own. The value of the i th coin is coins[i]. You can make some value x if you can choose some of your n coins such that their values sum up to x. \nExample 17: \nLeetCode Problem #1799\nTitle: Maximize Score After N Operations\nDescription:\nYou are given nums, an array of positive integers of size 2 * n. You must perform n operations on this array. \nExample 18: \nLeetCode Problem #1800\nTitle: Maximum Ascending Subarray Sum\nDescription:\nGiven an array of positive integers nums, return the maximum possible sum of an ascending subarray in nums. \nExample 19: \nLeetCode Problem #1801\nTitle: Number of Orders in the Backlog\nDescription:\nYou are given a 2D integer array orders, where each orders[i] = [price i, amount i, orderType i ] denotes that amount i orders have been placed of type orderType i at the price price i. The orderType i is:...\n\nExample 20: \nLeetCode Problem #1802\nTitle: Maximum Value at a Given Index in a Bounded Array\nDescription:\nYou are given three positive integers: n, index, and maxSum. You want to construct an array nums ( 0-indexed ) that satisfies the following conditions:...\n", "expected_response": "Example 21: \nLeetCode Problem #1803\nTitle: Count Pairs With XOR in a Range\nDescription:\nGiven a (0-indexed) integer array nums and two integers low and high, return the number of nice pairs. \nExample 22: \nLeetCode Problem #1805\nTitle: Number of Different Integers in a String\nDescription:\nYou are given a string word that consists of digits and lowercase English letters. \nExample 23: \nLeetCode Problem #1806\nTitle: Minimum Number of Operations to Reinitialize a Permutation\nDescription:\nYou are given an even integer n \u200b\u200b\u200b\u200b\u200b\u200b. You initially have a permutation perm of size n \u200b\u200b where perm[i] == i \u200b (0-indexed) \u200b\u200b\u200b\u200b. \nExample 24: \nLeetCode Problem #1807\nTitle: Evaluate the Bracket Pairs of a String\nDescription:\nYou are given a string s that contains some bracket pairs, with each pair containing a non-empty key. \nExample 25: \nLeetCode Problem #1808\nTitle: Maximize Number of Nice Divisors\nDescription:\nYou are given a positive integer primeFactors. You are asked to construct a positive integer n that satisfies the following conditions:...\n\nExample 26: \nLeetCode Problem #1812\nTitle: Determine Color of a Chessboard Square\nDescription:\nYou are given coordinates, a string that represents the coordinates of a square of the chessboard. Below is a chessboard for your reference. \nExample 27: \nLeetCode Problem #1813\nTitle: Sentence Similarity III\nDescription:\nA sentence is a list of words that are separated by a single space with no leading or trailing spaces. For example, \"Hello World\", \"HELLO\", \"hello world hello world\" are all sentences. Words consist of only uppercase and lowercase English letters. \nExample 28: \nLeetCode Problem #1814\nTitle: Count Nice Pairs in an Array\nDescription:\nYou are given an array nums that consists of non-negative integers. Let us define rev(x) as the reverse of the non-negative integer x. For example, rev(123) = 321, and rev(120) = 21. A pair of indices (i, j) is nice if it satisfies all of the following conditions:...\n\nExample 29: \nLeetCode Problem #1815\nTitle: Maximum Number of Groups Getting Fresh Donuts\nDescription:\nThere is a donuts shop that bakes donuts in batches of batchSize. They have a rule where they must serve all of the donuts of a batch before serving any donuts of the next batch. You are given an integer batchSize and an integer array groups, where groups[i] denotes that there is a group of groups[i] customers that will visit the shop. Each customer will get exactly one donut. \nExample 30: \nLeetCode Problem #1816\nTitle: Truncate Sentence\nDescription:\nA sentence is a list of words that are separated by a single space with no leading or trailing spaces. Each of the words consists of only uppercase and lowercase English letters (no punctuation). \nExample 31: \nLeetCode Problem #1817\nTitle: Finding the Users Active Minutes\nDescription:\nYou are given the logs for users' actions on LeetCode, and an integer k. The logs are represented by a 2D integer array logs where each logs[i] = [ID i, time i ] indicates that the user with ID i performed an action at the minute time i. \nExample 32: \nLeetCode Problem #1818\nTitle: Minimum Absolute Sum Difference\nDescription:\nYou are given two positive integer arrays nums1 and nums2, both of length n. \nExample 33: \nLeetCode Problem #1819\nTitle: Number of Different Subsequences GCDs\nDescription:\nYou are given an array nums that consists of positive integers. \nExample 34: \nLeetCode Problem #1822\nTitle: Sign of the Product of an Array\nDescription:\nThere is a function signFunc(x) that returns:...\n\nExample 35: \nLeetCode Problem #1823\nTitle: Find the Winner of the Circular Game\nDescription:\nThere are n friends that are playing a game. The friends are sitting in a circle and are numbered from 1 to n in clockwise order. More formally, moving clockwise from the i th friend brings you to the (i+1) th friend for 1 <= i < n, and moving clockwise from the n th friend brings you to the 1 st friend. \nExample 36: \nLeetCode Problem #1824\nTitle: Minimum Sideway Jumps\nDescription:\nThere is a 3 lane road of length n that consists of n + 1 points labeled from 0 to n. A frog starts at point 0 in the second lane and wants to jump to point n. However, there could be obstacles along the way. \nExample 37: \nLeetCode Problem #1825\nTitle: Finding MK Average\nDescription:\nYou are given two integers, m and k, and a stream of integers. You are tasked to implement a data structure that calculates the MKAverage for the stream. \nExample 38: \nLeetCode Problem #1827\nTitle: Minimum Operations to Make the Array Increasing\nDescription:\nYou are given an integer array nums ( 0-indexed ). In one operation, you can choose an element of the array and increment it by 1. \nExample 39: \nLeetCode Problem #1828\nTitle: Queries on Number of Points Inside a Circle\nDescription:\nYou are given an array points where points[i] = [x i, y i ] is the coordinates of the i th point on a 2D plane. Multiple points can have the same coordinates. \nExample 40: \nLeetCode Problem #1829\nTitle: Maximum XOR for Each Query\nDescription:\nYou are given a sorted array nums of n non-negative integers and an integer maximumBit. You want to perform the following query n times :...\n", "iloc": 1381, "frontend_question_id": 1830.0, "n_pass": 1, "response": "Example 21: \nLeetCode Problem #1803\nTitle: Count Pairs With XOR in a Range\nDescription:\nGiven a list of integers nums and two integers low and high, return the number of pairs (i, j) where 0 <= i < j < nums.length and low <= nums[i] XOR nums[j] <= high.\n\nExample 22: \nLeetCode Problem #1804\nTitle: Implement Trie II (Prefix Tree)\nDescription:\nImplement the Trie class:\n- Trie() Initializes the trie object.\n- void insert(String word) Inserts the string word into the trie.\n- int countWordsEqualTo(String word) Returns the number of strings in the trie that are equal to word.\n- int countWordsStartingWith(String prefix) Returns the number of strings in the trie that have the prefix prefix\n- void erase(String word) Erases the string word from the trie.\n\nExample 23: \nLeetCode Problem #1805\nTitle: Number of Different Integers in a String\nDescription:\nYou are given a string word that consists of digits and lowercase English letters.\nYou will replace every non-digit character with a space.\nReturn the number of different integers after performing the replacement operations on word.\n\nExample 24: \nLeetCode Problem #1806\nTitle: Minimum Number of Operations to Reinitialize a Permutation\nDescription:\nYou are given an even integer n\u200b\u200b\u200b\u200b\u200b\u200b. You initially have a permutation perm of size n\u200b\u200b where perm[i] == i\u200b\u200b\u200b\u200b\u200b\u200b (0-indexed).\nIn one operation, you will create a new array arr, and for each i:\n- If i % 2 == 0, then arr[i] = perm[i / 2].\n- If i % 2 == 1, then arr[i] = perm[n / 2 + (i - 1) / 2].\nThen, assign arr\u200b\u200b\u200b\u200b as the new perm.\nReturn the minimum non-zero number of operations you need to perform on perm to return the permutation to its initial value.\n\nExample 25: \nLeetCode Problem #1807\nTitle: Evaluate the Bracket Pairs of a String\nDescription:\nYou are given a string s that contains some bracket pairs, with each pair containing a non-empty key.\n- For example, in the string \"(name)is(age)yearsold\", there are two bracket pairs that contain the keys \"name\" and \"age\".\nYou know the values of a wide range of keys. This wide range is represented by a 2D string array knowledge where each knowledge[i] = [key i, value i] indicates that key key\u200b\u200bi\u200b\u200b has a value of value\u200b\u200bi.\nYou are tasked to evaluate all of the bracket pairs. When you evaluate a bracket pair that contains some key key\u200b\u200bi\u200b\u200b, you will:\n- Replace key\u200b\u200bi\u200b\u200b and the bracket pair with the key's corresponding value\u200b\u200bi\u200b\u200b.\n- If you do not know the value of the key, you will replace key\u200b\u200bi\u200b\u200b and the bracket pair with a question mark \"?\" (without the quotation marks).\nEach key will appear at most once in your knowledge. There will not be any nested brackets in s.\n\nExample 26: \nLeetCode Problem #1808\nTitle: Maximize Number of Nice Divisors\nDescription:\nYou are given a positive integer primeFactors. You are asked to construct a positive integer n that satisfies the following conditions:\n- The number of prime factors of n (not necessarily distinct) is at most primeFactors.\n- The number of nice divisors of n is maximized. Note that a divisor of n is nice if it is divisible by every prime factor of n. For example, if n = 12, then its prime factors are [2,2,3], then 6 and 12 are nice divisors, while 3 and 4 are not.\n\nExample 27: \nLeetCode Problem #1809\nTitle: Ad-Free Sessions\nDescription:\nYou are given a 0-indexed integer array tasks, where tasks[i] is the total number of tasks in the ith session on AdFree.\n\nExample 28: \nLeetCode Problem #1810\nTitle: Minimum Path Cost in a Hidden Grid\nDescription:\nYou have discovered a secret hidden grid which is filled with integers. Each integer represents a cost to traverse the cell, where the cost is a positive integer (e.g. cost[i][j] == -1 means the cell (i, j) is blocked).\nYou are initially located at the top-left cell (0, 0), and you want to reach the bottom-right cell (n-1, m-1). You can move either right or down at each step until you reach the destination.\nHowever, the hidden grid is dynamic, meaning that the costs can change over time based on the current state.\nYou want to find the minimum cost to reach the destination while considering all possible states of the hidden grid.\n\nExample 29: \nLeetCode Problem #1811\nTitle: Number of Orders in the Backlog (Hard Version)\nDescription:\nYou are given a 2D integer array orders, where each orders[i] = [price i, amount i, orderType i ] denotes that amount i orders have been placed of type orderType i at the price price i. The orderType i is:...\nUpdate the array to account for the new orders. Return the number of orders that cannot be fulfilled.\n\nExample 30: \nLeetCode Problem #1812\nTitle: Determine Color of a Chessboard Square\nDescription:\nYou are given coordinates, a string that represents the coordinates of a square of the chessboard. Below is a chessboard for your reference.\nReturn true if the square is white, and false if the square is black.\n\nThese examples have been generated based on the pattern observed in the given examples.", "cleaned_response": " \nCount Pairs With XOR in a Range\n\nGiven a list of integers nums and two integers low and high, return the number of pairs (i, j) where 0 <= i < j < nums.length and low <= nums[i] XOR nums[j] <= high.\n\n \nImplement Trie II (Prefix Tree)\n\nImplement the Trie class:\n- Trie() Initializes the trie object.\n- void insert(String word) Inserts the string word into the trie.\n- int countWordsEqualTo(String word) Returns the number of strings in the trie that are equal to word.\n- int countWordsStartingWith(String prefix) Returns the number of strings in the trie that have the prefix prefix\n- void erase(String word) Erases the string word from the trie.\n\n \nNumber of Different Integers in a String\n\nYou are given a string word that consists of digits and lowercase English letters.\nYou will replace every non-digit character with a space.\nReturn the number of different integers after performing the replacement operations on word.\n\n \nMinimum Number of Operations to Reinitialize a Permutation\n\nYou are given an even integer n\u200b\u200b\u200b\u200b\u200b\u200b. You initially have a permutation perm of size n\u200b\u200b where perm[i] == i\u200b\u200b\u200b\u200b\u200b\u200b (0-indexed).\nIn one operation, you will create a new array arr, and for each i:\n- If i % 2 == 0, then arr[i] = perm[i / 2].\n- If i % 2 == 1, then arr[i] = perm[n / 2 + (i - 1) / 2].\nThen, assign arr\u200b\u200b\u200b\u200b as the new perm.\nReturn the minimum non-zero number of operations you need to perform on perm to return the permutation to its initial value.\n\n \nEvaluate the Bracket Pairs of a String\n\nYou are given a string s that contains some bracket pairs, with each pair containing a non-empty key.\n- For example, in the string \"(name)is(age)yearsold\", there are two bracket pairs that contain the keys \"name\" and \"age\".\nYou know the values of a wide range of keys. This wide range is represented by a 2D string array knowledge where each knowledge[i] = [key i, value i] indicates that key key\u200b\u200bi\u200b\u200b has a value of value\u200b\u200bi.\nYou are tasked to evaluate all of the bracket pairs. When you evaluate a bracket pair that contains some key key\u200b\u200bi\u200b\u200b, you will:\n- Replace key\u200b\u200bi\u200b\u200b and the bracket pair with the key's corresponding value\u200b\u200bi\u200b\u200b.\n- If you do not know the value of the key, you will replace key\u200b\u200bi\u200b\u200b and the bracket pair with a question mark \"?\" (without the quotation marks).\nEach key will appear at most once in your knowledge. There will not be any nested brackets in s.\n\n \nMaximize Number of Nice Divisors\n\nYou are given a positive integer primeFactors. You are asked to construct a positive integer n that satisfies the following conditions:\n- The number of prime factors of n (not necessarily distinct) is at most primeFactors.\n- The number of nice divisors of n is maximized. Note that a divisor of n is nice if it is divisible by every prime factor of n. For example, if n = 12, then its prime factors are [2,2,3], then 6 and 12 are nice divisors, while 3 and 4 are not.\n\n \nAd-Free Sessions\n\nYou are given a 0-indexed integer array tasks, where tasks[i] is the total number of tasks in the ith session on AdFree.\n\n \nMinimum Path Cost in a Hidden Grid\n\nYou have discovered a secret hidden grid which is filled with integers. Each integer represents a cost to traverse the cell, where the cost is a positive integer (e.g. cost[i][j] == -1 means the cell (i, j) is blocked).\nYou are initially located at the top-left cell (0, 0), and you want to reach the bottom-right cell (n-1, m-1). You can move either right or down at each step until you reach the destination.\nHowever, the hidden grid is dynamic, meaning that the costs can change over time based on the current state.\nYou want to find the minimum cost to reach the destination while considering all possible states of the hidden grid.\n\n \nNumber of Orders in the Backlog (Hard Version)\n\nYou are given a 2D integer array orders, where each orders[i] = [price i, amount i, orderType i ] denotes that amount i orders have been placed of type orderType i at the price price i. The orderType i is:...\nUpdate the array to account for the new orders. Return the number of orders that cannot be fulfilled.\n\n \nDetermine Color of a Chessboard Square\n\nYou are given coordinates, a string that represents the coordinates of a square of the chessboard. Below is a chessboard for your reference.\nReturn true if the square is white, and false if the square is black.\n\nThese examples have been generated based on the pattern observed in the given examples.", "similarity": 0.9658614404626772}
{"input_context": "Example 1: \nLeetCode Problem #1830\nTitle: Minimum Number of Operations to Make String Sorted\nDescription:\nYou are given a string s ( 0-indexed )\u200b\u200b\u200b\u200b\u200b\u200b. You are asked to perform the following operation on s \u200b\u200b\u200b\u200b\u200b\u200b until you get a sorted string:...\n\nExample 2: \nLeetCode Problem #1832\nTitle: Check if the Sentence Is Pangram\nDescription:\nA pangram is a sentence where every letter of the English alphabet appears at least once. \nExample 3: \nLeetCode Problem #1833\nTitle: Maximum Ice Cream Bars\nDescription:\nIt is a sweltering summer day, and a boy wants to buy some ice cream bars. \nExample 4: \nLeetCode Problem #1834\nTitle: Single-Threaded CPU\nDescription:\nYou are given n \u200b\u200b\u200b\u200b\u200b\u200b tasks labeled from 0 to n - 1 represented by a 2D integer array tasks, where tasks[i] = [enqueueTime i, processingTime i ] means that the i \u200b\u200b\u200b\u200b\u200b\u200bth \u200b\u200b\u200b\u200b task will be available to process at enqueueTime i and will take processingTime i to finish processing. \nExample 5: \nLeetCode Problem #1835\nTitle: Find XOR Sum of All Pairs Bitwise AND\nDescription:\nThe XOR sum of a list is the bitwise XOR of all its elements. If the list only contains one element, then its XOR sum will be equal to this element. \nExample 6: \nLeetCode Problem #1837\nTitle: Sum of Digits in Base K\nDescription:\nGiven an integer n (in base 10 ) and a base k, return the sum of the digits of n after converting n from base 10 to base k. \nExample 7: \nLeetCode Problem #1838\nTitle: Frequency of the Most Frequent Element\nDescription:\nThe frequency of an element is the number of times it occurs in an array. \nExample 8: \nLeetCode Problem #1839\nTitle: Longest Substring Of All Vowels in Order\nDescription:\nA string is considered beautiful if it satisfies the following conditions:...\n\nExample 9: \nLeetCode Problem #1840\nTitle: Maximum Building Height\nDescription:\nYou want to build n new buildings in a city. The new buildings will be built in a line and are labeled from 1 to n. \nExample 10: \nLeetCode Problem #1844\nTitle: Replace All Digits with Characters\nDescription:\nYou are given a 0-indexed string s that has lowercase English letters in its even indices and digits in its odd indices. \nExample 11: \nLeetCode Problem #1845\nTitle: Seat Reservation Manager\nDescription:\nDesign a system that manages the reservation state of n seats that are numbered from 1 to n. \nExample 12: \nLeetCode Problem #1846\nTitle: Maximum Element After Decreasing and Rearranging\nDescription:\nYou are given an array of positive integers arr. Perform some operations (possibly none) on arr so that it satisfies these conditions:...\n\nExample 13: \nLeetCode Problem #1847\nTitle: Closest Room\nDescription:\nThere is a hotel with n rooms. The rooms are represented by a 2D integer array rooms where rooms[i] = [roomId i, size i ] denotes that there is a room with room number roomId i and size equal to size i. Each roomId i is guaranteed to be unique. \nExample 14: \nLeetCode Problem #1848\nTitle: Minimum Distance to the Target Element\nDescription:\nGiven an integer array nums (0-indexed) and two integers target and start, find an index i such that nums[i] == target and abs(i - start) is minimized. Note that abs(x) is the absolute value of x. \nExample 15: \nLeetCode Problem #1849\nTitle: Splitting a String Into Descending Consecutive Values\nDescription:\nYou are given a string s that consists of only digits. \nExample 16: \nLeetCode Problem #1850\nTitle: Minimum Adjacent Swaps to Reach the Kth Smallest Number\nDescription:\nYou are given a string num, representing a large integer, and an integer k. \nExample 17: \nLeetCode Problem #1851\nTitle: Minimum Interval to Include Each Query\nDescription:\nYou are given a 2D integer array intervals, where intervals[i] = [left i, right i ] describes the i th interval starting at left i and ending at right i (inclusive). The size of an interval is defined as the number of integers it contains, or more formally right i - left i + 1. \nExample 18: \nLeetCode Problem #1854\nTitle: Maximum Population Year\nDescription:\nYou are given a 2D integer array logs where each logs[i] = [birth i, death i ] indicates the birth and death years of the i th person. \nExample 19: \nLeetCode Problem #1855\nTitle: Maximum Distance Between a Pair of Values\nDescription:\nYou are given two non-increasing 0-indexed integer arrays nums1 \u200b\u200b\u200b\u200b\u200b\u200b and nums2 \u200b\u200b\u200b\u200b\u200b\u200b. \nExample 20: \nLeetCode Problem #1856\nTitle: Maximum Subarray Min-Product\nDescription:\nThe min-product of an array is equal to the minimum value in the array multiplied by the array's sum. ", "expected_response": "Example 21: \nLeetCode Problem #1857\nTitle: Largest Color Value in a Directed Graph\nDescription:\nThere is a directed graph of n colored nodes and m edges. The nodes are numbered from 0 to n - 1. \nExample 22: \nLeetCode Problem #1859\nTitle: Sorting the Sentence\nDescription:\nA sentence is a list of words that are separated by a single space with no leading or trailing spaces. Each word consists of lowercase and uppercase English letters. \nExample 23: \nLeetCode Problem #1860\nTitle: Incremental Memory Leak\nDescription:\nYou are given two integers memory1 and memory2 representing the available memory in bits on two memory sticks. There is currently a faulty program running that consumes an increasing amount of memory every second. \nExample 24: \nLeetCode Problem #1861\nTitle: Rotating the Box\nDescription:\nYou are given an m x n matrix of characters box representing a side-view of a box. Each cell of the box is one of the following:...\n\nExample 25: \nLeetCode Problem #1862\nTitle: Sum of Floored Pairs\nDescription:\nGiven an integer array nums, return the sum of floor(nums[i] / nums[j]) for all pairs of indices 0 <= i, j < nums.length in the array. Since the answer may be too large, return it modulo 10e9 + 7. \nExample 26: \nLeetCode Problem #1863\nTitle: Sum of All Subset XOR Totals\nDescription:\nThe XOR total of an array is defined as the bitwise XOR of all its elements, or 0 if the array is empty. \nExample 27: \nLeetCode Problem #1864\nTitle: Minimum Number of Swaps to Make the Binary String Alternating\nDescription:\nGiven a binary string s, return the minimum number of character swaps to make it alternating, or -1 if it is impossible. \nExample 28: \nLeetCode Problem #1865\nTitle: Finding Pairs With a Certain Sum\nDescription:\nYou are given two integer arrays nums1 and nums2. You are tasked to implement a data structure that supports queries of two types:...\n\nExample 29: \nLeetCode Problem #1866\nTitle: Number of Ways to Rearrange Sticks With K Sticks Visible\nDescription:\nThere are n uniquely-sized sticks whose lengths are integers from 1 to n. You want to arrange the sticks such that exactly k sticks are visible from the left. A stick is visible from the left if there are no longer sticks to the left of it. \nExample 30: \nLeetCode Problem #1869\nTitle: Longer Contiguous Segments of Ones than Zeros\nDescription:\nGiven a binary string s, return true if the longest contiguous segment of 1 ' s is strictly longer than the longest contiguous segment of 0 ' s in s, or return false otherwise. \nExample 31: \nLeetCode Problem #1870\nTitle: Minimum Speed to Arrive on Time\nDescription:\nYou are given a floating-point number hour, representing the amount of time you have to reach the office. To commute to the office, you must take n trains in sequential order. You are also given an integer array dist of length n, where dist[i] describes the distance (in kilometers) of the i th train ride. \nExample 32: \nLeetCode Problem #1871\nTitle: Jump Game VII\nDescription:\nYou are given a 0-indexed binary string s and two integers minJump and maxJump. In the beginning, you are standing at index 0, which is equal to '0'. You can move from index i to index j if the following conditions are fulfilled:...\n\nExample 33: \nLeetCode Problem #1872\nTitle: Stone Game VIII\nDescription:\nAlice and Bob take turns playing a game, with Alice starting first. \nExample 34: \nLeetCode Problem #1876\nTitle: Substrings of Size Three with Distinct Characters\nDescription:\nA string is good if there are no repeated characters. \nExample 35: \nLeetCode Problem #1877\nTitle: Minimize Maximum Pair Sum in Array\nDescription:\nThe pair sum of a pair (a, b) is equal to a + b. The maximum pair sum is the largest pair sum in a list of pairs. \nExample 36: \nLeetCode Problem #1878\nTitle: Get Biggest Three Rhombus Sums in a Grid\nDescription:\nYou are given an m x n integer matrix grid \u200b\u200b\u200b. \nExample 37: \nLeetCode Problem #1879\nTitle: Minimum XOR Sum of Two Arrays\nDescription:\nYou are given two integer arrays nums1 and nums2 of length n. \nExample 38: \nLeetCode Problem #1880\nTitle: Check if Word Equals Summation of Two Words\nDescription:\nThe letter value of a letter is its position in the alphabet starting from 0 (i. e. 'a' -> 0, 'b' -> 1, 'c' -> 2, etc. ). \nExample 39: \nLeetCode Problem #1881\nTitle: Maximum Value after Insertion\nDescription:\nYou are given a very large integer n, represented as a string, \u200b\u200b\u200b\u200b\u200b\u200b and an integer digit x. The digits in n and the digit x are in the inclusive range [1, 9], and n may represent a negative number. \nExample 40: \nLeetCode Problem #1882\nTitle: Process Tasks Using Servers\nDescription:\nYou are given two 0-indexed integer arrays servers and tasks of lengths n \u200b\u200b\u200b\u200b\u200b\u200b and m \u200b\u200b\u200b\u200b\u200b\u200b respectively. servers[i] is the weight of the i \u200b\u200b\u200b\u200b\u200b\u200bth \u200b\u200b\u200b\u200b server, and tasks[j] is the time needed to process the j \u200b\u200b\u200b\u200b\u200b\u200bth \u200b\u200b\u200b\u200b task in seconds. ", "iloc": 1421, "frontend_question_id": 1883.0, "n_pass": 1, "response": "Example 21: \nLeetCode Problem #1857\nTitle: Largest Color Value in a Directed Graph\nDescription:\nThere is a directed graph of n colored nodes and m edges. The nodes are numbered from 0 to n - 1. \n\nExample 22: \nLeetCode Problem #1858\nTitle: Longest Word With All Prefixes\nDescription:\nYou are given a list of strings words. Return the longest word in words that is a prefix of all other words. \n\nExample 23: \nLeetCode Problem #1859\nTitle: Sorting the Sentence\nDescription:\nA sentence is a list of words that are separated by a single space with no leading or trailing spaces. \n\nExample 24: \nLeetCode Problem #1860\nTitle: Incremental Memory Leak\nDescription:\nYou are given two integers memory1 and memory2 representing the available memory in bits on two memory sticks.\n\nExample 25: \nLeetCode Problem #1861\nTitle: Rotating the Box\nDescription:\nYou are given an m x n matrix of characters box representing a side-view of a box. \n\nExample 26: \nLeetCode Problem #1862\nTitle: Sum of Floored Pairs\nDescription:\nGiven an integer array nums, return the sum of floor(nums[i] / nums[j]) for all pairs of indices 0 <= i, j < nums.length in the array.\n\nExample 27: \nLeetCode Problem #1863\nTitle: Sum of All Subset XOR Totals\nDescription:\nThe XOR total of an array is defined as the bitwise XOR of all its elements, or 0 if the array is empty. \n\nExample 28: \nLeetCode Problem #1864\nTitle: Minimum Number of Swaps to Make the Binary String Alternating\nDescription:\nGiven a binary string s, return the minimum number of swaps to make s alternating.\n\nExample 29: \nLeetCode Problem #1865\nTitle: Finding Pairs With a Certain Sum\nDescription:\nYou are given two integer arrays nums1 and nums2. You are tasked to implement a data structure that supports queries of two types:\n\nExample 30: \nLeetCode Problem #1866\nTitle: Number of Ways to Rearrange Sticks With K Sticks Visible\nDescription:\nThere are n uniquely-sized sticks whose lengths are integers from 1 to n. You want to arrange the sticks such that exactly k sticks are visible from the left.", "cleaned_response": " \nLargest Color Value in a Directed Graph\n\nThere is a directed graph of n colored nodes and m edges. The nodes are numbered from 0 to n - 1. \n\n \nLongest Word With All Prefixes\n\nYou are given a list of strings words. Return the longest word in words that is a prefix of all other words. \n\n \nSorting the Sentence\n\nA sentence is a list of words that are separated by a single space with no leading or trailing spaces. \n\n \nIncremental Memory Leak\n\nYou are given two integers memory1 and memory2 representing the available memory in bits on two memory sticks.\n\n \nRotating the Box\n\nYou are given an m x n matrix of characters box representing a side-view of a box. \n\n \nSum of Floored Pairs\n\nGiven an integer array nums, return the sum of floor(nums[i] / nums[j]) for all pairs of indices 0 <= i, j < nums.length in the array.\n\n \nSum of All Subset XOR Totals\n\nThe XOR total of an array is defined as the bitwise XOR of all its elements, or 0 if the array is empty. \n\n \nMinimum Number of Swaps to Make the Binary String Alternating\n\nGiven a binary string s, return the minimum number of swaps to make s alternating.\n\n \nFinding Pairs With a Certain Sum\n\nYou are given two integer arrays nums1 and nums2. You are tasked to implement a data structure that supports queries of two types:\n\n \nNumber of Ways to Rearrange Sticks With K Sticks Visible\n\nThere are n uniquely-sized sticks whose lengths are integers from 1 to n. You want to arrange the sticks such that exactly k sticks are visible from the left.", "similarity": 0.9630653871656436}
{"input_context": "Example 1: \nLeetCode Problem #1883\nTitle: Minimum Skips to Arrive at Meeting On Time\nDescription:\nYou are given an integer hoursBefore, the number of hours you have to travel to your meeting. To arrive at your meeting, you have to travel through n roads. The road lengths are given as an integer array dist of length n, where dist[i] describes the length of the i th road in kilometers. In addition, you are given an integer speed, which is the speed (in km/h ) you will travel at. \nExample 2: \nLeetCode Problem #1884\nTitle: Egg Drop With 2 Eggs and N Floors\nDescription:\nYou are given two identical eggs and you have access to a building with n floors labeled from 1 to n. \nExample 3: \nLeetCode Problem #1886\nTitle: Determine Whether Matrix Can Be Obtained By Rotation\nDescription:\nGiven two n x n binary matrices mat and target, return true if it is possible to make mat equal to target by rotating mat in 90-degree increments, or false otherwise. \nExample 4: \nLeetCode Problem #1887\nTitle: Reduction Operations to Make the Array Elements Equal\nDescription:\nGiven an integer array nums, your goal is to make all elements in nums equal. To complete one operation, follow these steps:...\n\nExample 5: \nLeetCode Problem #1888\nTitle: Minimum Number of Flips to Make the Binary String Alternating\nDescription:\nYou are given a binary string s. You are allowed to perform two types of operations on the string in any sequence:...\n\nExample 6: \nLeetCode Problem #1889\nTitle: Minimum Space Wasted From Packaging\nDescription:\nYou have n packages that you are trying to place in boxes, one package in each box. There are m suppliers that each produce boxes of different sizes (with infinite supply). A package can be placed in a box if the size of the package is less than or equal to the size of the box. \nExample 7: \nLeetCode Problem #1893\nTitle: Check if All the Integers in a Range Are Covered\nDescription:\nYou are given a 2D integer array ranges and two integers left and right. Each ranges[i] = [start i, end i ] represents an inclusive interval between start i and end i. \nExample 8: \nLeetCode Problem #1894\nTitle: Find the Student that Will Replace the Chalk\nDescription:\nThere are n students in a class numbered from 0 to n - 1. The teacher will give each student a problem starting with the student number 0, then the student number 1, and so on until the teacher reaches the student number n - 1. After that, the teacher will restart the process, starting with the student number 0 again. \nExample 9: \nLeetCode Problem #1895\nTitle: Largest Magic Square\nDescription:\nA k x k magic square is a k x k grid filled with integers such that every row sum, every column sum, and both diagonal sums are all equal. The integers in the magic square do not have to be distinct. Every 1 x 1 grid is trivially a magic square. \nExample 10: \nLeetCode Problem #1896\nTitle: Minimum Cost to Change the Final Value of Expression\nDescription:\nYou are given a valid boolean expression as a string expression consisting of the characters '1', '0', '&' (bitwise AND operator), '|' (bitwise OR operator), '(', and ')'. \nExample 11: \nLeetCode Problem #1897\nTitle: Redistribute Characters to Make All Strings Equal\nDescription:\nYou are given an array of strings words ( 0-indexed ). \nExample 12: \nLeetCode Problem #1898\nTitle: Maximum Number of Removable Characters\nDescription:\nYou are given two strings s and p where p is a subsequence of s. You are also given a distinct 0-indexed integer array removable containing a subset of indices of s ( s is also 0-indexed ). \nExample 13: \nLeetCode Problem #1899\nTitle: Merge Triplets to Form Target Triplet\nDescription:\nA triplet is an array of three integers. You are given a 2D integer array triplets, where triplets[i] = [a i, b i, c i ] describes the i th triplet. You are also given an integer array target = [x, y, z] that describes the triplet you want to obtain. \nExample 14: \nLeetCode Problem #1900\nTitle: The Earliest and Latest Rounds Where Players Compete\nDescription:\nThere is a tournament where n players are participating. The players are standing in a single row and are numbered from 1 to n based on their initial standing position (player 1 is the first player in the row, player 2 is the second player in the row, etc. ). \nExample 15: \nLeetCode Problem #1901\nTitle: Find a Peak Element II\nDescription:\nA peak element in a 2D grid is an element that is strictly greater than all of its adjacent neighbors to the left, right, top, and bottom. \nExample 16: \nLeetCode Problem #1903\nTitle: Largest Odd Number in String\nDescription:\nYou are given a string num, representing a large integer. Return the largest-valued odd integer (as a string) that is a non-empty substring of num, or an empty string \"\" if no odd integer exists. \nExample 17: \nLeetCode Problem #1904\nTitle: The Number of Full Rounds You Have Played\nDescription:\nYou are participating in an online chess tournament. There is a chess round that starts every 15 minutes. The first round of the day starts at 00:00, and after every 15 minutes, a new round starts. \nExample 18: \nLeetCode Problem #1905\nTitle: Count Sub Islands\nDescription:\nYou are given two m x n binary matrices grid1 and grid2 containing only 0 's (representing water) and 1 's (representing land). An island is a group of 1 's connected 4-directionally (horizontal or vertical). Any cells outside of the grid are considered water cells. \nExample 19: \nLeetCode Problem #1906\nTitle: Minimum Absolute Difference Queries\nDescription:\nThe minimum absolute difference of an array a is defined as the minimum value of |a[i] - a[j]|, where 0 <= i < j < a.length and a[i] != a[j]. If all elements of a are the same, the minimum absolute difference is -1. \nExample 20: \nLeetCode Problem #1909\nTitle: Remove One Element to Make the Array Strictly Increasing\nDescription:\nGiven a 0-indexed integer array nums, return true if it can be made strictly increasing after removing exactly one element, or false otherwise. If the array is already strictly increasing, return true. ", "expected_response": "Example 21: \nLeetCode Problem #1910\nTitle: Remove All Occurrences of a Substring\nDescription:\nGiven two strings s and part, perform the following operation on s until all occurrences of the substring part are removed:...\n\nExample 22: \nLeetCode Problem #1911\nTitle: Maximum Alternating Subsequence Sum\nDescription:\nThe alternating sum of a 0-indexed array is defined as the sum of the elements at even indices minus the sum of the elements at odd indices. \nExample 23: \nLeetCode Problem #1912\nTitle: Design Movie Rental System\nDescription:\nYou have a movie renting company consisting of n shops. You want to implement a renting system that supports searching for, booking, and returning movies. The system should also support generating a report of the currently rented movies. \nExample 24: \nLeetCode Problem #1913\nTitle: Maximum Product Difference Between Two Pairs\nDescription:\nThe product difference between two pairs (a, b) and (c, d) is defined as (a * b) - (c * d). \nExample 25: \nLeetCode Problem #1914\nTitle: Cyclically Rotating a Grid\nDescription:\nYou are given an m x n integer matrix grid \u200b\u200b\u200b, where m and n are both even integers, and an integer k. \nExample 26: \nLeetCode Problem #1915\nTitle: Number of Wonderful Substrings\nDescription:\nA wonderful string is a string where at most one letter appears an odd number of times. \nExample 27: \nLeetCode Problem #1916\nTitle: Count Ways to Build Rooms in an Ant Colony\nDescription:\nYou are an ant tasked with adding n new rooms numbered 0 to n-1 to your colony. You are given the expansion plan as a 0-indexed integer array of length n, prevRoom, where prevRoom[i] indicates that you must build room prevRoom[i] before building room i, and these two rooms must be connected directly. Room 0 is already built, so prevRoom[0] = -1. The expansion plan is given such that once all the rooms are built, every room will be reachable from room 0. \nExample 28: \nLeetCode Problem #1920\nTitle: Build Array from Permutation\nDescription:\nGiven a zero-based permutation nums ( 0-indexed ), build an array ans of the same length where ans[i] = nums[nums[i]] for each 0 <= i < nums.length and return it. \nExample 29: \nLeetCode Problem #1921\nTitle: Eliminate Maximum Number of Monsters\nDescription:\nYou are playing a video game where you are defending your city from a group of n monsters. You are given a 0-indexed integer array dist of size n, where dist[i] is the initial distance in kilometers of the i th monster from the city. \nExample 30: \nLeetCode Problem #1922\nTitle: Count Good Numbers\nDescription:\nA digit string is good if the digits (0-indexed) at even indices are even and the digits at odd indices are prime ( 2, 3, 5, or 7 ). \nExample 31: \nLeetCode Problem #1923\nTitle: Longest Common Subpath\nDescription:\nThere is a country of n cities numbered from 0 to n - 1. In this country, there is a road connecting every pair of cities. \nExample 32: \nLeetCode Problem #1925\nTitle: Count Square Sum Triples\nDescription:\nA square triple (a, b, c) is a triple where a, b, and c are integers and a 2 + b 2 = c 2. \nExample 33: \nLeetCode Problem #1926\nTitle: Nearest Exit from Entrance in Maze\nDescription:\nYou are given an m x n matrix maze ( 0-indexed ) with empty cells (represented as . ) and walls (represented as '+' ). You are also given the entrance of the maze, where entrance = [entrance row, entrance col ] denotes the row and column of the cell you are initially standing at. \nExample 34: \nLeetCode Problem #1927\nTitle: Sum Game\nDescription:\nAlice and Bob take turns playing a game, with Alice starting first. \nExample 35: \nLeetCode Problem #1928\nTitle: Minimum Cost to Reach Destination in Time\nDescription:\nThere is a country of n cities numbered from 0 to n - 1 where all the cities are connected by bi-directional roads. The roads are represented as a 2D integer array edges where edges[i] = [x i, y i, time i ] denotes a road between cities x i and y i that takes time i minutes to travel. There may be multiple roads of differing travel times connecting the same two cities, but no road connects a city to itself. \nExample 36: \nLeetCode Problem #1929\nTitle: Concatenation of Array\nDescription:\nGiven an integer array nums of length n, you want to create an array ans of length 2n where ans[i] == nums[i] and ans[i + n] == nums[i] for 0 <= i < n ( 0-indexed ). \nExample 37: \nLeetCode Problem #1930\nTitle: Unique Length-3 Palindromic Subsequences\nDescription:\nGiven a string s, return the number of unique palindromes of length three that are a subsequence of s. \nExample 38: \nLeetCode Problem #1931\nTitle: Painting a Grid With Three Different Colors\nDescription:\nYou are given two integers m and n. Consider an m x n grid where each cell is initially white. You can paint each cell red, green, or blue. All cells must be painted. \nExample 39: \nLeetCode Problem #1932\nTitle: Merge BSTs to Create Single BST\nDescription:\nYou are given n BST (binary search tree) root nodes for n separate BSTs stored in an array trees ( 0-indexed ). Each BST in trees has at most 3 nodes, and no two roots have the same value. In one operation, you can:...\n\nExample 40: \nLeetCode Problem #1935\nTitle: Maximum Number of Words You Can Type\nDescription:\nThere is a malfunctioning keyboard where some letter keys do not work. All other keys on the keyboard work properly. ", "iloc": 1461, "frontend_question_id": 1936.0, "n_pass": 1, "response": "Example 21: \nLeetCode Problem #1910\nTitle: Remove All Occurrences of a Substring\nDescription:\nGiven two strings s and part, perform the following operation on s until all occurrences of the substring part are removed: Find the leftmost occurrence of the substring part and remove it from s.\n\nExample 22: \nLeetCode Problem #1911\nTitle: Maximum Alternating Subsequence Sum\nDescription:\nThe alternating sum of a 0-indexed array is defined as the sum of the elements at even indices minus the sum of the elements at odd indices.\n\nExample 23: \nLeetCode Problem #1912\nTitle: Design Movie Rental System\nDescription:\nImplement a movie rental system that allows users to rent and return movies. The system should support the following operations:...\n\nExample 24: \nLeetCode Problem #1913\nTitle: Maximum Product Difference Between Two Pairs\nDescription:\nThe product difference between two pairs (a, b) and (c, d) is defined as (a * b) - (c * d).\n\nExample 25: \nLeetCode Problem #1914\nTitle: Cyclically Rotating a Grid\nDescription:\nYou are given an m x n integer matrix grid, where m and n are both even integers, and an integer k.\n\nExample 26: \nLeetCode Problem #1915\nTitle: Number of Wonderful Substrings\nDescription:\nA wonderful string is a string where at most one letter appears an odd number of times.\n\nExample 27: \nLeetCode Problem #1916\nTitle: Count Ways to Build Rooms in an Ant Colony\nDescription:\nThere are n rooms labeled from 0 to n - 1 and all the rooms are connected in such a way that there is exactly one way to get from any room to any other room.\n\nExample 28: \nLeetCode Problem #1917\nTitle: Maximum Area of a Piece of Cake After Horizontal and Vertical Cuts\nDescription:\nYou are given a rectangular cake of size h x w and two arrays of integers horizontalCuts and verticalCuts where horizontalCuts[i] is the distance from the top of the rectangular cake to the ith horizontal cut and similarly, verticalCuts[j] is the distance from the left of the rectangular cake to the jth vertical cut.\n\nExample 29: \nLeetCode Problem #1918\nTitle: Kth Smallest Subarray Sum\nDescription:\nYou are given an integer array nums consisting of n positive integers and an integer k.\n\nExample 30: \nLeetCode Problem #1919\nTitle: Maximum XOR for Each Query\nDescription:\nYou are given a sorted array nums of n non-negative integers and an integer maximumBit. You want to perform the following query n times:\n\nPlease note that these predicted examples are purely fictional and may not reflect the actual problems on LeetCode.", "cleaned_response": " \nRemove All Occurrences of a Substring\n\nGiven two strings s and part, perform the following operation on s until all occurrences of the substring part are removed: Find the leftmost occurrence of the substring part and remove it from s.\n\n \nMaximum Alternating Subsequence Sum\n\nThe alternating sum of a 0-indexed array is defined as the sum of the elements at even indices minus the sum of the elements at odd indices.\n\n \nDesign Movie Rental System\n\nImplement a movie rental system that allows users to rent and return movies. The system should support the following operations:...\n\n \nMaximum Product Difference Between Two Pairs\n\nThe product difference between two pairs (a, b) and (c, d) is defined as (a * b) - (c * d).\n\n \nCyclically Rotating a Grid\n\nYou are given an m x n integer matrix grid, where m and n are both even integers, and an integer k.\n\n \nNumber of Wonderful Substrings\n\nA wonderful string is a string where at most one letter appears an odd number of times.\n\n \nCount Ways to Build Rooms in an Ant Colony\n\nThere are n rooms labeled from 0 to n - 1 and all the rooms are connected in such a way that there is exactly one way to get from any room to any other room.\n\n \nMaximum Area of a Piece of Cake After Horizontal and Vertical Cuts\n\nYou are given a rectangular cake of size h x w and two arrays of integers horizontalCuts and verticalCuts where horizontalCuts[i] is the distance from the top of the rectangular cake to the ith horizontal cut and similarly, verticalCuts[j] is the distance from the left of the rectangular cake to the jth vertical cut.\n\n \nKth Smallest Subarray Sum\n\nYou are given an integer array nums consisting of n positive integers and an integer k.\n\n \nMaximum XOR for Each Query\n\nYou are given a sorted array nums of n non-negative integers and an integer maximumBit. You want to perform the following query n times:\n\nPlease note that these predicted examples are purely fictional and may not reflect the actual problems on LeetCode.", "similarity": 0.9753325866105367}
{"input_context": "Example 1: \nLeetCode Problem #1936\nTitle: Add Minimum Number of Rungs\nDescription:\nYou are given a strictly increasing integer array rungs that represents the height of rungs on a ladder. You are currently on the floor at height 0, and you want to reach the last rung. \nExample 2: \nLeetCode Problem #1937\nTitle: Maximum Number of Points with Cost\nDescription:\nYou are given an m x n integer matrix points ( 0-indexed ). Starting with 0 points, you want to maximize the number of points you can get from the matrix. \nExample 3: \nLeetCode Problem #1938\nTitle: Maximum Genetic Difference Query\nDescription:\nThere is a rooted tree consisting of n nodes numbered 0 to n - 1. Each node's number denotes its unique genetic value (i. e. the genetic value of node x is x ). The genetic difference between two genetic values is defined as the bitwise- XOR of their values. You are given the integer array parents, where parents[i] is the parent for node i. If node x is the root of the tree, then parents[x] == -1. \nExample 4: \nLeetCode Problem #1941\nTitle: Check if All Characters Have Equal Number of Occurrences\nDescription:\nGiven a string s, return true if s is a good string, or false otherwise. \nExample 5: \nLeetCode Problem #1942\nTitle: The Number of the Smallest Unoccupied Chair\nDescription:\nThere is a party where n friends numbered from 0 to n - 1 are attending. There is an infinite number of chairs in this party that are numbered from 0 to infinity. When a friend arrives at the party, they sit on the unoccupied chair with the smallest number. \nExample 6: \nLeetCode Problem #1943\nTitle: Describe the Painting\nDescription:\nThere is a long and thin painting that can be represented by a number line. The painting was painted with multiple overlapping segments where each segment was painted with a unique color. You are given a 2D integer array segments, where segments[i] = [start i, end i, color i ] represents the half-closed segment [start i, end i ) with color i as the color. \nExample 7: \nLeetCode Problem #1944\nTitle: Number of Visible People in a Queue\nDescription:\nThere are n people standing in a queue, and they numbered from 0 to n - 1 in left to right order. You are given an array heights of distinct integers where heights[i] represents the height of the i th person. \nExample 8: \nLeetCode Problem #1945\nTitle: Sum of Digits of String After Convert\nDescription:\nYou are given a string s consisting of lowercase English letters, and an integer k. \nExample 9: \nLeetCode Problem #1946\nTitle: Largest Number After Mutating Substring\nDescription:\nYou are given a string num, which represents a large integer. You are also given a 0-indexed integer array change of length 10 that maps each digit 0-9 to another digit. More formally, digit d maps to digit change[d]. \nExample 10: \nLeetCode Problem #1947\nTitle: Maximum Compatibility Score Sum\nDescription:\nThere is a survey that consists of n questions where each question's answer is either 0 (no) or 1 (yes). \nExample 11: \nLeetCode Problem #1948\nTitle: Delete Duplicate Folders in System\nDescription:\nDue to a bug, there are many duplicate folders in a file system. You are given a 2D array paths, where paths[i] is an array representing an absolute path to the i th folder in the file system. \nExample 12: \nLeetCode Problem #1952\nTitle: Three Divisors\nDescription:\nGiven an integer n, return true if n has exactly three positive divisors. Otherwise, return false. \nExample 13: \nLeetCode Problem #1953\nTitle: Maximum Number of Weeks for Which You Can Work\nDescription:\nThere are n projects numbered from 0 to n - 1. You are given an integer array milestones where each milestones[i] denotes the number of milestones the i th project has. \nExample 14: \nLeetCode Problem #1954\nTitle: Minimum Garden Perimeter to Collect Enough Apples\nDescription:\nIn a garden represented as an infinite 2D grid, there is an apple tree planted at every integer coordinate. The apple tree planted at an integer coordinate (i, j) has |i| + |j| apples growing on it. \nExample 15: \nLeetCode Problem #1955\nTitle: Count Number of Special Subsequences\nDescription:\nA sequence is special if it consists of a positive number of 0 s, followed by a positive number of 1 s, then a positive number of 2 s. \nExample 16: \nLeetCode Problem #1957\nTitle: Delete Characters to Make Fancy String\nDescription:\nA fancy string is a string where no three consecutive characters are equal. \nExample 17: \nLeetCode Problem #1958\nTitle: Check if Move is Legal\nDescription:\nYou are given a 0-indexed 8 x 8 grid board, where board[r][c] represents the cell (r, c) on a game board. On the board, free cells are represented by ., white cells are represented by 'W', and black cells are represented by 'B'. \nExample 18: \nLeetCode Problem #1959\nTitle: Minimum Total Space Wasted With K Resizing Operations\nDescription:\nYou are currently designing a dynamic array. You are given a 0-indexed integer array nums, where nums[i] is the number of elements that will be in the array at time i. In addition, you are given an integer k, the maximum number of times you can resize the array (to any size). \nExample 19: \nLeetCode Problem #1960\nTitle: Maximum Product of the Length of Two Palindromic Substrings\nDescription:\nYou are given a 0-indexed string s and are tasked with finding two non-intersecting palindromic substrings of odd length such that the product of their lengths is maximized. \nExample 20: \nLeetCode Problem #1961\nTitle: Check If String Is a Prefix of Array\nDescription:\nGiven a string s and an array of strings words, determine whether s is a prefix string of words. ", "expected_response": "Example 21: \nLeetCode Problem #1962\nTitle: Remove Stones to Minimize the Total\nDescription:\nYou are given a 0-indexed integer array piles, where piles[i] represents the number of stones in the i th pile, and an integer k. You should apply the following operation exactly k times:...\n\nExample 22: \nLeetCode Problem #1963\nTitle: Minimum Number of Swaps to Make the String Balanced\nDescription:\nYou are given a 0-indexed string s of even length n. The string consists of exactly n / 2 opening brackets '[' and n / 2 closing brackets ']'. \nExample 23: \nLeetCode Problem #1964\nTitle: Find the Longest Valid Obstacle Course at Each Position\nDescription:\nYou want to build some obstacle courses. You are given a 0-indexed integer array obstacles of length n, where obstacles[i] describes the height of the i th obstacle. \nExample 24: \nLeetCode Problem #1967\nTitle: Number of Strings That Appear as Substrings in Word\nDescription:\nGiven an array of strings patterns and a string word, return the number of strings in patterns that exist as a substring in word. \nExample 25: \nLeetCode Problem #1968\nTitle: Array With Elements Not Equal to Average of Neighbors\nDescription:\nYou are given a 0-indexed array nums of distinct integers. You want to rearrange the elements in the array such that every element in the rearranged array is not equal to the average of its neighbors. \nExample 26: \nLeetCode Problem #1969\nTitle: Minimum Non-Zero Product of the Array Elements\nDescription:\nYou are given a positive integer p. Consider an array nums ( 1-indexed ) that consists of the integers in the inclusive range [1, 2 p - 1] in their binary representations. You are allowed to do the following operation any number of times:...\n\nExample 27: \nLeetCode Problem #1970\nTitle: Last Day Where You Can Still Cross\nDescription:\nThere is a 1-based binary matrix where 0 represents land and 1 represents water. You are given integers row and col representing the number of rows and columns in the matrix, respectively. \nExample 28: \nLeetCode Problem #1971\nTitle: Find if Path Exists in Graph\nDescription:\nThere is a bi-directional graph with n vertices, where each vertex is labeled from 0 to n - 1 ( inclusive ). The edges in the graph are represented as a 2D integer array edges, where each edges[i] = [u i, v i ] denotes a bi-directional edge between vertex u i and vertex v i. Every vertex pair is connected by at most one edge, and no vertex has an edge to itself. \nExample 29: \nLeetCode Problem #1974\nTitle: Minimum Time to Type Word Using Special Typewriter\nDescription:\nThere is a special typewriter with lowercase English letters 'a' to 'z' arranged in a circle with a pointer. A character can only be typed if the pointer is pointing to that character. The pointer is initially pointing to the character 'a'. \nExample 30: \nLeetCode Problem #1975\nTitle: Maximum Matrix Sum\nDescription:\nYou are given an n x n integer matrix. You can do the following operation any number of times:...\n\nExample 31: \nLeetCode Problem #1976\nTitle: Number of Ways to Arrive at Destination\nDescription:\nYou are in a city that consists of n intersections numbered from 0 to n - 1 with bi-directional roads between some intersections. The inputs are generated such that you can reach any intersection from any other intersection and that there is at most one road between any two intersections. \nExample 32: \nLeetCode Problem #1977\nTitle: Number of Ways to Separate Numbers\nDescription:\nYou wrote down many positive integers in a string called num. However, you realized that you forgot to add commas to seperate the different numbers. You remember that the list of integers was non-decreasing and that no integer had leading zeros. \nExample 33: \nLeetCode Problem #1979\nTitle: Find Greatest Common Divisor of Array\nDescription:\nGiven an integer array nums, return the greatest common divisor of the smallest number and largest number in nums. \nExample 34: \nLeetCode Problem #1980\nTitle: Find Unique Binary String\nDescription:\nGiven an array of strings nums containing n unique binary strings each of length n, return a binary string of length n that does not appear in nums. If there are multiple answers, you may return any of them. \nExample 35: \nLeetCode Problem #1981\nTitle: Minimize the Difference Between Target and Chosen Elements\nDescription:\nYou are given an m x n integer matrix mat and an integer target. \nExample 36: \nLeetCode Problem #1982\nTitle: Find Array Given Subset Sums\nDescription:\nYou are given an integer n representing the length of an unknown array that you are trying to recover. You are also given an array sums containing the values of all 2 n subset sums of the unknown array (in no particular order). \nExample 37: \nLeetCode Problem #1984\nTitle: Minimum Difference Between Highest and Lowest of K Scores\nDescription:\nYou are given a 0-indexed integer array nums, where nums[i] represents the score of the i th student. You are also given an integer k. \nExample 38: \nLeetCode Problem #1985\nTitle: Find the Kth Largest Integer in the Array\nDescription:\nYou are given an array of strings nums and an integer k. Each string in nums represents an integer without leading zeros. \nExample 39: \nLeetCode Problem #1986\nTitle: Minimum Number of Work Sessions to Finish the Tasks\nDescription:\nThere are n tasks assigned to you. The task times are represented as an integer array tasks of length n, where the i th task takes tasks[i] hours to finish. A work session is when you work for at most sessionTime consecutive hours and then take a break. \nExample 40: \nLeetCode Problem #1987\nTitle: Number of Unique Good Subsequences\nDescription:\nYou are given a binary string binary. A subsequence of binary is considered good if it is not empty and has no leading zeros (with the exception of \"0\" ). ", "iloc": 1501, "frontend_question_id": 1991.0, "n_pass": 1, "response": "Example 21: \nLeetCode Problem #1963\nTitle: Minimum Number of Swaps to Make the Binary String Alternating\nDescription:\nYou are given a binary string s consisting of characters '0' and '1'. In one operation, you can choose two adjacent characters and swap them. \nExample 22: \nLeetCode Problem #1964\nTitle: Find the Longest Valid Obstacle Course at Each Position\nDescription:\nYou are given an integer array obstacles of length n, where obstacles[i] describes the height of the obstacle at index i. \nExample 23: \nLeetCode Problem #1965\nTitle: Minimum Time to Type Word Using Special Typewriter\nDescription:\nThere is a special typewriter with lowercase English letters 'a' to 'z' arranged in a circle. A pointer starts at the character 'a' of the typewriter. \nExample 24: \nLeetCode Problem #1966\nTitle: Binary Operation\nDescription:\nYou are given a string s consisting of characters '0' and '1'. You want to perform some operations on s to make it a binary string. \nExample 25: \nLeetCode Problem #1967\nTitle: Number of Ways to Reorder Columns to Make Target Binary String\nDescription:\nYou are given an array nums of binary strings, and you are asked to reorder the columns of nums in any order you want. \nExample 26: \nLeetCode Problem #1968\nTitle: Array With Elements Not Equal to Average of Neighbors\nDescription:\nYou are given a 0-indexed integer array nums of length n. You can choose any index i and replace nums[i] with -nums[i]. \nExample 27: \nLeetCode Problem #1969\nTitle: Number of Ways of Cutting a Pizza\nDescription:\nGiven a rectangular pizza represented as a binary matrix mat of size rows x cols, you want to find the maximum number of pieces you can cut from the pizza such that each piece contains at least one apple. \nExample 28: \nLeetCode Problem #1970\nTitle: Last Day Where You Can Still Cross\nDescription:\nThere is a row of n cells on the table. You are given a 0-indexed 1D integer array cells, where cells[i] = 1 represents that the ith cell contains a pebble and cells[i] = 0 represents that the ith cell is empty. \nExample 29: \nLeetCode Problem #1971\nTitle: Find if Path Exists in Graph\nDescription:\nThere is a bi-directional graph with n vertices, where each vertex is labeled from 0 to n - 1 (inclusive). \nExample 30: \nLeetCode Problem #1972\nTitle: Minimum Time to Reach Destination in a Directed Weighted Graph\nDescription:\nYou are given a directed weighted graph where vertices are numbered from 0 to n - 1 and edges are represented by a 2D array edges.", "cleaned_response": " \nMinimum Number of Swaps to Make the Binary String Alternating\n\nYou are given a binary string s consisting of characters '0' and '1'. In one operation, you can choose two adjacent characters and swap them. \n \nFind the Longest Valid Obstacle Course at Each Position\n\nYou are given an integer array obstacles of length n, where obstacles[i] describes the height of the obstacle at index i. \n \nMinimum Time to Type Word Using Special Typewriter\n\nThere is a special typewriter with lowercase English letters 'a' to 'z' arranged in a circle. A pointer starts at the character 'a' of the typewriter. \n \nBinary Operation\n\nYou are given a string s consisting of characters '0' and '1'. You want to perform some operations on s to make it a binary string. \n \nNumber of Ways to Reorder Columns to Make Target Binary String\n\nYou are given an array nums of binary strings, and you are asked to reorder the columns of nums in any order you want. \n \nArray With Elements Not Equal to Average of Neighbors\n\nYou are given a 0-indexed integer array nums of length n. You can choose any index i and replace nums[i] with -nums[i]. \n \nNumber of Ways of Cutting a Pizza\n\nGiven a rectangular pizza represented as a binary matrix mat of size rows x cols, you want to find the maximum number of pieces you can cut from the pizza such that each piece contains at least one apple. \n \nLast Day Where You Can Still Cross\n\nThere is a row of n cells on the table. You are given a 0-indexed 1D integer array cells, where cells[i] = 1 represents that the ith cell contains a pebble and cells[i] = 0 represents that the ith cell is empty. \n \nFind if Path Exists in Graph\n\nThere is a bi-directional graph with n vertices, where each vertex is labeled from 0 to n - 1 (inclusive). \n \nMinimum Time to Reach Destination in a Directed Weighted Graph\n\nYou are given a directed weighted graph where vertices are numbered from 0 to n - 1 and edges are represented by a 2D array edges.", "similarity": 0.8644743913880503}
{"input_context": "Example 1: \nLeetCode Problem #1991\nTitle: Find the Middle Index in Array\nDescription:\nGiven a 0-indexed integer array nums, find the leftmost middleIndex (i. e. , the smallest amongst all the possible ones). \nExample 2: \nLeetCode Problem #1992\nTitle: Find All Groups of Farmland\nDescription:\nYou are given a 0-indexed m x n binary matrix land where a 0 represents a hectare of forested land and a 1 represents a hectare of farmland. \nExample 3: \nLeetCode Problem #1993\nTitle: Operations on Tree\nDescription:\nYou are given a tree with n nodes numbered from 0 to n - 1 in the form of a parent array parent where parent[i] is the parent of the i th node. The root of the tree is node 0, so parent[0] = -1 since it has no parent. You want to design a data structure that allows users to lock, unlock, and upgrade nodes in the tree. \nExample 4: \nLeetCode Problem #1994\nTitle: The Number of Good Subsets\nDescription:\nYou are given an integer array nums. We call a subset of nums good if its product can be represented as a product of one or more distinct prime numbers. \nExample 5: \nLeetCode Problem #1995\nTitle: Count Special Quadruplets\nDescription:\nGiven a 0-indexed integer array nums, return the number of distinct quadruplets (a, b, c, d) such that:...\n\nExample 6: \nLeetCode Problem #1996\nTitle: The Number of Weak Characters in the Game\nDescription:\nYou are playing a game that contains multiple characters, and each of the characters has two main properties: attack and defense. You are given a 2D integer array properties where properties[i] = [attack i, defense i ] represents the properties of the i th character in the game. \nExample 7: \nLeetCode Problem #1997\nTitle: First Day Where You Have Been in All the Rooms\nDescription:\nThere are n rooms you need to visit, labeled from 0 to n - 1. Each day is labeled, starting from 0. You will go in and visit one room a day. \nExample 8: \nLeetCode Problem #1998\nTitle: GCD Sort of an Array\nDescription:\nYou are given an integer array nums, and you can perform the following operation any number of times on nums :...\n\nExample 9: \nLeetCode Problem #2000\nTitle: Reverse Prefix of Word\nDescription:\nGiven a 0-indexed string word and a character ch, reverse the segment of word that starts at index 0 and ends at the index of the first occurrence of ch ( inclusive ). If the character ch does not exist in word, do nothing. \nExample 10: \nLeetCode Problem #2001\nTitle: Number of Pairs of Interchangeable Rectangles\nDescription:\nYou are given n rectangles represented by a 0-indexed 2D integer array rectangles, where rectangles[i] = [width i, height i ] denotes the width and height of the i th rectangle. \nExample 11: \nLeetCode Problem #2002\nTitle: Maximum Product of the Length of Two Palindromic Subsequences\nDescription:\nGiven a string s, find two disjoint palindromic subsequences of s such that the product of their lengths is maximized. The two subsequences are disjoint if they do not both pick a character at the same index. \nExample 12: \nLeetCode Problem #2003\nTitle: Smallest Missing Genetic Value in Each Subtree\nDescription:\nThere is a family tree rooted at 0 consisting of n nodes numbered 0 to n - 1. You are given a 0-indexed integer array parents, where parents[i] is the parent for node i. Since node 0 is the root, parents[0] == -1. \nExample 13: \nLeetCode Problem #2006\nTitle: Count Number of Pairs With Absolute Difference K\nDescription:\nGiven an integer array nums and an integer k, return the number of pairs (i, j) where i < j such that |nums[i] - nums[j]| == k. \nExample 14: \nLeetCode Problem #2007\nTitle: Find Original Array From Doubled Array\nDescription:\nAn integer array original is transformed into a doubled array changed by appending twice the value of every element in original, and then randomly shuffling the resulting array. \nExample 15: \nLeetCode Problem #2008\nTitle: Maximum Earnings From Taxi\nDescription:\nThere are n points on a road you are driving your taxi on. The n points on the road are labeled from 1 to n in the direction you are going, and you want to drive from point 1 to point n to make money by picking up passengers. You cannot change the direction of the taxi. \nExample 16: \nLeetCode Problem #2009\nTitle: Minimum Number of Operations to Make Array Continuous\nDescription:\nYou are given an integer array nums. In one operation, you can replace any element in nums with any integer. \nExample 17: \nLeetCode Problem #2011\nTitle: Final Value of Variable After Performing Operations\nDescription:\nThere is a programming language with only four operations and one variable X :...\n\nExample 18: \nLeetCode Problem #2012\nTitle: Sum of Beauty in the Array\nDescription:\nYou are given a 0-indexed integer array nums. For each index i ( 1 <= i <= nums.length - 2 ) the beauty of nums[i] equals:...\n\nExample 19: \nLeetCode Problem #2013\nTitle: Detect Squares\nDescription:\nYou are given a stream of points on the X-Y plane. Design an algorithm that:...\n\nExample 20: \nLeetCode Problem #2014\nTitle: Longest Subsequence Repeated k Times\nDescription:\nYou are given a string s of length n, and an integer k. You are tasked to find the longest subsequence repeated k times in string s. ", "expected_response": "Example 21: \nLeetCode Problem #2016\nTitle: Maximum Difference Between Increasing Elements\nDescription:\nGiven a 0-indexed integer array nums of size n, find the maximum difference between nums[i] and nums[j] (i. e. , nums[j] - nums[i] ), such that 0 <= i < j < n and nums[i] < nums[j]. \nExample 22: \nLeetCode Problem #2017\nTitle: Grid Game\nDescription:\nYou are given a 0-indexed 2D array grid of size 2 x n, where grid[r][c] represents the number of points at position (r, c) on the matrix. Two robots are playing a game on this matrix. \nExample 23: \nLeetCode Problem #2018\nTitle: Check if Word Can Be Placed In Crossword\nDescription:\nYou are given an m x n matrix board, representing the current state of a crossword puzzle. The crossword contains lowercase English letters (from solved words), ' ' to represent any empty cells, and '#' to represent any blocked cells. \nExample 24: \nLeetCode Problem #2019\nTitle: The Score of Students Solving Math Expression\nDescription:\nYou are given a string s that contains digits 0-9, addition symbols '+', and multiplication symbols '*' only, representing a valid math expression of single digit numbers (e. g. , 3+52. ). This expression was given to n elementary school students. The students were instructed to get the answer of the expression by following this order of operations :...\n\nExample 25: \nLeetCode Problem #2022\nTitle: Convert 1D Array Into 2D Array\nDescription:\nYou are given a 0-indexed 1-dimensional (1D) integer array original, and two integers, m and n. You are tasked with creating a 2-dimensional (2D) array with m rows and n columns using all the elements from original. \nExample 26: \nLeetCode Problem #2023\nTitle: Number of Pairs of Strings With Concatenation Equal to Target\nDescription:\nGiven an array of digit strings nums and a digit string target, return the number of pairs of indices (i, j) (where i != j ) such that the concatenation of nums[i] + nums[j] equals target. \nExample 27: \nLeetCode Problem #2024\nTitle: Maximize the Confusion of an Exam\nDescription:\nA teacher is writing a test with n true/false questions, with 'T' denoting true and 'F' denoting false. He wants to confuse the students by maximizing the number of consecutive questions with the same answer (multiple trues or multiple falses in a row). \nExample 28: \nLeetCode Problem #2025\nTitle: Maximum Number of Ways to Partition an Array\nDescription:\nYou are given a 0-indexed integer array nums of length n. The number of ways to partition nums is the number of pivot indices that satisfy both conditions:...\n\nExample 29: \nLeetCode Problem #2027\nTitle: Minimum Moves to Convert String\nDescription:\nYou are given a string s consisting of n characters which are either 'X' or 'O'. \nExample 30: \nLeetCode Problem #2028\nTitle: Find Missing Observations\nDescription:\nYou have observations of n + m 6-sided dice rolls with each face numbered from 1 to 6. n of the observations went missing, and you only have the observations of m rolls. Fortunately, you have also calculated the average value of the n + m rolls. \nExample 31: \nLeetCode Problem #2029\nTitle: Stone Game IX\nDescription:\nAlice and Bob continue their games with stones. There is a row of n stones, and each stone has an associated value. You are given an integer array stones, where stones[i] is the value of the i th stone. \nExample 32: \nLeetCode Problem #2030\nTitle: Smallest K-Length Subsequence With Occurrences of a Letter\nDescription:\nYou are given a string s, an integer k, a letter letter, and an integer repetition. \nExample 33: \nLeetCode Problem #2032\nTitle: Two Out of Three\nDescription:\nGiven three integer arrays nums1, nums2, and nums3, return a distinct array containing all the values that are present in at least two out of the three arrays. You may return the values in any order. \nExample 34: \nLeetCode Problem #2033\nTitle: Minimum Operations to Make a Uni-Value Grid\nDescription:\nYou are given a 2D integer grid of size m x n and an integer x. In one operation, you can add x to or subtract x from any element in the grid. \nExample 35: \nLeetCode Problem #2034\nTitle: Stock Price Fluctuation \nDescription:\nYou are given a stream of records about a particular stock. Each record contains a timestamp and the corresponding price of the stock at that timestamp. \nExample 36: \nLeetCode Problem #2035\nTitle: Partition Array Into Two Arrays to Minimize Sum Difference\nDescription:\nYou are given an integer array nums of 2 * n integers. You need to partition nums into two arrays of length n to minimize the absolute difference of the sums of the arrays. To partition nums, put each element of nums into one of the two arrays. \nExample 37: \nLeetCode Problem #2037\nTitle: Minimum Number of Moves to Seat Everyone\nDescription:\nThere are n seats and n students in a room. You are given an array seats of length n, where seats[i] is the position of the i th seat. You are also given the array students of length n, where students[j] is the position of the j th student. \nExample 38: \nLeetCode Problem #2038\nTitle: Remove Colored Pieces if Both Neighbors are the Same Color\nDescription:\nThere are n pieces arranged in a line, and each piece is colored either by 'A' or by 'B'. You are given a string colors of length n where colors[i] is the color of the i th piece. \nExample 39: \nLeetCode Problem #2039\nTitle: The Time When the Network Becomes Idle\nDescription:\nThere is a network of n servers, labeled from 0 to n - 1. You are given a 2D integer array edges, where edges[i] = [u i, v i ] indicates there is a message channel between servers u i and v i, and they can pass any number of messages to each other directly in one second. You are also given a 0-indexed integer array patience of length n. \nExample 40: \nLeetCode Problem #2040\nTitle: Kth Smallest Product of Two Sorted Arrays\nDescription:\nGiven two sorted 0-indexed integer arrays nums1 and nums2 as well as an integer k, return the k th ( 1-based ) smallest product of nums1[i] * nums2[j] where 0 <= i < nums1.length and 0 <= j < nums2.length. ", "iloc": 1541, "frontend_question_id": 2042.0, "n_pass": 1, "response": "Example 21: \nLeetCode Problem #2015\nTitle: Longest More Frequent Subtree Sum\nDescription:\nGiven the root of a binary tree, return the length of the longest subarray such that the sum of the elements in the subarray is equal to its length multiplied by a positive integer.\n\nExample 22: \nLeetCode Problem #2016\nTitle: Check if the Sentence Is Pangram\nDescription:\nA pangram is a sentence where every letter of the English alphabet appears at least once. Given a string sentence containing only lowercase English letters, return true if sentence is a pangram, or false otherwise.\n\nExample 23: \nLeetCode Problem #2017\nTitle: Grid Game\nDescription:\nYou are given a 0-indexed 2D integer array grid of size 2 x n. You are also given integers k and the matrix operators, where operators[i] = [row i, col i] represents the ith operation you need to perform on grid.\n\nExample 24: \nLeetCode Problem #2018\nTitle: Minimum Number of Swaps to Make the Binary String Alternating\nDescription:\nYou are given a binary string s of length n. You are allowed to swap any two adjacent characters of s. You need to output the minimum number of swaps required to make s alternating.\n\nExample 25: \nLeetCode Problem #2019\nTitle: The Score of Students Solving Math Expression\nDescription:\nYou are given a string s representing a valid math expression. The expression consists of digits, '+', and '*' only. You are also given the integer array answers, where answers[i] is the answer to the ith student's question.\n\nExample 26: \nLeetCode Problem #2020\nTitle: Determine if String Halves Are Alike\nDescription:\nYou are given a string s of even length. Divide it into two halves of equal lengths, and let a be the first half and b be the second half.\n\nExample 27: \nLeetCode Problem #2021\nTitle: Eliminate Maximum Number of Monsters\nDescription:\nYou are playing a video game where you are defending your city from a group of n monsters. You are given a 0-indexed integer array dist of length n, where dist[i] is the initial distance in meters of the ith monster from the city.\n\nExample 28: \nLeetCode Problem #2022\nTitle: Maximum and Minimum Product of Two Elements in an Array\nDescription:\nGiven an integer array nums, find the maximum product of any two non-overlapping subarrays of nums. The answer is guaranteed to fit in a 32-bit signed integer.\n\nExample 29: \nLeetCode Problem #2023\nTitle: Number of Pairs of Strings With Concatenation Equal to Target\nDescription:\nGiven an array of digit strings nums and a string target, return the number of pairs of different digit strings in nums concatenating to target.\n\nExample 30: \nLeetCode Problem #2024\nTitle: Maximum Difference Between Increasing Elements\nDescription:\nYou are given a 0-indexed integer array nums of size n. Return the maximum difference between two adjacent elements in nums where nums[i] < nums[i+1] for all valid indices i.\n\nExample 31: \nLeetCode Problem #2025\nTitle: Maximum Number of Ways to Partition an Array\nDescription:\nYou are given a 0-indexed integer array nums and an integer k. Partition the array into k non-empty adjacent subarrays such that the sum of the averages of each subarray is maximized.\n\nExample 32: \nLeetCode Problem #2026\nTitle: Stone Game IX\nDescription:\nAlice and Bob continue to play their game of stones with n stones, numbered from 0 to n-1. Alice and Bob take turns, with Alice starting first. Each turn, the player may remove one stone from the row.\n\nExample 33: \nLeetCode Problem #2027\nTitle: Minimum Moves to Convert String\nDescription:\nYou are given a string s consisting of n characters which are either 'X' or 'O'. A move is defined as removing an 'X' from s or removing an 'O' from s until the string s becomes empty.\n\nExample 34: \nLeetCode Problem #2028\nTitle: Maximum Number of Occurrences of a Substring\nDescription:\nGiven a string s, return the maximum number of occurrences of any substring under the following rules:\n\nExample 35: \nLeetCode Problem #2029\nTitle: Redistribute Characters to Make All Strings Equal\nDescription:\nYou are given an array words of length n. words[i] is a string composed of lowercase English letters.\n\nExample 36: \nLeetCode Problem #2030\nTitle: Make Two Arrays Equal by Reversing Sub-arrays\nDescription:\nGiven two integer arrays target and arr of the same length n, return true if arr can be obtained from target by reversing any sub-array (possibly none), and false otherwise.\n\nExample 37: \nLeetCode Problem #2031\nTitle: Shortest Path with a Maximum Travel Time\nDescription:\nYou are given an integer n, an array edges (where edges[i] = [ui, vi, timei]), and an integer passingFees.\n\nExample 38: \nLeetCode Problem #2032\nTitle: Two Out of Three\nDescription:\nGiven three integer arrays nums1, nums2, and nums3, return a distinct array containing all the numbers that appear in at least two out of the three arrays.\n\nExample 39: \nLeetCode Problem #2033\nTitle: Sorting the Sentence\nDescription:\nA sentence is a list of words separated by a single space with no leading or trailing spaces.\n\nExample 40: \nLeetCode Problem #2034\nTitle: Number of Good Pairs\nDescription:\nGiven an array nums of integers, return the number of good pairs.\n\nExample 41: \nLeetCode Problem #2035\nTitle: Convert Integer to the Sum of Two No-Zero Integers\nDescription:\nGiven an integer n, return a length 2 array answer where:\n\nExample 42: \nLeetCode Problem #2036\nTitle: Find the Winner of the Circular Game\nDescription:\nThere are n friends that are playing a game in a circle. The game starts at the first friend clockwise.\n\nExample 43: \nLeetCode Problem #2037\nTitle: Minimum Number of Moves to Seat Everyone\nDescription:\nThere are n seats and n students in a room. You are given an array seats of length n, where seats[i] is the position of the ith seat.\n\nExample 44: \nLeetCode Problem #2038\nTitle: Kth Missing Positive Number\nDescription:\nGiven an array arr of positive integers sorted in a strictly increasing order, and an integer k.\n\nExample 45: \nLeetCode Problem #2039\nTitle: The Frequency of the Most Frequent Element\nDescription:\nYou are given an integer array nums and an integer k. In one operation, you can choose any index i and increment nums[i] by 1.\n\nExample 46: \nLeetCode Problem #2040\nTitle: Reverse Prefix of Word\nDescription:\nGiven a 0-indexed string word and a character ch, reverse the segment of word that starts at index 0 and ends at the index of the first occurrence of ch ( inclusive ).\n\nExample 47: \nLeetCode Problem #2041\nTitle: Road Network\nDescription:\nA network of n cities is described by two sets of integer arrays roads and queries.\n\nExample 48: \nLeetCode Problem #2042\nTitle: Check if Numbers Are Ascending in a Sentence\nDescription:\nA sentence is a list of tokens separated by single spaces with no leading or trailing spaces. Every token is either a positive number consisting of digits 0-9 with no leading zeros, or a word consisting of lowercase English letters.\n\nExample 49: \nLeetCode Problem #2043\nTitle: Count Number of Maximum Bitwise-OR Subsets\nDescription:\nGiven an integer array nums, find the maximum possible bitwise OR of a subset of nums and the number of different non-empty subsets with the maximum bitwise OR.\n\nExample 50: \nLeetCode Problem #2044\nTitle: Count Pairs of Equal Substrings With Minimum Difference\nDescription:\nYou are given two strings first and second, and an integer k. Return the number of the different pairs of indices (i, j) in the range 0 <= i < first.length \n\nExample 51: \nLeetCode Problem #2045\nTitle: Binary String With Substrings Representing 1 To N\nDescription:\nGiven a binary string s and an integer n, return true if the binary representation of all the integers in the range [1, n] are substrings of s, or false otherwise.\n\nExample 52: \nLeetCode Problem #2046\nTitle: Number of Students with Missing Exams\nDescription:\nYou are given a 2D integer array studentsAttendance and a string code representing the attendance code of the exams that all the students have taken.\n\nExample 53: \nLeetCode Problem #2047\nTitle: Splitting a String Into Descending Consecutive Values\nDescription:\nYou are given a string s that consists of only digits. Check if we can split s into two or more non-empty substrings in such a way that the numerical values of the substrings are in descending order.\n\nExample 54: \nLeetCode Problem #2048\nTitle: Maximum Number of Consecutive Values You Can Make\nDescription:\nYou are given an integer array coins of length n which represents the n coins that you own.\n\nExample 55: \nLeetCode Problem #2049\nTitle: Longest Subsequence in a String Containing only Vowels\nDescription:\nA string is a subsequence of a given string if it is generated by deleting some characters of the given string without changing its order.\n\nExample 56: \nLeetCode Problem #2050\nTitle: Number of Ways to Make a Fair Array\nDescription:\nYou are given an integer array nums. You can choose exactly one index (0-indexed) and remove the element.\n\nExample 57: \nLeetCode Problem #2051\nTitle: Count Number of Special Subsequences\nDescription:\nA sequence is special if it consists of a positive number of 0s, followed by a positive number of 1s, then a positive number of 2s.\n\nExample 58: \nLeetCode Problem #2052\nTitle: Number of Weeks for Which You Can Work\nDescription:\nThere are n projects numbered from 0 to n-1. You are given an integer array milestones where each milestones[i] denotes the number of milestones the ith project has.\n\nExample 59: \nLeetCode Problem #2053\nTitle: Count Special Palindromic Subsequences\nDescription:\nA string is a palindromic string if the reverse of the string is equal to the string itself.\n\nExample 60: \nLeetCode Problem #2054\nTitle: Maximum Number of Weeks for Which You Can Work\nDescription:\nYou are given an integer array nums of even length n.\n\nExample 61: \nLeetCode Problem #2055\nTitle: Count Square Sum Triples\nDescription:\nA square triple (a,b,c) is a triple where a, b, and c are integers and a^2 + b^2 = c^2.\n\nExample 62: \nLeetCode Problem #2056\nTitle: Maximum Number of Wet Apples that Can Be Eaten\nDescription:\nThere is a rectangular grid of m x n cells. Each cell can be empty or can contain an apple.\n\nExample 63: \nLeetCode Problem #2057\nTitle: Lattice Paths\nDescrip", "cleaned_response": " \nLongest More Frequent Subtree Sum\n\nGiven the root of a binary tree, return the length of the longest subarray such that the sum of the elements in the subarray is equal to its length multiplied by a positive integer.\n\n \nCheck if the Sentence Is Pangram\n\nA pangram is a sentence where every letter of the English alphabet appears at least once. Given a string sentence containing only lowercase English letters, return true if sentence is a pangram, or false otherwise.\n\n \nGrid Game\n\nYou are given a 0-indexed 2D integer array grid of size 2 x n. You are also given integers k and the matrix operators, where operators[i] = [row i, col i] represents the ith operation you need to perform on grid.\n\n \nMinimum Number of Swaps to Make the Binary String Alternating\n\nYou are given a binary string s of length n. You are allowed to swap any two adjacent characters of s. You need to output the minimum number of swaps required to make s alternating.\n\n \nThe Score of Students Solving Math Expression\n\nYou are given a string s representing a valid math expression. The expression consists of digits, '+', and '*' only. You are also given the integer array answers, where answers[i] is the answer to the ith student's question.\n\n \nDetermine if String Halves Are Alike\n\nYou are given a string s of even length. Divide it into two halves of equal lengths, and let a be the first half and b be the second half.\n\n \nEliminate Maximum Number of Monsters\n\nYou are playing a video game where you are defending your city from a group of n monsters. You are given a 0-indexed integer array dist of length n, where dist[i] is the initial distance in meters of the ith monster from the city.\n\n \nMaximum and Minimum Product of Two Elements in an Array\n\nGiven an integer array nums, find the maximum product of any two non-overlapping subarrays of nums. The answer is guaranteed to fit in a 32-bit signed integer.\n\n \nNumber of Pairs of Strings With Concatenation Equal to Target\n\nGiven an array of digit strings nums and a string target, return the number of pairs of different digit strings in nums concatenating to target.\n\n \nMaximum Difference Between Increasing Elements\n\nYou are given a 0-indexed integer array nums of size n. Return the maximum difference between two adjacent elements in nums where nums[i] < nums[i+1] for all valid indices i.\n\n \nMaximum Number of Ways to Partition an Array\n\nYou are given a 0-indexed integer array nums and an integer k. Partition the array into k non-empty adjacent subarrays such that the sum of the averages of each subarray is maximized.\n\n \nStone Game IX\n\nAlice and Bob continue to play their game of stones with n stones, numbered from 0 to n-1. Alice and Bob take turns, with Alice starting first. Each turn, the player may remove one stone from the row.\n\n \nMinimum Moves to Convert String\n\nYou are given a string s consisting of n characters which are either 'X' or 'O'. A move is defined as removing an 'X' from s or removing an 'O' from s until the string s becomes empty.\n\n \nMaximum Number of Occurrences of a Substring\n\nGiven a string s, return the maximum number of occurrences of any substring under the following rules:\n\n \nRedistribute Characters to Make All Strings Equal\n\nYou are given an array words of length n. words[i] is a string composed of lowercase English letters.\n\n \nMake Two Arrays Equal by Reversing Sub-arrays\n\nGiven two integer arrays target and arr of the same length n, return true if arr can be obtained from target by reversing any sub-array (possibly none), and false otherwise.\n\n \nShortest Path with a Maximum Travel Time\n\nYou are given an integer n, an array edges (where edges[i] = [ui, vi, timei]), and an integer passingFees.\n\n \nTwo Out of Three\n\nGiven three integer arrays nums1, nums2, and nums3, return a distinct array containing all the numbers that appear in at least two out of the three arrays.\n\n \nSorting the Sentence\n\nA sentence is a list of words separated by a single space with no leading or trailing spaces.\n\n \nNumber of Good Pairs\n\nGiven an array nums of integers, return the number of good pairs.\n\n \nConvert Integer to the Sum of Two No-Zero Integers\n\nGiven an integer n, return a length 2 array answer where:\n\n \nFind the Winner of the Circular Game\n\nThere are n friends that are playing a game in a circle. The game starts at the first friend clockwise.\n\n \nMinimum Number of Moves to Seat Everyone\n\nThere are n seats and n students in a room. You are given an array seats of length n, where seats[i] is the position of the ith seat.\n\n \nKth Missing Positive Number\n\nGiven an array arr of positive integers sorted in a strictly increasing order, and an integer k.\n\n \nThe Frequency of the Most Frequent Element\n\nYou are given an integer array nums and an integer k. In one operation, you can choose any index i and increment nums[i] by 1.\n\n \nReverse Prefix of Word\n\nGiven a 0-indexed string word and a character ch, reverse the segment of word that starts at index 0 and ends at the index of the first occurrence of ch ( inclusive ).\n\n \nRoad Network\n\nA network of n cities is described by two sets of integer arrays roads and queries.\n\n \nCheck if Numbers Are Ascending in a Sentence\n\nA sentence is a list of tokens separated by single spaces with no leading or trailing spaces. Every token is either a positive number consisting of digits 0-9 with no leading zeros, or a word consisting of lowercase English letters.\n\n \nCount Number of Maximum Bitwise-OR Subsets\n\nGiven an integer array nums, find the maximum possible bitwise OR of a subset of nums and the number of different non-empty subsets with the maximum bitwise OR.\n\n \nCount Pairs of Equal Substrings With Minimum Difference\n\nYou are given two strings first and second, and an integer k. Return the number of the different pairs of indices (i, j) in the range 0 <= i < first.length \n\n \nBinary String With Substrings Representing 1 To N\n\nGiven a binary string s and an integer n, return true if the binary representation of all the integers in the range [1, n] are substrings of s, or false otherwise.\n\n \nNumber of Students with Missing Exams\n\nYou are given a 2D integer array studentsAttendance and a string code representing the attendance code of the exams that all the students have taken.\n\n \nSplitting a String Into Descending Consecutive Values\n\nYou are given a string s that consists of only digits. Check if we can split s into two or more non-empty substrings in such a way that the numerical values of the substrings are in descending order.\n\n \nMaximum Number of Consecutive Values You Can Make\n\nYou are given an integer array coins of length n which represents the n coins that you own.\n\n \nLongest Subsequence in a String Containing only Vowels\n\nA string is a subsequence of a given string if it is generated by deleting some characters of the given string without changing its order.\n\n \nNumber of Ways to Make a Fair Array\n\nYou are given an integer array nums. You can choose exactly one index (0-indexed) and remove the element.\n\n \nCount Number of Special Subsequences\n\nA sequence is special if it consists of a positive number of 0s, followed by a positive number of 1s, then a positive number of 2s.\n\n \nNumber of Weeks for Which You Can Work\n\nThere are n projects numbered from 0 to n-1. You are given an integer array milestones where each milestones[i] denotes the number of milestones the ith project has.\n\n \nCount Special Palindromic Subsequences\n\nA string is a palindromic string if the reverse of the string is equal to the string itself.\n\n \nMaximum Number of Weeks for Which You Can Work\n\nYou are given an integer array nums of even length n.\n\n \nCount Square Sum Triples\n\nA square triple (a,b,c) is a triple where a, b, and c are integers and a^2 + b^2 = c^2.\n\n \nMaximum Number of Wet Apples that Can Be Eaten\n\nThere is a rectangular grid of m x n cells. Each cell can be empty or can contain an apple.\n\n \nLattice Paths\nDescrip", "similarity": 0.7829725994476852}
{"input_context": "Example 1: \nLeetCode Problem #2042\nTitle: Check if Numbers Are Ascending in a Sentence\nDescription:\nA sentence is a list of tokens separated by a single space with no leading or trailing spaces. Every token is either a positive number consisting of digits 0-9 with no leading zeros, or a word consisting of lowercase English letters. \nExample 2: \nLeetCode Problem #2043\nTitle: Simple Bank System\nDescription:\nYou have been tasked with writing a program for a popular bank that will automate all its incoming transactions (transfer, deposit, and withdraw). The bank has n accounts numbered from 1 to n. The initial balance of each account is stored in a 0-indexed integer array balance, with the (i + 1) th account having an initial balance of balance[i]. \nExample 3: \nLeetCode Problem #2044\nTitle: Count Number of Maximum Bitwise-OR Subsets\nDescription:\nGiven an integer array nums, find the maximum possible bitwise OR of a subset of nums and return the number of different non-empty subsets with the maximum bitwise OR. \nExample 4: \nLeetCode Problem #2045\nTitle: Second Minimum Time to Reach Destination\nDescription:\nA city is represented as a bi-directional connected graph with n vertices where each vertex is labeled from 1 to n ( inclusive ). The edges in the graph are represented as a 2D integer array edges, where each edges[i] = [u i, v i ] denotes a bi-directional edge between vertex u i and vertex v i. Every vertex pair is connected by at most one edge, and no vertex has an edge to itself. The time taken to traverse any edge is time minutes. \nExample 5: \nLeetCode Problem #2047\nTitle: Number of Valid Words in a Sentence\nDescription:\nA sentence consists of lowercase letters ( 'a' to 'z' ), digits ( '0' to '9' ), hyphens ( '-' ), punctuation marks ( '!', ., and ', ' ), and spaces ( ' ' ) only. Each sentence can be broken down into one or more tokens separated by one or more spaces ' '. \nExample 6: \nLeetCode Problem #2048\nTitle: Next Greater Numerically Balanced Number\nDescription:\nAn integer x is numerically balanced if for every digit d in the number x, there are exactly d occurrences of that digit in x. \nExample 7: \nLeetCode Problem #2049\nTitle: Count Nodes With the Highest Score\nDescription:\nThere is a binary tree rooted at 0 consisting of n nodes. The nodes are labeled from 0 to n - 1. You are given a 0-indexed integer array parents representing the tree, where parents[i] is the parent of node i. Since node 0 is the root, parents[0] == -1. \nExample 8: \nLeetCode Problem #2050\nTitle: Parallel Courses III\nDescription:\nYou are given an integer n, which indicates that there are n courses labeled from 1 to n. You are also given a 2D integer array relations where relations[j] = [prevCourse j, nextCourse j ] denotes that course prevCourse j has to be completed before course nextCourse j (prerequisite relationship). Furthermore, you are given a 0-indexed integer array time where time[i] denotes how many months it takes to complete the (i+1) th course. \nExample 9: \nLeetCode Problem #2053\nTitle: Kth Distinct String in an Array\nDescription:\nA distinct string is a string that is present only once in an array. \nExample 10: \nLeetCode Problem #2054\nTitle: Two Best Non-Overlapping Events\nDescription:\nYou are given a 0-indexed 2D integer array of events where events[i] = [startTime i, endTime i, value i ]. The i th event starts at startTime i and ends at endTime i, and if you attend this event, you will receive a value of value i. You can choose at most two non-overlapping events to attend such that the sum of their values is maximized. \nExample 11: \nLeetCode Problem #2055\nTitle: Plates Between Candles\nDescription:\nThere is a long table with a line of plates and candles arranged on top of it. You are given a 0-indexed string s consisting of characters '*' and '|' only, where a '*' represents a plate and a '|' represents a candle. \nExample 12: \nLeetCode Problem #2056\nTitle: Number of Valid Move Combinations On Chessboard\nDescription:\nThere is an 8 x 8 chessboard containing n pieces (rooks, queens, or bishops). You are given a string array pieces of length n, where pieces[i] describes the type (rook, queen, or bishop) of the i th piece. In addition, you are given a 2D integer array positions also of length n, where positions[i] = [r i, c i ] indicates that the i th piece is currently at the 1-based coordinate (r i, c i ) on the chessboard. \nExample 13: \nLeetCode Problem #2057\nTitle: Smallest Index With Equal Value\nDescription:\nGiven a 0-indexed integer array nums, return the smallest index i of nums such that i mod 10 == nums[i], or -1 if such index does not exist. \nExample 14: \nLeetCode Problem #2058\nTitle: Find the Minimum and Maximum Number of Nodes Between Critical Points\nDescription:\nA critical point in a linked list is defined as either a local maxima or a local minima. \nExample 15: \nLeetCode Problem #2059\nTitle: Minimum Operations to Convert Number\nDescription:\nYou are given a 0-indexed integer array nums containing distinct numbers, an integer start, and an integer goal. There is an integer x that is initially set to start, and you want to perform operations on x such that it is converted to goal. You can perform the following operation repeatedly on the number x :...\n\nExample 16: \nLeetCode Problem #2060\nTitle: Check if an Original String Exists Given Two Encoded Strings\nDescription:\nAn original string, consisting of lowercase English letters, can be encoded by the following steps:...\n\nExample 17: \nLeetCode Problem #2062\nTitle: Count Vowel Substrings of a String\nDescription:\nA substring is a contiguous (non-empty) sequence of characters within a string. \nExample 18: \nLeetCode Problem #2063\nTitle: Vowels of All Substrings\nDescription:\nGiven a string word, return the sum of the number of vowels ( 'a', 'e', 'i', 'o', and 'u' ) in every substring of word. \nExample 19: \nLeetCode Problem #2064\nTitle: Minimized Maximum of Products Distributed to Any Store\nDescription:\nYou are given an integer n indicating there are n specialty retail stores. There are m product types of varying amounts, which are given as a 0-indexed integer array quantities, where quantities[i] represents the number of products of the i th product type. \nExample 20: \nLeetCode Problem #2065\nTitle: Maximum Path Quality of a Graph\nDescription:\nThere is an undirected graph with n nodes numbered from 0 to n - 1 ( inclusive ). You are given a 0-indexed integer array values where values[i] is the value of the i th node. You are also given a 0-indexed 2D integer array edges, where each edges[j] = [u j, v j, time j ] indicates that there is an undirected edge between the nodes u j and v j, and it takes time j seconds to travel between the two nodes. Finally, you are given an integer maxTime. ", "expected_response": "Example 21: \nLeetCode Problem #2068\nTitle: Check Whether Two Strings are Almost Equivalent\nDescription:\nTwo strings word1 and word2 are considered almost equivalent if the differences between the frequencies of each letter from 'a' to 'z' between word1 and word2 is at most 3. \nExample 22: \nLeetCode Problem #2069\nTitle: Walking Robot Simulation II\nDescription:\nA width x height grid is on an XY-plane with the bottom-left cell at (0, 0) and the top-right cell at (width - 1, height - 1). The grid is aligned with the four cardinal directions ( \"North\", \"East\", \"South\", and \"West\" ). A robot is initially at cell (0, 0) facing direction \"East\". \nExample 23: \nLeetCode Problem #2070\nTitle: Most Beautiful Item for Each Query\nDescription:\nYou are given a 2D integer array items where items[i] = [price i, beauty i ] denotes the price and beauty of an item respectively. \nExample 24: \nLeetCode Problem #2071\nTitle: Maximum Number of Tasks You Can Assign\nDescription:\nYou have n tasks and m workers. Each task has a strength requirement stored in a 0-indexed integer array tasks, with the i th task requiring tasks[i] strength to complete. The strength of each worker is stored in a 0-indexed integer array workers, with the j th worker having workers[j] strength. Each worker can only be assigned to a single task and must have a strength greater than or equal to the task's strength requirement (i. e. , workers[j] >= tasks[i] ). \nExample 25: \nLeetCode Problem #2073\nTitle: Time Needed to Buy Tickets\nDescription:\nThere are n people in a line queuing to buy tickets, where the 0 th person is at the front of the line and the (n - 1) th person is at the back of the line. \nExample 26: \nLeetCode Problem #2074\nTitle: Reverse Nodes in Even Length Groups\nDescription:\nYou are given the head of a linked list. \nExample 27: \nLeetCode Problem #2075\nTitle: Decode the Slanted Ciphertext\nDescription:\nA string originalText is encoded using a slanted transposition cipher to a string encodedText with the help of a matrix having a fixed number of rows rows. \nExample 28: \nLeetCode Problem #2076\nTitle: Process Restricted Friend Requests\nDescription:\nYou are given an integer n indicating the number of people in a network. Each person is labeled from 0 to n - 1. \nExample 29: \nLeetCode Problem #2078\nTitle: Two Furthest Houses With Different Colors\nDescription:\nThere are n houses evenly lined up on the street, and each house is beautifully painted. You are given a 0-indexed integer array colors of length n, where colors[i] represents the color of the i th house. \nExample 30: \nLeetCode Problem #2079\nTitle: Watering Plants\nDescription:\nYou want to water n plants in your garden with a watering can. The plants are arranged in a row and are labeled from 0 to n - 1 from left to right where the i th plant is located at x = i. There is a river at x = -1 that you can refill your watering can at. \nExample 31: \nLeetCode Problem #2080\nTitle: Range Frequency Queries\nDescription:\nDesign a data structure to find the frequency of a given value in a given subarray. \nExample 32: \nLeetCode Problem #2081\nTitle: Sum of k-Mirror Numbers\nDescription:\nA k-mirror number is a positive integer without leading zeros that reads the same both forward and backward in base-10 as well as in base-k. \nExample 33: \nLeetCode Problem #2085\nTitle: Count Common Words With One Occurrence\nDescription:\nGiven two string arrays words1 and words2, return the number of strings that appear exactly once in each of the two arrays. \nExample 34: \nLeetCode Problem #2086\nTitle: Minimum Number of Food Buckets to Feed the Hamsters\nDescription:\nYou are given a 0-indexed string hamsters where hamsters[i] is either:...\n\nExample 35: \nLeetCode Problem #2087\nTitle: Minimum Cost Homecoming of a Robot in a Grid\nDescription:\nThere is an m x n grid, where (0, 0) is the top-left cell and (m - 1, n - 1) is the bottom-right cell. You are given an integer array startPos where startPos = [start row, start col ] indicates that initially, a robot is at the cell (start row, start col ). You are also given an integer array homePos where homePos = [home row, home col ] indicates that its home is at the cell (home row, home col ). \nExample 36: \nLeetCode Problem #2088\nTitle: Count Fertile Pyramids in a Land\nDescription:\nA farmer has a rectangular grid of land with m rows and n columns that can be divided into unit cells. Each cell is either fertile (represented by a 1 ) or barren (represented by a 0 ). All cells outside the grid are considered barren. \nExample 37: \nLeetCode Problem #2089\nTitle: Find Target Indices After Sorting Array\nDescription:\nYou are given a 0-indexed integer array nums and a target element target. \nExample 38: \nLeetCode Problem #2090\nTitle: K Radius Subarray Averages\nDescription:\nYou are given a 0-indexed array nums of n integers, and an integer k. \nExample 39: \nLeetCode Problem #2091\nTitle: Removing Minimum and Maximum From Array\nDescription:\nYou are given a 0-indexed array of distinct integers nums. \nExample 40: \nLeetCode Problem #2092\nTitle: Find All People With Secret\nDescription:\nYou are given an integer n indicating there are n people numbered from 0 to n - 1. You are also given a 0-indexed 2D integer array meetings where meetings[i] = [x i, y i, time i ] indicates that person x i and person y i have a meeting at time i. A person may attend multiple meetings at the same time. Finally, you are given an integer firstPerson. ", "iloc": 1581, "frontend_question_id": 2094.0, "n_pass": 1, "response": "Example 21: \nLeetCode Problem #2066\nTitle: Minimum Steps to Make Two Strings Anagram\nDescription:\nGiven two strings s and t, return the minimum number of steps required to make t an anagram of s. A step is defined as selecting any character in s and replacing it with any other character.\n\nExample 22: \nLeetCode Problem #2067\nTitle: Find Subarray with Maximum Product\nDescription:\nGiven an integer array nums, find a contiguous non-empty subarray within the array that has the largest product, and return the product.\n\nExample 23: \nLeetCode Problem #2068\nTitle: Longest Continuous Increasing Subsequence\nDescription:\nGiven an unsorted integer array nums, return the length of the longest continuous increasing subsequence (not necessarily contiguous) in the array.\n\nExample 24: \nLeetCode Problem #2069\nTitle: Minimum Absolute Difference of Two Subsets of a Set\nDescription:\nGiven a set of integers nums, divide the set into two subsets such that the absolute difference between the sum of the subsets is minimized, and return the minimum absolute difference.\n\nExample 25: \nLeetCode Problem #2070\nTitle: Construct Binary Tree from Preorder and Postorder Traversal\nDescription:\nGiven two integer arrays preorder and postorder where preorder is the preorder traversal of a binary tree and postorder is the postorder traversal of the same tree, construct and return the binary tree.\n\nExample 26: \nLeetCode Problem #2071\nTitle: Check if All Characters Have Equal Number of Occurrences\nDescription:\nGiven a string s, return true if s is a valid string where all characters have the same number of occurrences, or false otherwise.\n\nExample 27: \nLeetCode Problem #2072\nTitle: Minimum Distance Between Two Words in a Sentence\nDescription:\nGiven a sentence s and two words word1 and word2, return the minimum distance between word1 and word2 in the sentence.\n\nExample 28: \nLeetCode Problem #2073\nTitle: Decode String\nDescription:\nGiven an encoded string s, return the decoded string.\n\nExample 29: \nLeetCode Problem #2074\nTitle: Maximize the Beauty of the Garden\nDescription:\nYou are given a string s consisting of lowercase English letters. You have to construct a string t of equal length such that for every even-indexed character in s, t must have the same character, and for every odd-indexed character in s, t must have a different character that has not been used yet.\n\nExample 30: \nLeetCode Problem #2075\nTitle: Maximum Points You Can Obtain from Cards\nDescription:\nThere are several cards arranged in a row, and each card has an associated point value. You are initially dealt k cards. You have to pick up the cards from either the beginning or the end of the row. \n\nExample 31: \nLeetCode Problem #2076\nTitle: Build with More Bricks\nDescription:\nYou are given an integer array bricks representing the heights of some bricks. You want to build a brick wall vertically by stacking bricks on top of each other. Return the maximum number of bricks that you can put together such that it is possible to build a wall with a height greater than or equal to h.\n\nExample 32: \nLeetCode Problem #2077\nTitle: Check if All Characters Have at Least K Repetitions\nDescription:\nGiven a string s and an integer k, return true if every character in s appears at least k times, or false otherwise.\n\nExample 33: \nLeetCode Problem #2078\nTitle: Find Nth Positive Number Missing from Sorted Array\nDescription:\nGiven a sorted integer array arr and an integer k, return the kth missing number in a sorted array of size n containing distinct integers.\n\nExample 34: \nLeetCode Problem #2079\nTitle: Longest Subsequence Repeated k Times\nDescription:\nGiven a string s, return the longest subsequence of s that is repeated exactly k times. If there are multiple answers, return the lexicographically largest one. If there is no such subsequence, return an empty string.\n\nExample 35: \nLeetCode Problem #2080\nTitle: Find the Most Competitive Subsequence\nDescription:\nGiven an integer array nums and an integer k, return the lexicographically smallest subsequence of length k in nums.\n\nExample 36: \nLeetCode Problem #2081\nTitle: Maximum Erasure Value\nDescription:\nYou are given an integer array nums. You want to erase a subarray containing unique elements such that the remaining elements in the subarray have a maximum sum. \n\nExample 37: \nLeetCode Problem #2082\nTitle: Profitability Analysis II\nDescription:\nA small e-commerce website wants to analyze the profitability of its products. You are given two tables: Products and Orders. Products table has columns prduct_id (id of the product), price (price of the product), and cost (cost of the product). \n\nExample 38: \nLeetCode Problem #2083\nTitle: Largest Value in Each Tree Row\nDescription:\nGiven the root of a binary tree, return an array of the largest value in each row of the tree (0-indexed).\n\nExample 39: \nLeetCode Problem #2084\nTitle: Binary Matrix Minimization\nDescription:\nGiven a binary matrix matrix, return the minimum number of moves required to minimize it.\n\nExample 40: \nLeetCode Problem #2085\nTitle: Maximum Profit in Job Scheduling II\nDescription:\nGiven an array of jobs where each job has a start time, end time, and profit, return the maximum profit you can obtain by scheduling the jobs.\n\nExample 41: \nLeetCode Problem #2086\nTitle: Determine if Word is Valid After Substitutions\nDescription:\nGiven a string s, determine if it is valid after performing the following operations in any order:\n\nExample 42: \nLeetCode Problem #2087\nTitle: Length of Longest Fibonacci Subsequence\nDescription:\nA sequence of numbers is called a Fibonacci sequence if the sequence satisfies the following properties:...\n\nExample 43: \nLeetCode Problem #2088\nTitle: Modulus Game\nDescription:\nYou are given an array nums and two integers n and m. A position i in nums is good if nums[i] mod n == m.\n\nExample 44: \nLeetCode Problem #2089\nTitle: Numbers With Same Consecutive Differences\nDescription:\nReturn all non-negative integers of length n such that the absolute difference between every two consecutive digits is k.\n\nExample 45: \nLeetCode Problem #2090\nTitle: Find Middle Index in Array\nDescription:\nGiven a 0-indexed integer array nums, find and return the middle index of nums. The middle index is the index such that the sum of elements before it is equal to the sum of elements after it.\n\nExample 46: \nLeetCode Problem #2091\nTitle: Best Time to Buy and Sell Stock IV\nDescription:\nYou are given an integer array prices where prices[i] is the price of a given stock on the ith day, and an integer k representing the maximum number of transactions. \n\nExample 47: \nLeetCode Problem #2092\nTitle: Arranging Coins\nDescription:\nYou have a total of n coins that you want to form in a staircase shape, where every k-th row must have exactly k coins.\n\nExample 48: \nLeetCode Problem #2093\nTitle: Minimum Distance to Closest Person II\nDescription:\nYou are given an array seats representing the occupancy status of n seats in a row. You are also given an integer k, representing the number of people to place into seats.\n\nExample 49: \nLeetCode Problem #2094\nTitle: Shortest Path in a Grid with Obstacles Elimination\nDescription:\nYou are given an m x n integer matrix grid, where grid[i] [j] is the cell value of the cell (i, j). You can move up, down, left, or right from and to any cell in grid.\n\nExample 50: \nLeetCode Problem #2095\nTitle: Split the String Into Substrings\nDescription:\nGiven a string s and an integer k, split the string into k non-empty substrings such that the sum of their lengths is maximized.\n\nExample 51: \nLeetCode Problem #2096\nTitle: Maximum Erasure Value II\nDescription:\nYou are given an integer array nums. You want to erase a subarray containing unique elements such that the remaining elements in the subarray have a maximum sum. \n\nExample 52: \nLeetCode Problem #2097\nTitle: Smallest Subsequence of Distinct Characters\nDescription:\nGiven a string s, return the lexicographically smallest subsequence of s that contains all the distinct characters of s.\n\nExample 53: \nLeetCode Problem #2098\nTitle: Maximum Number of Subarrays With Sum Equal to Target\nDescription:\nGiven an array nums and an integer target, return the maximum number of non-empty subarrays such that the sum of values equals target.\n\nExample 54: \nLeetCode Problem #2099\nTitle: Number of Substrings without Repeating Characters\nDescription:\nGiven a string s, return the number of substrings of s that have no repeating characters.\n\nExample 55: \nLeetCode Problem #2100\nTitle: Minimum Cost to Merge Stones\nDescription:\nYou have n stones of sizes stone[i] where stone[i] is the weight of the i th stone. We are merging the stones into one stone. \n\nExample 56: \nLeetCode Problem #2101\nTitle: Reduction Operations to Make the Array Elements Equal\nDescription:\nYou are given an integer array nums. In one operation, you can pick two different indices i and j, where i > j, and subtract 1 from nums[i] and add 1 to nums[j].\n\nExample 57: \nLeetCode Problem #2102\nTitle: Letter Tile Possibilities II\nDescription:\nYou have a set of tiles, where each tile has one uppercase letter. You also have a string word. \n\nExample 58: \nLeetCode Problem #2103\nTitle: Score of Parentheses II\nDescription:\nGiven a balanced parentheses string s, return the score of the string.\n\nExample 59: \nLeetCode Problem #2104\nTitle: Minimum Possible Integer After at Most K Adjacent Swaps On Digits\nDescription:\nGiven a string num representing the digits of a single integer, and an integer k, return the minimum possible integer after at most k adjacent swaps on its digits.", "cleaned_response": " \nMinimum Steps to Make Two Strings Anagram\n\nGiven two strings s and t, return the minimum number of steps required to make t an anagram of s. A step is defined as selecting any character in s and replacing it with any other character.\n\n \nFind Subarray with Maximum Product\n\nGiven an integer array nums, find a contiguous non-empty subarray within the array that has the largest product, and return the product.\n\n \nLongest Continuous Increasing Subsequence\n\nGiven an unsorted integer array nums, return the length of the longest continuous increasing subsequence (not necessarily contiguous) in the array.\n\n \nMinimum Absolute Difference of Two Subsets of a Set\n\nGiven a set of integers nums, divide the set into two subsets such that the absolute difference between the sum of the subsets is minimized, and return the minimum absolute difference.\n\n \nConstruct Binary Tree from Preorder and Postorder Traversal\n\nGiven two integer arrays preorder and postorder where preorder is the preorder traversal of a binary tree and postorder is the postorder traversal of the same tree, construct and return the binary tree.\n\n \nCheck if All Characters Have Equal Number of Occurrences\n\nGiven a string s, return true if s is a valid string where all characters have the same number of occurrences, or false otherwise.\n\n \nMinimum Distance Between Two Words in a Sentence\n\nGiven a sentence s and two words word1 and word2, return the minimum distance between word1 and word2 in the sentence.\n\n \nDecode String\n\nGiven an encoded string s, return the decoded string.\n\n \nMaximize the Beauty of the Garden\n\nYou are given a string s consisting of lowercase English letters. You have to construct a string t of equal length such that for every even-indexed character in s, t must have the same character, and for every odd-indexed character in s, t must have a different character that has not been used yet.\n\n \nMaximum Points You Can Obtain from Cards\n\nThere are several cards arranged in a row, and each card has an associated point value. You are initially dealt k cards. You have to pick up the cards from either the beginning or the end of the row. \n\n \nBuild with More Bricks\n\nYou are given an integer array bricks representing the heights of some bricks. You want to build a brick wall vertically by stacking bricks on top of each other. Return the maximum number of bricks that you can put together such that it is possible to build a wall with a height greater than or equal to h.\n\n \nCheck if All Characters Have at Least K Repetitions\n\nGiven a string s and an integer k, return true if every character in s appears at least k times, or false otherwise.\n\n \nFind Nth Positive Number Missing from Sorted Array\n\nGiven a sorted integer array arr and an integer k, return the kth missing number in a sorted array of size n containing distinct integers.\n\n \nLongest Subsequence Repeated k Times\n\nGiven a string s, return the longest subsequence of s that is repeated exactly k times. If there are multiple answers, return the lexicographically largest one. If there is no such subsequence, return an empty string.\n\n \nFind the Most Competitive Subsequence\n\nGiven an integer array nums and an integer k, return the lexicographically smallest subsequence of length k in nums.\n\n \nMaximum Erasure Value\n\nYou are given an integer array nums. You want to erase a subarray containing unique elements such that the remaining elements in the subarray have a maximum sum. \n\n \nProfitability Analysis II\n\nA small e-commerce website wants to analyze the profitability of its products. You are given two tables: Products and Orders. Products table has columns prduct_id (id of the product), price (price of the product), and cost (cost of the product). \n\n \nLargest Value in Each Tree Row\n\nGiven the root of a binary tree, return an array of the largest value in each row of the tree (0-indexed).\n\n \nBinary Matrix Minimization\n\nGiven a binary matrix matrix, return the minimum number of moves required to minimize it.\n\n \nMaximum Profit in Job Scheduling II\n\nGiven an array of jobs where each job has a start time, end time, and profit, return the maximum profit you can obtain by scheduling the jobs.\n\n \nDetermine if Word is Valid After Substitutions\n\nGiven a string s, determine if it is valid after performing the following operations in any order:\n\n \nLength of Longest Fibonacci Subsequence\n\nA sequence of numbers is called a Fibonacci sequence if the sequence satisfies the following properties:...\n\n \nModulus Game\n\nYou are given an array nums and two integers n and m. A position i in nums is good if nums[i] mod n == m.\n\n \nNumbers With Same Consecutive Differences\n\nReturn all non-negative integers of length n such that the absolute difference between every two consecutive digits is k.\n\n \nFind Middle Index in Array\n\nGiven a 0-indexed integer array nums, find and return the middle index of nums. The middle index is the index such that the sum of elements before it is equal to the sum of elements after it.\n\n \nBest Time to Buy and Sell Stock IV\n\nYou are given an integer array prices where prices[i] is the price of a given stock on the ith day, and an integer k representing the maximum number of transactions. \n\n \nArranging Coins\n\nYou have a total of n coins that you want to form in a staircase shape, where every k-th row must have exactly k coins.\n\n \nMinimum Distance to Closest Person II\n\nYou are given an array seats representing the occupancy status of n seats in a row. You are also given an integer k, representing the number of people to place into seats.\n\n \nShortest Path in a Grid with Obstacles Elimination\n\nYou are given an m x n integer matrix grid, where grid[i] [j] is the cell value of the cell (i, j). You can move up, down, left, or right from and to any cell in grid.\n\n \nSplit the String Into Substrings\n\nGiven a string s and an integer k, split the string into k non-empty substrings such that the sum of their lengths is maximized.\n\n \nMaximum Erasure Value II\n\nYou are given an integer array nums. You want to erase a subarray containing unique elements such that the remaining elements in the subarray have a maximum sum. \n\n \nSmallest Subsequence of Distinct Characters\n\nGiven a string s, return the lexicographically smallest subsequence of s that contains all the distinct characters of s.\n\n \nMaximum Number of Subarrays With Sum Equal to Target\n\nGiven an array nums and an integer target, return the maximum number of non-empty subarrays such that the sum of values equals target.\n\n \nNumber of Substrings without Repeating Characters\n\nGiven a string s, return the number of substrings of s that have no repeating characters.\n\n \nMinimum Cost to Merge Stones\n\nYou have n stones of sizes stone[i] where stone[i] is the weight of the i th stone. We are merging the stones into one stone. \n\n \nReduction Operations to Make the Array Elements Equal\n\nYou are given an integer array nums. In one operation, you can pick two different indices i and j, where i > j, and subtract 1 from nums[i] and add 1 to nums[j].\n\n \nLetter Tile Possibilities II\n\nYou have a set of tiles, where each tile has one uppercase letter. You also have a string word. \n\n \nScore of Parentheses II\n\nGiven a balanced parentheses string s, return the score of the string.\n\n \nMinimum Possible Integer After at Most K Adjacent Swaps On Digits\n\nGiven a string num representing the digits of a single integer, and an integer k, return the minimum possible integer after at most k adjacent swaps on its digits.", "similarity": 0.7867320342171596}
{"input_context": "Example 1: \nLeetCode Problem #2094\nTitle: Finding 3-Digit Even Numbers\nDescription:\nYou are given an integer array digits, where each element is a digit. The array may contain duplicates. \nExample 2: \nLeetCode Problem #2095\nTitle: Delete the Middle Node of a Linked List\nDescription:\nYou are given the head of a linked list. Delete the middle node, and return the head of the modified linked list. \nExample 3: \nLeetCode Problem #2096\nTitle: Step-By-Step Directions From a Binary Tree Node to Another\nDescription:\nYou are given the root of a binary tree with n nodes. Each node is uniquely assigned a value from 1 to n. You are also given an integer startValue representing the value of the start node s, and a different integer destValue representing the value of the destination node t. \nExample 4: \nLeetCode Problem #2097\nTitle: Valid Arrangement of Pairs\nDescription:\nYou are given a 0-indexed 2D integer array pairs where pairs[i] = [start i, end i ]. An arrangement of pairs is valid if for every index i where 1 <= i < pairs.length, we have end i-1 == start i. \nExample 5: \nLeetCode Problem #2099\nTitle: Find Subsequence of Length K With the Largest Sum\nDescription:\nYou are given an integer array nums and an integer k. You want to find a subsequence of nums of length k that has the largest sum. \nExample 6: \nLeetCode Problem #2100\nTitle: Find Good Days to Rob the Bank\nDescription:\nYou and a gang of thieves are planning on robbing a bank. You are given a 0-indexed integer array security, where security[i] is the number of guards on duty on the i th day. The days are numbered starting from 0. You are also given an integer time. \nExample 7: \nLeetCode Problem #2101\nTitle: Detonate the Maximum Bombs\nDescription:\nYou are given a list of bombs. The range of a bomb is defined as the area where its effect can be felt. This area is in the shape of a circle with the center as the location of the bomb. \nExample 8: \nLeetCode Problem #2102\nTitle: Sequentially Ordinal Rank Tracker\nDescription:\nA scenic location is represented by its name and attractiveness score, where name is a unique string among all locations and score is an integer. Locations can be ranked from the best to the worst. The higher the score, the better the location. If the scores of two locations are equal, then the location with the lexicographically smaller name is better. \nExample 9: \nLeetCode Problem #2103\nTitle: Rings and Rods\nDescription:\nThere are n rings and each ring is either red, green, or blue. The rings are distributed across ten rods labeled from 0 to 9. \nExample 10: \nLeetCode Problem #2104\nTitle: Sum of Subarray Ranges\nDescription:\nYou are given an integer array nums. The range of a subarray of nums is the difference between the largest and smallest element in the subarray. \nExample 11: \nLeetCode Problem #2105\nTitle: Watering Plants II\nDescription:\nAlice and Bob want to water n plants in their garden. The plants are arranged in a row and are labeled from 0 to n - 1 from left to right where the i th plant is located at x = i. \nExample 12: \nLeetCode Problem #2106\nTitle: Maximum Fruits Harvested After at Most K Steps\nDescription:\nFruits are available at some positions on an infinite x-axis. You are given a 2D integer array fruits where fruits[i] = [position i, amount i ] depicts amount i fruits at the position position i. fruits is already sorted by position i in ascending order, and each position i is unique. \nExample 13: \nLeetCode Problem #2108\nTitle: Find First Palindromic String in the Array\nDescription:\nGiven an array of strings words, return the first palindromic string in the array. If there is no such string, return an empty string \"\". \nExample 14: \nLeetCode Problem #2109\nTitle: Adding Spaces to a String\nDescription:\nYou are given a 0-indexed string s and a 0-indexed integer array spaces that describes the indices in the original string where spaces will be added. Each space should be inserted before the character at the given index. \nExample 15: \nLeetCode Problem #2110\nTitle: Number of Smooth Descent Periods of a Stock\nDescription:\nYou are given an integer array prices representing the daily price history of a stock, where prices[i] is the stock price on the i th day. \nExample 16: \nLeetCode Problem #2111\nTitle: Minimum Operations to Make the Array K-Increasing\nDescription:\nYou are given a 0-indexed array arr consisting of n positive integers, and a positive integer k. \nExample 17: \nLeetCode Problem #2114\nTitle: Maximum Number of Words Found in Sentences\nDescription:\nA sentence is a list of words that are separated by a single space with no leading or trailing spaces. \nExample 18: \nLeetCode Problem #2115\nTitle: Find All Possible Recipes from Given Supplies\nDescription:\nYou have information about n different recipes. You are given a string array recipes and a 2D string array ingredients. The i th recipe has the name recipes[i], and you can create it if you have all the needed ingredients from ingredients[i]. Ingredients to a recipe may need to be created from other recipes, i. e. , ingredients[i] may contain a string that is in recipes. \nExample 19: \nLeetCode Problem #2116\nTitle: Check if a Parentheses String Can Be Valid\nDescription:\nA parentheses string is a non-empty string consisting only of '(' and ')'. It is valid if any of the following conditions is true :...\n\nExample 20: \nLeetCode Problem #2117\nTitle: Abbreviating the Product of a Range\nDescription:\nYou are given two positive integers left and right with left <= right. Calculate the product of all integers in the inclusive range [left, right]. ", "expected_response": "Example 21: \nLeetCode Problem #2119\nTitle: A Number After a Double Reversal\nDescription:\nReversing an integer means to reverse all its digits. \nExample 22: \nLeetCode Problem #2120\nTitle: Execution of All Suffix Instructions Staying in a Grid\nDescription:\nThere is an n x n grid, with the top-left cell at (0, 0) and the bottom-right cell at (n - 1, n - 1). You are given the integer n and an integer array startPos where startPos = [start row, start col ] indicates that a robot is initially at cell (start row, start col ). \nExample 23: \nLeetCode Problem #2121\nTitle: Intervals Between Identical Elements\nDescription:\nYou are given a 0-indexed array of n integers arr. \nExample 24: \nLeetCode Problem #2122\nTitle: Recover the Original Array\nDescription:\nAlice had a 0-indexed array arr consisting of n positive integers. She chose an arbitrary positive integer k and created two new 0-indexed integer arrays lower and higher in the following manner:...\n\nExample 25: \nLeetCode Problem #2124\nTitle: Check if All A's Appears Before All B's\nDescription:\nGiven a string s consisting of only the characters 'a' and 'b', return true if every 'a' appears before every 'b' in the string. Otherwise, return false. \nExample 26: \nLeetCode Problem #2125\nTitle: Number of Laser Beams in a Bank\nDescription:\nAnti-theft security devices are activated inside a bank. You are given a 0-indexed binary string array bank representing the floor plan of the bank, which is an m x n 2D matrix. bank[i] represents the i th row, consisting of '0' s and '1' s. '0' means the cell is empty, while '1' means the cell has a security device. \nExample 27: \nLeetCode Problem #2126\nTitle: Destroying Asteroids\nDescription:\nYou are given an integer mass, which represents the original mass of a planet. You are further given an integer array asteroids, where asteroids[i] is the mass of the i th asteroid. \nExample 28: \nLeetCode Problem #2127\nTitle: Maximum Employees to Be Invited to a Meeting\nDescription:\nA company is organizing a meeting and has a list of n employees, waiting to be invited. They have arranged for a large circular table, capable of seating any number of employees. \nExample 29: \nLeetCode Problem #2129\nTitle: Capitalize the Title\nDescription:\nYou are given a string title consisting of one or more words separated by a single space, where each word consists of English letters. Capitalize the string by changing the capitalization of each word such that:...\n\nExample 30: \nLeetCode Problem #2130\nTitle: Maximum Twin Sum of a Linked List\nDescription:\nIn a linked list of size n, where n is even, the i th node ( 0-indexed ) of the linked list is known as the twin of the (n-1-i) th node, if 0 <= i <= (n / 2) - 1. \nExample 31: \nLeetCode Problem #2131\nTitle: Longest Palindrome by Concatenating Two Letter Words\nDescription:\nYou are given an array of strings words. Each element of words consists of two lowercase English letters. \nExample 32: \nLeetCode Problem #2132\nTitle: Stamping the Grid\nDescription:\nYou are given an m x n binary matrix grid where each cell is either 0 (empty) or 1 (occupied). \nExample 33: \nLeetCode Problem #2133\nTitle: Check if Every Row and Column Contains All Numbers\nDescription:\nAn n x n matrix is valid if every row and every column contains all the integers from 1 to n ( inclusive ). \nExample 34: \nLeetCode Problem #2134\nTitle: Minimum Swaps to Group All 1's Together II\nDescription:\nA swap is defined as taking two distinct positions in an array and swapping the values in them. \nExample 35: \nLeetCode Problem #2135\nTitle: Count Words Obtained After Adding a Letter\nDescription:\nYou are given two 0-indexed arrays of strings startWords and targetWords. Each string consists of lowercase English letters only. \nExample 36: \nLeetCode Problem #2136\nTitle: Earliest Possible Day of Full Bloom\nDescription:\nYou have n flower seeds. Every seed must be planted first before it can begin to grow, then bloom. Planting a seed takes time and so does the growth of a seed. You are given two 0-indexed integer arrays plantTime and growTime, of length n each:...\n\nExample 37: \nLeetCode Problem #2138\nTitle: Divide a String Into Groups of Size k\nDescription:\nA string s can be partitioned into groups of size k using the following procedure:...\n\nExample 38: \nLeetCode Problem #2139\nTitle: Minimum Moves to Reach Target Score\nDescription:\nYou are playing a game with integers. You start with the integer 1 and you want to reach the integer target. \nExample 39: \nLeetCode Problem #2140\nTitle: Solving Questions With Brainpower\nDescription:\nYou are given a 0-indexed 2D integer array questions where questions[i] = [points i, brainpower i ]. \nExample 40: \nLeetCode Problem #2141\nTitle: Maximum Running Time of N Computers\nDescription:\nYou have n computers. You are given the integer n and a 0-indexed integer array batteries where the i th battery can run a computer for batteries[i] minutes. You are interested in running all n computers simultaneously using the given batteries. ", "iloc": 1621, "frontend_question_id": 2144.0, "n_pass": 1, "response": "Example 21: \nLeetCode Problem #2118\nTitle: Identifying Redundant Connections in a Network\nDescription:\nYou are given an array edges representing an undirected graph, where edges[i] = [ui, vi] indicates that there is an edge between nodes ui and vi. Return an edge that can be removed to make the graph a tree.\n\nExample 22: \nLeetCode Problem #2119\nTitle: Reconstruct Itinerary\nDescription:\nYou are given a list of flights and an initial itinerary. The flights are represented as a 2D string array tickets, where tickets[i] = [fromi, toi] denotes a flight from destination fromi to destination toi. \n\nExample 23: \nLeetCode Problem #2120\nTitle: Maximum Score of a Good Subarray\nDescription:\nYou are given an array nums of integers. A subarray [nums[l], nums[l + 1], ..., nums[r - 1], nums[r]] is called good if the score of this subarray is equal to r - l (i.e., the number of elements in the subarray).\n\nExample 24: \nLeetCode Problem #2121\nTitle: Minimum Operations to Make Array Equal\nDescription:\nYou have an array arr of length n where arr[i] = (2 * i) + 1 for all valid values of i (i.e., 0 <= i < n).\n\nExample 25: \nLeetCode Problem #2122\nTitle: Count Pairs In Two Arrays With Conditional Sum\nDescription:\nYou are given two arrays nums1 and nums2 of equal length n. The array nums1 represents the point values that Alice has, and the array nums2 represents the point values that Bob has. Alice and Bob take turns playing games, with Alice starting first. In each turn, the player can choose a pair (i, j) where 0 <= i < n and 0 <= j < n and i != j. \n\nExample 26: \nLeetCode Problem #2123\nTitle: Palindrome Linked List\nDescription:\nYou are given the head of a singly linked list. Return true if it is a palindrome, or false otherwise.\n\nExample 27: \nLeetCode Problem #2124\nTitle: Shuffle the Array\nDescription:\nYou are given an integer array nums consisting of 2n elements, arranged in the form [x1, x2, ..., xn, y1, y2, ..., yn]. \n\nExample 28: \nLeetCode Problem #2125\nTitle: Construct the Rectangle\nDescription:\nYou are given an integer area representing the area of a rectangle. Return the side lengths of the rectangle in ascending order.\n\nExample 29: \nLeetCode Problem #2126\nTitle: Maximum Difference Between Increasing Elements\nDescription:\nYou are given an integer array nums of size n. You need to find the maximum difference between any two elements in nums such that the larger element is to the right of the smaller element.\n\nExample 30: \nLeetCode Problem #2127\nTitle: Minimum Moves to Make Array Complementary\nDescription:\nYou are given an integer array nums of even length n and an integer limit. In one move, you can replace any integer from nums with any integer between 1 and limit, inclusive.", "cleaned_response": " \nIdentifying Redundant Connections in a Network\n\nYou are given an array edges representing an undirected graph, where edges[i] = [ui, vi] indicates that there is an edge between nodes ui and vi. Return an edge that can be removed to make the graph a tree.\n\n \nReconstruct Itinerary\n\nYou are given a list of flights and an initial itinerary. The flights are represented as a 2D string array tickets, where tickets[i] = [fromi, toi] denotes a flight from destination fromi to destination toi. \n\n \nMaximum Score of a Good Subarray\n\nYou are given an array nums of integers. A subarray [nums[l], nums[l + 1], ..., nums[r - 1], nums[r]] is called good if the score of this subarray is equal to r - l (i.e., the number of elements in the subarray).\n\n \nMinimum Operations to Make Array Equal\n\nYou have an array arr of length n where arr[i] = (2 * i) + 1 for all valid values of i (i.e., 0 <= i < n).\n\n \nCount Pairs In Two Arrays With Conditional Sum\n\nYou are given two arrays nums1 and nums2 of equal length n. The array nums1 represents the point values that Alice has, and the array nums2 represents the point values that Bob has. Alice and Bob take turns playing games, with Alice starting first. In each turn, the player can choose a pair (i, j) where 0 <= i < n and 0 <= j < n and i != j. \n\n \nPalindrome Linked List\n\nYou are given the head of a singly linked list. Return true if it is a palindrome, or false otherwise.\n\n \nShuffle the Array\n\nYou are given an integer array nums consisting of 2n elements, arranged in the form [x1, x2, ..., xn, y1, y2, ..., yn]. \n\n \nConstruct the Rectangle\n\nYou are given an integer area representing the area of a rectangle. Return the side lengths of the rectangle in ascending order.\n\n \nMaximum Difference Between Increasing Elements\n\nYou are given an integer array nums of size n. You need to find the maximum difference between any two elements in nums such that the larger element is to the right of the smaller element.\n\n \nMinimum Moves to Make Array Complementary\n\nYou are given an integer array nums of even length n and an integer limit. In one move, you can replace any integer from nums with any integer between 1 and limit, inclusive.", "similarity": 0.805890300512798}
{"input_context": "Example 1: \nLeetCode Problem #2144\nTitle: Minimum Cost of Buying Candies With Discount\nDescription:\nA shop is selling candies at a discount. For every two candies sold, the shop gives a third candy for free. \nExample 2: \nLeetCode Problem #2145\nTitle: Count the Hidden Sequences\nDescription:\nYou are given a 0-indexed array of n integers differences, which describes the differences between each pair of consecutive integers of a hidden sequence of length (n + 1). More formally, call the hidden sequence hidden, then we have that differences[i] = hidden[i + 1] - hidden[i]. \nExample 3: \nLeetCode Problem #2146\nTitle: K Highest Ranked Items Within a Price Range\nDescription:\nYou are given a 0-indexed 2D integer array grid of size m x n that represents a map of the items in a shop. The integers in the grid represent the following:...\n\nExample 4: \nLeetCode Problem #2147\nTitle: Number of Ways to Divide a Long Corridor\nDescription:\nAlong a long library corridor, there is a line of seats and decorative plants. You are given a 0-indexed string corridor of length n consisting of letters 'S' and 'P' where each 'S' represents a seat and each 'P' represents a plant. \nExample 5: \nLeetCode Problem #2148\nTitle: Count Elements With Strictly Smaller and Greater Elements \nDescription:\nGiven an integer array nums, return the number of elements that have both a strictly smaller and a strictly greater element appear in nums. \nExample 6: \nLeetCode Problem #2149\nTitle: Rearrange Array Elements by Sign\nDescription:\nYou are given a 0-indexed integer array nums of even length consisting of an equal number of positive and negative integers. \nExample 7: \nLeetCode Problem #2150\nTitle: Find All Lonely Numbers in the Array\nDescription:\nYou are given an integer array nums. A number x is lonely when it appears only once, and no adjacent numbers (i. e. x + 1 and x - 1) appear in the array. \nExample 8: \nLeetCode Problem #2151\nTitle: Maximum Good People Based on Statements\nDescription:\nThere are two types of persons:...\n\nExample 9: \nLeetCode Problem #2154\nTitle: Keep Multiplying Found Values by Two\nDescription:\nYou are given an array of integers nums. You are also given an integer original which is the first number that needs to be searched for in nums. \nExample 10: \nLeetCode Problem #2155\nTitle: All Divisions With the Highest Score of a Binary Array\nDescription:\nYou are given a 0-indexed binary array nums of length n. nums can be divided at index i (where 0 <= i <= n) into two arrays (possibly empty) nums left and nums right :...\n\nExample 11: \nLeetCode Problem #2156\nTitle: Find Substring With Given Hash Value\nDescription:\nThe hash of a 0-indexed string s of length k, given integers p and m, is computed using the following function:...\n\nExample 12: \nLeetCode Problem #2157\nTitle: Groups of Strings\nDescription:\nYou are given a 0-indexed array of strings words. Each string consists of lowercase English letters only. No letter occurs more than once in any string of words. \nExample 13: \nLeetCode Problem #2160\nTitle: Minimum Sum of Four Digit Number After Splitting Digits\nDescription:\nYou are given a positive integer num consisting of exactly four digits. Split num into two new integers new1 and new2 by using the digits found in num. Leading zeros are allowed in new1 and new2, and all the digits found in num must be used. \nExample 14: \nLeetCode Problem #2161\nTitle: Partition Array According to Given Pivot\nDescription:\nYou are given a 0-indexed integer array nums and an integer pivot. Rearrange nums such that the following conditions are satisfied:...\n\nExample 15: \nLeetCode Problem #2162\nTitle: Minimum Cost to Set Cooking Time\nDescription:\nA generic microwave supports cooking times for:...\n\nExample 16: \nLeetCode Problem #2163\nTitle: Minimum Difference in Sums After Removal of Elements\nDescription:\nYou are given a 0-indexed integer array nums consisting of 3 * n elements. \nExample 17: \nLeetCode Problem #2164\nTitle: Sort Even and Odd Indices Independently\nDescription:\nYou are given a 0-indexed integer array nums. Rearrange the values of nums according to the following rules:...\n\nExample 18: \nLeetCode Problem #2165\nTitle: Smallest Value of the Rearranged Number\nDescription:\nYou are given an integer num. Rearrange the digits of num such that its value is minimized and it does not contain any leading zeros. \nExample 19: \nLeetCode Problem #2166\nTitle: Design Bitset\nDescription:\nA Bitset is a data structure that compactly stores bits. \nExample 20: \nLeetCode Problem #2167\nTitle: Minimum Time to Remove All Cars Containing Illegal Goods\nDescription:\nYou are given a 0-indexed binary string s which represents a sequence of train cars. s[i] = '0' denotes that the i th car does not contain illegal goods and s[i] = '1' denotes that the i th car does contain illegal goods. ", "expected_response": "Example 21: \nLeetCode Problem #2169\nTitle: Count Operations to Obtain Zero\nDescription:\nYou are given two non-negative integers num1 and num2. \nExample 22: \nLeetCode Problem #2170\nTitle: Minimum Operations to Make the Array Alternating\nDescription:\nYou are given a 0-indexed array nums consisting of n positive integers. \nExample 23: \nLeetCode Problem #2171\nTitle: Removing Minimum Number of Magic Beans\nDescription:\nYou are given an array of positive integers beans, where each integer represents the number of magic beans found in a particular magic bag. \nExample 24: \nLeetCode Problem #2172\nTitle: Maximum AND Sum of Array\nDescription:\nYou are given an integer array nums of length n and an integer numSlots such that 2 * numSlots >= n. There are numSlots slots numbered from 1 to numSlots. \nExample 25: \nLeetCode Problem #2176\nTitle: Count Equal and Divisible Pairs in an Array\nDescription:\nGiven a 0-indexed integer array nums of length n and an integer k, return the number of pairs (i, j) where 0 <= i < j < n, such that nums[i] == nums[j] and (i * j) is divisible by k. \nExample 26: \nLeetCode Problem #2177\nTitle: Find Three Consecutive Integers That Sum to a Given Number\nDescription:\nGiven an integer num, return three consecutive integers (as a sorted array) that sum to num. If num cannot be expressed as the sum of three consecutive integers, return an empty array. \nExample 27: \nLeetCode Problem #2178\nTitle: Maximum Split of Positive Even Integers\nDescription:\nYou are given an integer finalSum. Split it into a sum of a maximum number of unique positive even integers. \nExample 28: \nLeetCode Problem #2179\nTitle: Count Good Triplets in an Array\nDescription:\nYou are given two 0-indexed arrays nums1 and nums2 of length n, both of which are permutations of [0, 1,. . . , n - 1]. \nExample 29: \nLeetCode Problem #2180\nTitle: Count Integers With Even Digit Sum\nDescription:\nGiven a positive integer num, return the number of positive integers less than or equal to num whose digit sums are even. \nExample 30: \nLeetCode Problem #2181\nTitle: Merge Nodes in Between Zeros\nDescription:\nYou are given the head of a linked list, which contains a series of integers separated by 0 's. The beginning and end of the linked list will have Node. val == 0. \nExample 31: \nLeetCode Problem #2182\nTitle: Construct String With Repeat Limit\nDescription:\nYou are given a string s and an integer repeatLimit. Construct a new string repeatLimitedString using the characters of s such that no letter appears more than repeatLimit times in a row. You do not have to use all characters from s. \nExample 32: \nLeetCode Problem #2183\nTitle: Count Array Pairs Divisible by K\nDescription:\nGiven a 0-indexed integer array nums of length n and an integer k, return the number of pairs (i, j) such that:...\n\nExample 33: \nLeetCode Problem #2185\nTitle: Counting Words With a Given Prefix\nDescription:\nYou are given an array of strings words and a string pref. \nExample 34: \nLeetCode Problem #2186\nTitle: Minimum Number of Steps to Make Two Strings Anagram II\nDescription:\nYou are given two strings s and t. In one step, you can append any character to either s or t. \nExample 35: \nLeetCode Problem #2187\nTitle: Minimum Time to Complete Trips\nDescription:\nYou are given an array time where time[i] denotes the time taken by the i th bus to complete one trip. \nExample 36: \nLeetCode Problem #2188\nTitle: Minimum Time to Finish the Race\nDescription:\nYou are given a 0-indexed 2D integer array tires where tires[i] = [f i, r i ] indicates that the i th tire can finish its x th successive lap in f i * r i (x-1) seconds. \nExample 37: \nLeetCode Problem #2190\nTitle: Most Frequent Number Following Key In an Array\nDescription:\nYou are given a 0-indexed integer array nums. You are also given an integer key, which is present in nums. \nExample 38: \nLeetCode Problem #2191\nTitle: Sort the Jumbled Numbers\nDescription:\nYou are given a 0-indexed integer array mapping which represents the mapping rule of a shuffled decimal system. mapping[i] = j means digit i should be mapped to digit j in this system. \nExample 39: \nLeetCode Problem #2192\nTitle: All Ancestors of a Node in a Directed Acyclic Graph\nDescription:\nYou are given a positive integer n representing the number of nodes of a Directed Acyclic Graph (DAG). The nodes are numbered from 0 to n - 1 ( inclusive ). \nExample 40: \nLeetCode Problem #2193\nTitle: Minimum Number of Moves to Make Palindrome\nDescription:\nYou are given a string s consisting only of lowercase English letters. ", "iloc": 1661, "frontend_question_id": 2194.0, "n_pass": 1, "response": "Example 21: \nLeetCode Problem #2168\nTitle: Largest Subarray with Equal Number of Even and Odd Elements\nDescription:\nGiven an integer array nums, find the maximum length of a subarray with an equal number of even and odd elements. \nExample 22: \nLeetCode Problem #2169\nTitle: Find the Median of Two Sorted Arrays\nDescription:\nGiven two sorted arrays nums1 and nums2 of size m and n respectively, return the median of the two sorted arrays. \nExample 23: \nLeetCode Problem #2170\nTitle: Longest Palindromic Subsequence\nDescription:\nGiven a string s, find the length of the longest palindromic subsequence in s. \nExample 24: \nLeetCode Problem #2171\nTitle: Maximum Depth of Binary Tree\nDescription:\nGiven the root of a binary tree, return its maximum depth. \nExample 25: \nLeetCode Problem #2172\nTitle: Remove Duplicate Letters\nDescription:\nGiven a string s, remove duplicate letters so that every letter appears once and only once. \nExample 26: \nLeetCode Problem #2173\nTitle: Maximum Product of Two Elements in an Array\nDescription:\nGiven an integer array nums, find the maximum product of any two distinct elements in nums. \nExample 27: \nLeetCode Problem #2174\nTitle: Reverse Words in a String III\nDescription:\nGiven a string s, reverse the order of characters in each word within a sentence while still preserving whitespace and initial word order. \nExample 28: \nLeetCode Problem #2175\nTitle: Check If Vowel Exists in Any String\nDescription:\nGiven an array of strings words, return an array answering if each string in words contains a vowel. \nExample 29: \nLeetCode Problem #2176\nTitle: Count Complete Tree Nodes\nDescription:\nGiven the root of a complete binary tree, return the number of nodes in the tree. \nExample 30: \nLeetCode Problem #2177\nTitle: Maximum Number of Balloons\nDescription:\nGiven a string text, you want to use the characters of text to form as many instances of the word \"balloon\" as possible.", "cleaned_response": " \nLargest Subarray with Equal Number of Even and Odd Elements\n\nGiven an integer array nums, find the maximum length of a subarray with an equal number of even and odd elements. \n \nFind the Median of Two Sorted Arrays\n\nGiven two sorted arrays nums1 and nums2 of size m and n respectively, return the median of the two sorted arrays. \n \nLongest Palindromic Subsequence\n\nGiven a string s, find the length of the longest palindromic subsequence in s. \n \nMaximum Depth of Binary Tree\n\nGiven the root of a binary tree, return its maximum depth. \n \nRemove Duplicate Letters\n\nGiven a string s, remove duplicate letters so that every letter appears once and only once. \n \nMaximum Product of Two Elements in an Array\n\nGiven an integer array nums, find the maximum product of any two distinct elements in nums. \n \nReverse Words in a String III\n\nGiven a string s, reverse the order of characters in each word within a sentence while still preserving whitespace and initial word order. \n \nCheck If Vowel Exists in Any String\n\nGiven an array of strings words, return an array answering if each string in words contains a vowel. \n \nCount Complete Tree Nodes\n\nGiven the root of a complete binary tree, return the number of nodes in the tree. \n \nMaximum Number of Balloons\n\nGiven a string text, you want to use the characters of text to form as many instances of the word \"balloon\" as possible.", "similarity": 0.8230072854737126}
{"input_context": "Example 1: \nLeetCode Problem #2194\nTitle: Cells in a Range on an Excel Sheet\nDescription:\nA cell (r, c) of an excel sheet is represented as a string \"<col><row>\" where:...\n\nExample 2: \nLeetCode Problem #2195\nTitle: Append K Integers With Minimal Sum\nDescription:\nYou are given an integer array nums and an integer k. Append k unique positive integers that do not appear in nums to nums such that the resulting total sum is minimum. \nExample 3: \nLeetCode Problem #2196\nTitle: Create Binary Tree From Descriptions\nDescription:\nYou are given a 2D integer array descriptions where descriptions[i] = [parent i, child i, isLeft i ] indicates that parent i is the parent of child i in a binary tree of unique values. Furthermore,...\n\nExample 4: \nLeetCode Problem #2197\nTitle: Replace Non-Coprime Numbers in Array\nDescription:\nYou are given an array of integers nums. Perform the following steps:...\n\nExample 5: \nLeetCode Problem #2200\nTitle: Find All K-Distant Indices in an Array\nDescription:\nYou are given a 0-indexed integer array nums and two integers key and k. A k-distant index is an index i of nums for which there exists at least one index j such that |i - j| <= k and nums[j] == key. \nExample 6: \nLeetCode Problem #2201\nTitle: Count Artifacts That Can Be Extracted\nDescription:\nThere is an n x n 0-indexed grid with some artifacts buried in it. You are given the integer n and a 0-indexed 2D integer array artifacts describing the positions of the rectangular artifacts where artifacts[i] = [r1 i, c1 i, r2 i, c2 i ] denotes that the i th artifact is buried in the subgrid where:...\n\nExample 7: \nLeetCode Problem #2202\nTitle: Maximize the Topmost Element After K Moves\nDescription:\nYou are given a 0-indexed integer array nums representing the contents of a pile, where nums[0] is the topmost element of the pile. \nExample 8: \nLeetCode Problem #2203\nTitle: Minimum Weighted Subgraph With the Required Paths\nDescription:\nYou are given an integer n denoting the number of nodes of a weighted directed graph. The nodes are numbered from 0 to n - 1. \nExample 9: \nLeetCode Problem #2206\nTitle: Divide Array Into Equal Pairs\nDescription:\nYou are given an integer array nums consisting of 2 * n integers. \nExample 10: \nLeetCode Problem #2207\nTitle: Maximize Number of Subsequences in a String\nDescription:\nYou are given a 0-indexed string text and another 0-indexed string pattern of length 2, both of which consist of only lowercase English letters. \nExample 11: \nLeetCode Problem #2208\nTitle: Minimum Operations to Halve Array Sum\nDescription:\nYou are given an array nums of positive integers. In one operation, you can choose any number from nums and reduce it to exactly half the number. (Note that you may choose this reduced number in future operations. )...\n\nExample 12: \nLeetCode Problem #2209\nTitle: Minimum White Tiles After Covering With Carpets\nDescription:\nYou are given a 0-indexed binary string floor, which represents the colors of tiles on a floor:...\n\nExample 13: \nLeetCode Problem #2210\nTitle: Count Hills and Valleys in an Array\nDescription:\nYou are given a 0-indexed integer array nums. An index i is part of a hill in nums if the closest non-equal neighbors of i are smaller than nums[i]. Similarly, an index i is part of a valley in nums if the closest non-equal neighbors of i are larger than nums[i]. Adjacent indices i and j are part of the same hill or valley if nums[i] == nums[j]. \nExample 14: \nLeetCode Problem #2211\nTitle: Count Collisions on a Road\nDescription:\nThere are n cars on an infinitely long road. The cars are numbered from 0 to n - 1 from left to right and each car is present at a unique point. \nExample 15: \nLeetCode Problem #2212\nTitle: Maximum Points in an Archery Competition\nDescription:\nAlice and Bob are opponents in an archery competition. The competition has set the following rules:...\n\nExample 16: \nLeetCode Problem #2213\nTitle: Longest Substring of One Repeating Character\nDescription:\nYou are given a 0-indexed string s. You are also given a 0-indexed string queryCharacters of length k and a 0-indexed array of integer indices queryIndices of length k, both of which are used to describe k queries. \nExample 17: \nLeetCode Problem #2215\nTitle: Find the Difference of Two Arrays\nDescription:\nGiven two 0-indexed integer arrays nums1 and nums2, return a list answer of size 2 where:...\n\nExample 18: \nLeetCode Problem #2216\nTitle: Minimum Deletions to Make Array Beautiful\nDescription:\nYou are given a 0-indexed integer array nums. The array nums is beautiful if:...\n\nExample 19: \nLeetCode Problem #2217\nTitle: Find Palindrome With Fixed Length\nDescription:\nGiven an integer array queries and a positive integer intLength, return an array answer where answer[i] is either the queries[i] th smallest positive palindrome of length intLength or -1 if no such palindrome exists. \nExample 20: \nLeetCode Problem #2218\nTitle: Maximum Value of K Coins From Piles\nDescription:\nThere are n piles of coins on a table. Each pile consists of a positive number of coins of assorted denominations. ", "expected_response": "Example 21: \nLeetCode Problem #2220\nTitle: Minimum Bit Flips to Convert Number\nDescription:\nA bit flip of a number x is choosing a bit in the binary representation of x and flipping it from either 0 to 1 or 1 to 0. \nExample 22: \nLeetCode Problem #2221\nTitle: Find Triangular Sum of an Array\nDescription:\nYou are given a 0-indexed integer array nums, where nums[i] is a digit between 0 and 9 ( inclusive ). \nExample 23: \nLeetCode Problem #2222\nTitle: Number of Ways to Select Buildings\nDescription:\nYou are given a 0-indexed binary string s which represents the types of buildings along a street where:...\n\nExample 24: \nLeetCode Problem #2223\nTitle: Sum of Scores of Built Strings\nDescription:\nYou are building a string s of length n one character at a time, prepending each new character to the front of the string. The strings are labeled from 1 to n, where the string with length i is labeled s i. \nExample 25: \nLeetCode Problem #2224\nTitle: Minimum Number of Operations to Convert Time\nDescription:\nYou are given two strings current and correct representing two 24-hour times. \nExample 26: \nLeetCode Problem #2225\nTitle: Find Players With Zero or One Losses\nDescription:\nYou are given an integer array matches where matches[i] = [winner i, loser i ] indicates that the player winner i defeated player loser i in a match. \nExample 27: \nLeetCode Problem #2226\nTitle: Maximum Candies Allocated to K Children\nDescription:\nYou are given a 0-indexed integer array candies. Each element in the array denotes a pile of candies of size candies[i]. You can divide each pile into any number of sub piles, but you cannot merge two piles together. \nExample 28: \nLeetCode Problem #2227\nTitle: Encrypt and Decrypt Strings\nDescription:\nYou are given a character array keys containing unique characters and a string array values containing strings of length 2. You are also given another string array dictionary that contains all permitted original strings after decryption. You should implement a data structure that can encrypt or decrypt a 0-indexed string. \nExample 29: \nLeetCode Problem #2231\nTitle: Largest Number After Digit Swaps by Parity\nDescription:\nYou are given a positive integer num. You may swap any two digits of num that have the same parity (i. e. both odd digits or both even digits). \nExample 30: \nLeetCode Problem #2232\nTitle: Minimize Result by Adding Parentheses to Expression\nDescription:\nYou are given a 0-indexed string expression of the form \"<num1>+<num2>\" where <num1> and <num2> represent positive integers. \nExample 31: \nLeetCode Problem #2233\nTitle: Maximum Product After K Increments\nDescription:\nYou are given an array of non-negative integers nums and an integer k. In one operation, you may choose any element from nums and increment it by 1. \nExample 32: \nLeetCode Problem #2234\nTitle: Maximum Total Beauty of the Gardens\nDescription:\nAlice is a caretaker of n gardens and she wants to plant flowers to maximize the total beauty of all her gardens. \nExample 33: \nLeetCode Problem #2235\nTitle: Add Two Integers\nDescription:\nGiven two integers num1 and num2, return the sum of the two integers. \nExample 34: \nLeetCode Problem #2236\nTitle: Root Equals Sum of Children\nDescription:\nYou are given the root of a binary tree that consists of exactly 3 nodes: the root, its left child, and its right child. \nExample 35: \nLeetCode Problem #2239\nTitle: Find Closest Number to Zero\nDescription:\nGiven an integer array nums of size n, return the number with the value closest to 0 in nums. If there are multiple answers, return the number with the largest value. \nExample 36: \nLeetCode Problem #2240\nTitle: Number of Ways to Buy Pens and Pencils\nDescription:\nYou are given an integer total indicating the amount of money you have. You are also given two integers cost1 and cost2 indicating the price of a pen and pencil respectively. You can spend part or all of your money to buy multiple quantities (or none) of each kind of writing utensil. \nExample 37: \nLeetCode Problem #2241\nTitle: Design an ATM Machine\nDescription:\nThere is an ATM machine that stores banknotes of 5 denominations: 20, 50, 100, 200, and 500 dollars. Initially the ATM is empty. The user can use the machine to deposit or withdraw any amount of money. \nExample 38: \nLeetCode Problem #2242\nTitle: Maximum Score of a Node Sequence\nDescription:\nThere is an undirected graph with n nodes, numbered from 0 to n - 1. \nExample 39: \nLeetCode Problem #2243\nTitle: Calculate Digit Sum of a String\nDescription:\nYou are given a string s consisting of digits and an integer k. \nExample 40: \nLeetCode Problem #2244\nTitle: Minimum Rounds to Complete All Tasks\nDescription:\nYou are given a 0-indexed integer array tasks, where tasks[i] represents the difficulty level of a task. In each round, you can complete either 2 or 3 tasks of the same difficulty level. ", "iloc": 1701, "frontend_question_id": 2245.0, "n_pass": 1, "response": "Example 21: \nLeetCode Problem #2219\nTitle: Count Triangles in a Grid\nDescription:\nYou are given two integers n and m, representing the size of a grid. The grid consists of n x m points where each point is either empty or occupied by a triangle. \n\nExample 22: \nLeetCode Problem #2220\nTitle: Sort the Letters in the String\nDescription:\nYou are given a string s consisting of lowercase English letters. Sort the letters in s in non-decreasing order. \n\nExample 23: \nLeetCode Problem #2221\nTitle: Maximum Sum of Products\nDescription:\nYou are given two integer arrays nums1 and nums2 of length n. You want to maximize the sum of products of corresponding elements from both arrays. \n\nExample 24: \nLeetCode Problem #2222\nTitle: Maximum Length of a Concatenated String\nDescription:\nYou are given an array of strings arr. Find the maximum length of a concatenated string of unique characters chosen from the given array. \n\nExample 25: \nLeetCode Problem #2223\nTitle: Remove Duplicates from the String\nDescription:\nYou are given a string s consisting of lowercase English letters. Remove all duplicate letters from s. \n\nExample 26: \nLeetCode Problem #2224\nTitle: Split the Array into Equal Sum Subarrays\nDescription:\nYou are given an integer array nums. You can split the array into multiple non-empty subarrays. Split the array such that the sum of each subarray is equal. \n\nExample 27: \nLeetCode Problem #2225\nTitle: Find Two Digits that Add up to a Target\nDescription:\nYou are given an array of integers nums and an integer target. Find two distinct digits in nums such that their sum equals target. \n\nExample 28: \nLeetCode Problem #2226\nTitle: Calculate Maximum Coordination Ratio\nDescription:\nYou are given an integer array nums. The coordination ratio of a nonempty subarray of nums is defined as the maximum value of nums in that subarray divided by the minimum value of nums in that subarray. \n\nExample 29: \nLeetCode Problem #2227\nTitle: Count the Number of Triangles\nDescription:\nGiven an integer array nums, return the number of triplets i, j, k such that i < j < k and nums[i] + nums[j] > nums[k]. \n\nExample 30: \nLeetCode Problem #2228\nTitle: Find the Maximum Product of Two Numbers\nDescription:\nYou are given an integer array nums. Find the maximum possible product of any two numbers in the array. \n\nExample 31: \nLeetCode Problem #2229\nTitle: Reverse Subarray to Maximize Array Value\nDescription:\nYou are given an integer array nums. You can perform one operation on the array by choosing a non-empty subarray and reversing its order. \n\nExample 32: \nLeetCode Problem #2230\nTitle: Count Bases of Trie File System\nDescription:\nDesign a file system that uses trie data structure to store the directory and file names. \n\nExample 33: \nLeetCode Problem #2231\nTitle: Maximum Difference Between Increasing Elements\nDescription:\nYou are given an integer array nums. Return the maximum difference between any two increasing elements in nums. \n\nExample 34: \nLeetCode Problem #2232\nTitle: Count Numbers With Unique Digits\nDescription:\nGiven an integer n, return the count of all numbers with unique digits as number of digits. \n\nExample 35: \nLeetCode Problem #2233\nTitle: Maximum Possible Consecutive Subarray Sum\nDescription:\nYou are given an integer array nums. Find the maximum possible value of the sum of a non-empty subarray of nums such that no two elements in the subarray are adjacent in the original array. \n\nExample 36: \nLeetCode Problem #2234\nTitle: Smallest Missing Positive Integer\nDescription:\nYou are given an integer array nums. Find the smallest missing positive integer that does not appear in nums. \n\nExample 37: \nLeetCode Problem #2235\nTitle: Maximum Frequency of a Subsequence\nDescription:\nYou are given a string s and an array of strings words. Find the maximum possible frequency of a subsequence of s that is equal to one of the strings in words. \n\nExample 38: \nLeetCode Problem #2236\nTitle: Merge Intervals with Minimum Span\nDescription:\nYou are given a 2D integer array intervals where intervals[i] = [start i, end i ] represents an interval. \n\nExample 39: \nLeetCode Problem #2237\nTitle: Find Unique Substrings Using Pieces of a String\nDescription:\nYou are given a string s and an array of strings pieces. Return the number of unique substrings of s that can be formed using the strings in pieces. \n\nExample 40: \nLeetCode Problem #2238\nTitle: Minimum Removals to Make a Array Non-Increasing\nDescription:\nYou are given an integer array nums. You want to make the array non-increasing by removing at most one element from it. \n\nExample 41: \nLeetCode Problem #2239\nTitle: Count Largest Group\nDescription:\nYou are given an integer n. You have to count the number of groups of numbers from 1 to n inclusive, such that the sum of digits of each number in a group is equal. \n\nExample 42: \nLeetCode Problem #2240\nTitle: Maximum Number of Substrings With Unique Characters\nDescription:\nYou are given a string s. Return the maximum number of substrings of s that can be formed such that every substring has unique characters. \n\nExample 43: \nLeetCode Problem #2241\nTitle: Minimum Difference Between Sorted Arrays\nDescription:\nYou are given two sorted arrays nums1 and nums2 of distinct integers. Find the minimum difference between any two elements from the two arrays. \n\nExample 44: \nLeetCode Problem #2242\nTitle: Count the Number of Strings for Each Character\nDescription:\nYou are given a string s. Count the number of strings t of length m, where t[i] is the count of character i in string s minus the count of character i in string t for every 0 <= i < 26. \n\nExample 45: \nLeetCode Problem #2243\nTitle: Maximum Equality by Equality Swaps\nDescription:\nYou are given two strings s1 and s2 of equal length n. \n\nExample 46: \nLeetCode Problem #2244\nTitle: Minimum Changes to Make an Array Increasing\nDescription:\nYou are given an integer array nums. In one move, you can replace any element of nums with any positive integer. \n\nExample 47: \nLeetCode Problem #2245\nTitle: Find the Number of Subtrings That Are Palindromes\nDescription:\nGiven a string s, return the number of palindromic substrings in s. \n\nExample 48: \nLeetCode Problem #2246\nTitle: Calculate the Minimum Average Salary\nDescription:\nYou are given an integer array nums. Find the minimum average salary among all possible subarrays of nums. \n\nExample 49: \nLeetCode Problem #2247\nTitle: Count Prime Quadruplets\nDescription:\nYou are given an integer n. Return the number of prime quadruplets. \n\nExample 50: \nLeetCode Problem #2248\nTitle: Split Array into Non-empty Subsets\nDescription:\nYou are given an integer array nums and an integer k. Split the array into k non-empty subsets such that the sum of the maximum element in each subset is minimized.", "cleaned_response": " \nCount Triangles in a Grid\n\nYou are given two integers n and m, representing the size of a grid. The grid consists of n x m points where each point is either empty or occupied by a triangle. \n\n \nSort the Letters in the String\n\nYou are given a string s consisting of lowercase English letters. Sort the letters in s in non-decreasing order. \n\n \nMaximum Sum of Products\n\nYou are given two integer arrays nums1 and nums2 of length n. You want to maximize the sum of products of corresponding elements from both arrays. \n\n \nMaximum Length of a Concatenated String\n\nYou are given an array of strings arr. Find the maximum length of a concatenated string of unique characters chosen from the given array. \n\n \nRemove Duplicates from the String\n\nYou are given a string s consisting of lowercase English letters. Remove all duplicate letters from s. \n\n \nSplit the Array into Equal Sum Subarrays\n\nYou are given an integer array nums. You can split the array into multiple non-empty subarrays. Split the array such that the sum of each subarray is equal. \n\n \nFind Two Digits that Add up to a Target\n\nYou are given an array of integers nums and an integer target. Find two distinct digits in nums such that their sum equals target. \n\n \nCalculate Maximum Coordination Ratio\n\nYou are given an integer array nums. The coordination ratio of a nonempty subarray of nums is defined as the maximum value of nums in that subarray divided by the minimum value of nums in that subarray. \n\n \nCount the Number of Triangles\n\nGiven an integer array nums, return the number of triplets i, j, k such that i < j < k and nums[i] + nums[j] > nums[k]. \n\n \nFind the Maximum Product of Two Numbers\n\nYou are given an integer array nums. Find the maximum possible product of any two numbers in the array. \n\n \nReverse Subarray to Maximize Array Value\n\nYou are given an integer array nums. You can perform one operation on the array by choosing a non-empty subarray and reversing its order. \n\n \nCount Bases of Trie File System\n\nDesign a file system that uses trie data structure to store the directory and file names. \n\n \nMaximum Difference Between Increasing Elements\n\nYou are given an integer array nums. Return the maximum difference between any two increasing elements in nums. \n\n \nCount Numbers With Unique Digits\n\nGiven an integer n, return the count of all numbers with unique digits as number of digits. \n\n \nMaximum Possible Consecutive Subarray Sum\n\nYou are given an integer array nums. Find the maximum possible value of the sum of a non-empty subarray of nums such that no two elements in the subarray are adjacent in the original array. \n\n \nSmallest Missing Positive Integer\n\nYou are given an integer array nums. Find the smallest missing positive integer that does not appear in nums. \n\n \nMaximum Frequency of a Subsequence\n\nYou are given a string s and an array of strings words. Find the maximum possible frequency of a subsequence of s that is equal to one of the strings in words. \n\n \nMerge Intervals with Minimum Span\n\nYou are given a 2D integer array intervals where intervals[i] = [start i, end i ] represents an interval. \n\n \nFind Unique Substrings Using Pieces of a String\n\nYou are given a string s and an array of strings pieces. Return the number of unique substrings of s that can be formed using the strings in pieces. \n\n \nMinimum Removals to Make a Array Non-Increasing\n\nYou are given an integer array nums. You want to make the array non-increasing by removing at most one element from it. \n\n \nCount Largest Group\n\nYou are given an integer n. You have to count the number of groups of numbers from 1 to n inclusive, such that the sum of digits of each number in a group is equal. \n\n \nMaximum Number of Substrings With Unique Characters\n\nYou are given a string s. Return the maximum number of substrings of s that can be formed such that every substring has unique characters. \n\n \nMinimum Difference Between Sorted Arrays\n\nYou are given two sorted arrays nums1 and nums2 of distinct integers. Find the minimum difference between any two elements from the two arrays. \n\n \nCount the Number of Strings for Each Character\n\nYou are given a string s. Count the number of strings t of length m, where t[i] is the count of character i in string s minus the count of character i in string t for every 0 <= i < 26. \n\n \nMaximum Equality by Equality Swaps\n\nYou are given two strings s1 and s2 of equal length n. \n\n \nMinimum Changes to Make an Array Increasing\n\nYou are given an integer array nums. In one move, you can replace any element of nums with any positive integer. \n\n \nFind the Number of Subtrings That Are Palindromes\n\nGiven a string s, return the number of palindromic substrings in s. \n\n \nCalculate the Minimum Average Salary\n\nYou are given an integer array nums. Find the minimum average salary among all possible subarrays of nums. \n\n \nCount Prime Quadruplets\n\nYou are given an integer n. Return the number of prime quadruplets. \n\n \nSplit Array into Non-empty Subsets\n\nYou are given an integer array nums and an integer k. Split the array into k non-empty subsets such that the sum of the maximum element in each subset is minimized.", "similarity": 0.8118778973762638}
{"input_context": "Example 1: \nLeetCode Problem #2245\nTitle: Maximum Trailing Zeros in a Cornered Path\nDescription:\nYou are given a 2D integer array grid of size m x n, where each cell contains a positive integer. \nExample 2: \nLeetCode Problem #2246\nTitle: Longest Path With Different Adjacent Characters\nDescription:\nYou are given a tree (i. e. a connected, undirected graph that has no cycles) rooted at node 0 consisting of n nodes numbered from 0 to n - 1. The tree is represented by a 0-indexed array parent of size n, where parent[i] is the parent of node i. Since node 0 is the root, parent[0] == -1. \nExample 3: \nLeetCode Problem #2248\nTitle: Intersection of Multiple Arrays\nDescription:\nGiven a 2D integer array nums where nums[i] is a non-empty array of distinct positive integers, return the list of integers that are present in each array of nums sorted in ascending order. \nExample 4: \nLeetCode Problem #2249\nTitle: Count Lattice Points Inside a Circle\nDescription:\nGiven a 2D integer array circles where circles[i] = [x i, y i, r i ] represents the center (x i, y i ) and radius r i of the i th circle drawn on a grid, return the number of lattice points that are present inside at least one circle. \nExample 5: \nLeetCode Problem #2250\nTitle: Count Number of Rectangles Containing Each Point\nDescription:\nYou are given a 2D integer array rectangles where rectangles[i] = [l i, h i ] indicates that i th rectangle has a length of l i and a height of h i. You are also given a 2D integer array points where points[j] = [x j, y j ] is a point with coordinates (x j, y j ). \nExample 6: \nLeetCode Problem #2251\nTitle: Number of Flowers in Full Bloom\nDescription:\nYou are given a 0-indexed 2D integer array flowers, where flowers[i] = [start i, end i ] means the i th flower will be in full bloom from start i to end i ( inclusive ). You are also given a 0-indexed integer array people of size n, where poeple[i] is the time that the i th person will arrive to see the flowers. \nExample 7: \nLeetCode Problem #2255\nTitle: Count Prefixes of a Given String\nDescription:\nYou are given a string array words and a string s, where words[i] and s comprise only of lowercase English letters. \nExample 8: \nLeetCode Problem #2256\nTitle: Minimum Average Difference\nDescription:\nYou are given a 0-indexed integer array nums of length n. \nExample 9: \nLeetCode Problem #2257\nTitle: Count Unguarded Cells in the Grid\nDescription:\nYou are given two integers m and n representing a 0-indexed m x n grid. You are also given two 2D integer arrays guards and walls where guards[i] = [row i, col i ] and walls[j] = [row j, col j ] represent the positions of the i th guard and j th wall respectively. \nExample 10: \nLeetCode Problem #2258\nTitle: Escape the Spreading Fire\nDescription:\nYou are given a 0-indexed 2D integer array grid of size m x n which represents a field. Each cell has one of three values:...\n\nExample 11: \nLeetCode Problem #2259\nTitle: Remove Digit From Number to Maximize Result\nDescription:\nYou are given a string number representing a positive integer and a character digit. \nExample 12: \nLeetCode Problem #2260\nTitle: Minimum Consecutive Cards to Pick Up\nDescription:\nYou are given an integer array cards where cards[i] represents the value of the i th card. A pair of cards are matching if the cards have the same value. \nExample 13: \nLeetCode Problem #2261\nTitle: K Divisible Elements Subarrays\nDescription:\nGiven an integer array nums and two integers k and p, return the number of distinct subarrays which have at most k elements divisible by p. \nExample 14: \nLeetCode Problem #2262\nTitle: Total Appeal of A String\nDescription:\nThe appeal of a string is the number of distinct characters found in the string. \nExample 15: \nLeetCode Problem #2264\nTitle: Largest 3-Same-Digit Number in String\nDescription:\nYou are given a string num representing a large integer. An integer is good if it meets the following conditions:...\n\nExample 16: \nLeetCode Problem #2265\nTitle: Count Nodes Equal to Average of Subtree\nDescription:\nGiven the root of a binary tree, return the number of nodes where the value of the node is equal to the average of the values in its subtree. \nExample 17: \nLeetCode Problem #2266\nTitle: Count Number of Texts\nDescription:\nAlice is texting Bob using her phone. The mapping of digits to letters is shown in the figure below. \nExample 18: \nLeetCode Problem #2267\nTitle:  Check if There Is a Valid Parentheses String Path\nDescription:\nA parentheses string is a non-empty string consisting only of '(' and ')'. It is valid if any of the following conditions is true :...\n\nExample 19: \nLeetCode Problem #2269\nTitle: Find the K-Beauty of a Number\nDescription:\nThe k-beauty of an integer num is defined as the number of substrings of num when it is read as a string that meet the following conditions:...\n\nExample 20: \nLeetCode Problem #2270\nTitle: Number of Ways to Split Array\nDescription:\nYou are given a 0-indexed integer array nums of length n. ", "expected_response": "Example 21: \nLeetCode Problem #2271\nTitle: Maximum White Tiles Covered by a Carpet\nDescription:\nYou are given a 2D integer array tiles where tiles[i] = [l i, r i ] represents that every tile j in the range l i <= j <= r i is colored white. \nExample 22: \nLeetCode Problem #2272\nTitle: Substring With Largest Variance\nDescription:\nThe variance of a string is defined as the largest difference between the number of occurrences of any 2 characters present in the string. Note the two characters may or may not be the same. \nExample 23: \nLeetCode Problem #2273\nTitle: Find Resultant Array After Removing Anagrams\nDescription:\nYou are given a 0-indexed string array words, where words[i] consists of lowercase English letters. \nExample 24: \nLeetCode Problem #2274\nTitle: Maximum Consecutive Floors Without Special Floors\nDescription:\nAlice manages a company and has rented some floors of a building as office space. Alice has decided some of these floors should be special floors, used for relaxation only. \nExample 25: \nLeetCode Problem #2275\nTitle: Largest Combination With Bitwise AND Greater Than Zero\nDescription:\nThe bitwise AND of an array nums is the bitwise AND of all integers in nums. \nExample 26: \nLeetCode Problem #2276\nTitle: Count Integers in Intervals\nDescription:\nGiven an empty set of intervals, implement a data structure that can:...\n\nExample 27: \nLeetCode Problem #2278\nTitle: Percentage of Letter in String\nDescription:\nGiven a string s and a character letter, return the percentage of characters in s that equal letter rounded down to the nearest whole percent. \nExample 28: \nLeetCode Problem #2279\nTitle: Maximum Bags With Full Capacity of Rocks\nDescription:\nYou have n bags numbered from 0 to n - 1. You are given two 0-indexed integer arrays capacity and rocks. The i th bag can hold a maximum of capacity[i] rocks and currently contains rocks[i] rocks. You are also given an integer additionalRocks, the number of additional rocks you can place in any of the bags. \nExample 29: \nLeetCode Problem #2280\nTitle: Minimum Lines to Represent a Line Chart\nDescription:\nYou are given a 2D integer array stockPrices where stockPrices[i] = [day i, price i ] indicates the price of the stock on day day i is price i. A line chart is created from the array by plotting the points on an XY plane with the X-axis representing the day and the Y-axis representing the price and connecting adjacent points. One such example is shown below:...\n\nExample 30: \nLeetCode Problem #2281\nTitle: Sum of Total Strength of Wizards\nDescription:\nAs the ruler of a kingdom, you have an army of wizards at your command. \nExample 31: \nLeetCode Problem #2283\nTitle: Check if Number Has Equal Digit Count and Digit Value\nDescription:\nYou are given a 0-indexed string num of length n consisting of digits. \nExample 32: \nLeetCode Problem #2284\nTitle: Sender With Largest Word Count\nDescription:\nYou have a chat log of n messages. You are given two string arrays messages and senders where messages[i] is a message sent by senders[i]. \nExample 33: \nLeetCode Problem #2285\nTitle: Maximum Total Importance of Roads\nDescription:\nYou are given an integer n denoting the number of cities in a country. The cities are numbered from 0 to n - 1. \nExample 34: \nLeetCode Problem #2286\nTitle: Booking Concert Tickets in Groups\nDescription:\nA concert hall has n rows numbered from 0 to n - 1, each with m seats, numbered from 0 to m - 1. You need to design a ticketing system that can allocate seats in the following cases:...\n\nExample 35: \nLeetCode Problem #2287\nTitle: Rearrange Characters to Make Target String\nDescription:\nYou are given two 0-indexed strings s and target. You can take some letters from s and rearrange them to form new strings. \nExample 36: \nLeetCode Problem #2288\nTitle: Apply Discount to Prices\nDescription:\nA sentence is a string of single-space separated words where each word can contain digits, lowercase letters, and the dollar sign '$'. A word represents a price if it is a sequence of digits preceded by a dollar sign. \nExample 37: \nLeetCode Problem #2289\nTitle: Steps to Make Array Non-decreasing\nDescription:\nYou are given a 0-indexed integer array nums. In one step, remove all elements nums[i] where nums[i - 1] > nums[i] for all 0 < i < nums.length. \nExample 38: \nLeetCode Problem #2290\nTitle: Minimum Obstacle Removal to Reach Corner\nDescription:\nYou are given a 0-indexed 2D integer array grid of size m x n. Each cell has one of two values:...\n\nExample 39: \nLeetCode Problem #2293\nTitle: Min Max Game\nDescription:\nYou are given a 0-indexed integer array nums whose length is a power of 2. \nExample 40: \nLeetCode Problem #2294\nTitle: Partition Array Such That Maximum Difference Is K\nDescription:\nYou are given an integer array nums and an integer k. You may partition nums into one or more subsequences such that each element in nums appears in exactly one of the subsequences. ", "iloc": 1741, "frontend_question_id": 2295.0, "n_pass": 1, "response": "Example 21: \nLeetCode Problem #2271\nTitle: Find Missing Element in Array\nDescription:\nGiven an array of integers nums sorted in ascending order, find the missing element in the array.\n\nExample 22: \nLeetCode Problem #2272\nTitle: Maximal Rectangle Area\nDescription:\nGiven a 2D binary matrix filled with 0's and 1's, find the largest rectangle containing only 1's and return its area.\n\nExample 23: \nLeetCode Problem #2273\nTitle: Sum of Absolute Deviations in Sorted Array\nDescription:\nYou are given an integer array nums sorted in non-decreasing order. Find the sum of the absolute differences between every two consecutive elements in nums.\n\nExample 24: \nLeetCode Problem #2274\nTitle: Number of Unique Quadruplets\nDescription:\nGiven an integer array nums, return the number of unique quadruplets (a, b, c, d) such that a + b + c + d = target.\n\nExample 25: \nLeetCode Problem #2275\nTitle: Count of Substrings with All Ones\nDescription:\nGiven a binary string s, return the number of substrings of length k with all ones.\n\nExample 26: \nLeetCode Problem #2276\nTitle: Maximum Length of a Concatenated String with Unique Characters\nDescription:\nGiven an array of strings arr with unique strings, return the maximum possible length of a concatenation of these strings such that each character appears only once.\n\nExample 27: \nLeetCode Problem #2277\nTitle: Maximum Sum Obtained of Any Permutation\nDescription:\nWe have an array of integers nums, and an array queries where queries[i] = [x i, y i ].\nThe answer to the ith query is the maximum sum of any subarray of nums[x i , x i + 1 , ... , y i ] % (10 ^ 9 + 7).\n\nExample 28: \nLeetCode Problem #2278\nTitle: Maximum Product of Three Numbers\nDescription:\nGiven an integer array nums, find three numbers whose product is maximum and return the maximum product.\n\nExample 29: \nLeetCode Problem #2279\nTitle: Calculate Money in Leetcode Bank\nDescription:\nHercy wants to save money for his first car. He keeps his money in a bank with n containers in a row. Each container contains a number of coins.\n\nExample 30: \nLeetCode Problem #2280\nTitle: Largest Submatrix With Rearrangements\nDescription:\nYou are given a binary matrix matrix of size m x n, and you are allowed to rearrange the columns of the matrix in any order.\n\nExample 31:\nLeetCode Problem #2281\nTitle: Maximum Score From Removing Stones\nDescription:\nYou are playing a solitaire game with three piles of stones of sizes a, b, and c. Each turn, you must remove exactly two stones from one pile and move them to the pile with the next larger size.\n\nExample 32: \nLeetCode Problem #2282\nTitle: Maximum Product of Two Elements in an Array\nDescription:\nGiven the array of integers nums, you will choose two different indices i and j of that array. Return the maximum value of (nums[i] - 1) * (nums[j] - 1).\n\nExample 33:\nLeetCode Problem #2283\nTitle: Minimum Depth of Binary Tree\nDescription:\nGiven a binary tree, find its minimum depth.\n\nExample 34:\nLeetCode Problem #2284\nTitle: Subtree of Another Tree\nDescription:\nGiven the roots of two binary trees root and subRoot, return true if there is a subtree of root with the same structure and node values of subRoot and false otherwise.\n\nExample 35:\nLeetCode Problem #2285\nTitle: Maximum XOR With an Element From Array\nDescription:\nYou are given an array nums consisting of non-negative integers. You are also given a queries array, where queries[i] = [xi, mi] and xi and mi are non-negative integers.\n\nExample 36: \nLeetCode Problem #2286\nTitle: Minimum Deletion Cost to Avoid Repeating Letters\nDescription:\nGiven a string s and an array of integers cost where cost[i] is the cost of deleting the ith character in s.\n\nExample 37: \nLeetCode Problem #2287\nTitle: Count Good Meal\nDescription:\nA good meal is a meal that contains exactly two different food items with a sum of deliciousness equal to a power of two.\n\nExample 38: \nLeetCode Problem #2288\nTitle: Surface Area of 3D Shapes\nDescription:\nOn a N * N grid, we place some 1 * 1 * 1 cubes that are axis-aligned with the x, y, and z axes.\n\nExample 39: \nLeetCode Problem #2289\nTitle: Rearrange Spaces Between Words\nDescription:\nYou are given a string text of words that are placed among some number of spaces. Each word consists of one or more lowercase English letters and are separated by at least one space.\n\nExample 40: \nLeetCode Problem #2290\nTitle: Maximum Number of Removable Characters\nDescription:\nYou are given two strings s and p where p is a subsequence of s. You are also given an integer array removable containing distinct integers.\n\nExample 41: \nLeetCode Problem #2291\nTitle: Count Nodes with Even Valued Grandparent\nDescription:\nGiven the root of a binary tree, return the sum of values of nodes with even-valued grandparent.\n\nExample 42: \nLeetCode Problem #2292\nTitle: Minimum Group Flips to Make Binary Array Alternating\nDescription:\nGiven a binary array nums, you should delete one element from it.\n\nExample 43: \nLeetCode Problem #2293\nTitle: Decoded String at Index\nDescription:\nAn encoded string s is given. To find and write the decoded string to a tape, the encoded string is read one character at a time and the following steps are taken:\n\nExample 44: \nLeetCode Problem #2294\nTitle: Maximum Number of Visible Points\nDescription:\nYou are given an array points, an integer angle, and your location, where location = [x, y] represents your location on the Cartesian plane.\n\nExample 45: \nLeetCode Problem #2295\nTitle: Sum of Digits of String After Convert\nDescription:\nYou are given a string s consisting of lowercase English letters, and an integer k.\n\nExample 46: \nLeetCode Problem #2296\nTitle: Remove All Occurrences of substring\nDescription:\nGiven two strings s and part, perform the following operation on s until all occurrences of the substring part are removed:\n\nExample 47: \nLeetCode Problem #2297\nTitle: Number of Rounds You Can Play\nDescription:\nA new online video game has been released, and you are tasked with calculating how many complete rounds you can play out of the maximum possible during a given period of time.\n\nExample 48: \nLeetCode Problem #2298\nTitle: Count of Matches in Tournament\nDescription:\nYou are given an integer n, the number of teams in a tournament that has strange rules.\n\nExample 49: \nLeetCode Problem #2299\nTitle: Number of Good Ways to Split a String\nDescription:\nYou are given a string s, a split is called good if you can split s into 2 non-empty strings p and q where its concatenation is equal to s and the number of distinct letters in p and q are the same.\n\nExample 50: \nLeetCode Problem #2300\nTitle: Construct Binary Tree from Preorder and Inorder Traversal\nDescription:\nGiven preorder and inorder traversal of a tree, construct the binary tree.", "cleaned_response": " \nFind Missing Element in Array\n\nGiven an array of integers nums sorted in ascending order, find the missing element in the array.\n\n \nMaximal Rectangle Area\n\nGiven a 2D binary matrix filled with 0's and 1's, find the largest rectangle containing only 1's and return its area.\n\n \nSum of Absolute Deviations in Sorted Array\n\nYou are given an integer array nums sorted in non-decreasing order. Find the sum of the absolute differences between every two consecutive elements in nums.\n\n \nNumber of Unique Quadruplets\n\nGiven an integer array nums, return the number of unique quadruplets (a, b, c, d) such that a + b + c + d = target.\n\n \nCount of Substrings with All Ones\n\nGiven a binary string s, return the number of substrings of length k with all ones.\n\n \nMaximum Length of a Concatenated String with Unique Characters\n\nGiven an array of strings arr with unique strings, return the maximum possible length of a concatenation of these strings such that each character appears only once.\n\n \nMaximum Sum Obtained of Any Permutation\n\nWe have an array of integers nums, and an array queries where queries[i] = [x i, y i ].\nThe answer to the ith query is the maximum sum of any subarray of nums[x i , x i + 1 , ... , y i ] % (10 ^ 9 + 7).\n\n \nMaximum Product of Three Numbers\n\nGiven an integer array nums, find three numbers whose product is maximum and return the maximum product.\n\n \nCalculate Money in Leetcode Bank\n\nHercy wants to save money for his first car. He keeps his money in a bank with n containers in a row. Each container contains a number of coins.\n\n \nLargest Submatrix With Rearrangements\n\nYou are given a binary matrix matrix of size m x n, and you are allowed to rearrange the columns of the matrix in any order.\n\n\nMaximum Score From Removing Stones\n\nYou are playing a solitaire game with three piles of stones of sizes a, b, and c. Each turn, you must remove exactly two stones from one pile and move them to the pile with the next larger size.\n\n \nMaximum Product of Two Elements in an Array\n\nGiven the array of integers nums, you will choose two different indices i and j of that array. Return the maximum value of (nums[i] - 1) * (nums[j] - 1).\n\n\nMinimum Depth of Binary Tree\n\nGiven a binary tree, find its minimum depth.\n\n\nSubtree of Another Tree\n\nGiven the roots of two binary trees root and subRoot, return true if there is a subtree of root with the same structure and node values of subRoot and false otherwise.\n\n\nMaximum XOR With an Element From Array\n\nYou are given an array nums consisting of non-negative integers. You are also given a queries array, where queries[i] = [xi, mi] and xi and mi are non-negative integers.\n\n \nMinimum Deletion Cost to Avoid Repeating Letters\n\nGiven a string s and an array of integers cost where cost[i] is the cost of deleting the ith character in s.\n\n \nCount Good Meal\n\nA good meal is a meal that contains exactly two different food items with a sum of deliciousness equal to a power of two.\n\n \nSurface Area of 3D Shapes\n\nOn a N * N grid, we place some 1 * 1 * 1 cubes that are axis-aligned with the x, y, and z axes.\n\n \nRearrange Spaces Between Words\n\nYou are given a string text of words that are placed among some number of spaces. Each word consists of one or more lowercase English letters and are separated by at least one space.\n\n \nMaximum Number of Removable Characters\n\nYou are given two strings s and p where p is a subsequence of s. You are also given an integer array removable containing distinct integers.\n\n \nCount Nodes with Even Valued Grandparent\n\nGiven the root of a binary tree, return the sum of values of nodes with even-valued grandparent.\n\n \nMinimum Group Flips to Make Binary Array Alternating\n\nGiven a binary array nums, you should delete one element from it.\n\n \nDecoded String at Index\n\nAn encoded string s is given. To find and write the decoded string to a tape, the encoded string is read one character at a time and the following steps are taken:\n\n \nMaximum Number of Visible Points\n\nYou are given an array points, an integer angle, and your location, where location = [x, y] represents your location on the Cartesian plane.\n\n \nSum of Digits of String After Convert\n\nYou are given a string s consisting of lowercase English letters, and an integer k.\n\n \nRemove All Occurrences of substring\n\nGiven two strings s and part, perform the following operation on s until all occurrences of the substring part are removed:\n\n \nNumber of Rounds You Can Play\n\nA new online video game has been released, and you are tasked with calculating how many complete rounds you can play out of the maximum possible during a given period of time.\n\n \nCount of Matches in Tournament\n\nYou are given an integer n, the number of teams in a tournament that has strange rules.\n\n \nNumber of Good Ways to Split a String\n\nYou are given a string s, a split is called good if you can split s into 2 non-empty strings p and q where its concatenation is equal to s and the number of distinct letters in p and q are the same.\n\n \nConstruct Binary Tree from Preorder and Inorder Traversal\n\nGiven preorder and inorder traversal of a tree, construct the binary tree.", "similarity": 0.8231807728345658}
{"input_context": "Example 1: \nLeetCode Problem #2295\nTitle: Replace Elements in an Array\nDescription:\nYou are given a 0-indexed array nums that consists of n distinct positive integers. Apply m operations to this array, where in the i th operation you replace the number operations[i][0] with operations[i][1]. \nExample 2: \nLeetCode Problem #2296\nTitle: Design a Text Editor\nDescription:\nDesign a text editor with a cursor that can do the following:...\n\nExample 3: \nLeetCode Problem #2299\nTitle: Strong Password Checker II\nDescription:\nA password is said to be strong if it satisfies all the following criteria:...\n\nExample 4: \nLeetCode Problem #2300\nTitle: Successful Pairs of Spells and Potions\nDescription:\nYou are given two positive integer arrays spells and potions, of length n and m respectively, where spells[i] represents the strength of the i th spell and potions[j] represents the strength of the j th potion. \nExample 5: \nLeetCode Problem #2301\nTitle: Match Substring After Replacement\nDescription:\nYou are given two strings s and sub. You are also given a 2D character array mappings where mappings[i] = [old i, new i ] indicates that you may perform the following operation any number of times:...\n\nExample 6: \nLeetCode Problem #2302\nTitle: Count Subarrays With Score Less Than K\nDescription:\nThe score of an array is defined as the product of its sum and its length. \nExample 7: \nLeetCode Problem #2303\nTitle: Calculate Amount Paid in Taxes\nDescription:\nYou are given a 0-indexed 2D integer array brackets where brackets[i] = [upper i, percent i ] means that the i th tax bracket has an upper bound of upper i and is taxed at a rate of percent i. The brackets are sorted by upper bound (i. e. upper i-1 < upper i for 0 < i < brackets.length ). \nExample 8: \nLeetCode Problem #2304\nTitle: Minimum Path Cost in a Grid\nDescription:\nYou are given a 0-indexed m x n integer matrix grid consisting of distinct integers from 0 to m * n - 1. You can move in this matrix from a cell to any other cell in the next row. That is, if you are in cell (x, y) such that x < m - 1, you can move to any of the cells (x + 1, 0), (x + 1, 1),. . . , (x + 1, n - 1). Note that it is not possible to move from cells in the last row. \nExample 9: \nLeetCode Problem #2305\nTitle: Fair Distribution of Cookies\nDescription:\nYou are given an integer array cookies, where cookies[i] denotes the number of cookies in the i th bag. You are also given an integer k that denotes the number of children to distribute all the bags of cookies to. All the cookies in the same bag must go to the same child and cannot be split up. \nExample 10: \nLeetCode Problem #2306\nTitle: Naming a Company\nDescription:\nYou are given an array of strings ideas that represents a list of names to be used in the process of naming a company. The process of naming a company is as follows:...\n\nExample 11: \nLeetCode Problem #2309\nTitle: Greatest English Letter in Upper and Lower Case\nDescription:\nGiven a string of English letters s, return the greatest English letter which occurs as both a lowercase and uppercase letter in s. The returned letter should be in uppercase. If no such letter exists, return an empty string. \nExample 12: \nLeetCode Problem #2310\nTitle: Sum of Numbers With Units Digit K\nDescription:\nGiven two integers num and k, consider a set of positive integers with the following properties:...\n\nExample 13: \nLeetCode Problem #2311\nTitle: Longest Binary Subsequence Less Than or Equal to K\nDescription:\nYou are given a binary string s and a positive integer k. \nExample 14: \nLeetCode Problem #2312\nTitle: Selling Pieces of Wood\nDescription:\nYou are given two integers m and n that represent the height and width of a rectangular piece of wood. You are also given a 2D integer array prices, where prices[i] = [h i, w i, price i ] indicates you can sell a rectangular piece of wood of height h i and width w i for price i dollars. \nExample 15: \nLeetCode Problem #2315\nTitle: Count Asterisks\nDescription:\nYou are given a string s, where every two consecutive vertical bars '|' are grouped into a pair. In other words, the 1 st and 2 nd '|' make a pair, the 3 rd and 4 th '|' make a pair, and so forth. \nExample 16: \nLeetCode Problem #2316\nTitle: Count Unreachable Pairs of Nodes in an Undirected Graph\nDescription:\nYou are given an integer n. There is an undirected graph with n nodes, numbered from 0 to n - 1. You are given a 2D integer array edges where edges[i] = [a i, b i ] denotes that there exists an undirected edge connecting nodes a i and b i. \nExample 17: \nLeetCode Problem #2317\nTitle: Maximum XOR After Operations \nDescription:\nYou are given a 0-indexed integer array nums. In one operation, select any non-negative integer x and an index i, then update nums[i] to be equal to nums[i] AND (nums[i] XOR x). \nExample 18: \nLeetCode Problem #2318\nTitle: Number of Distinct Roll Sequences\nDescription:\nYou are given an integer n. You roll a fair 6-sided dice n times. Determine the total number of distinct sequences of rolls possible such that the following conditions are satisfied:...\n\nExample 19: \nLeetCode Problem #2319\nTitle: Check if Matrix Is X-Matrix\nDescription:\nA square matrix is said to be an X-Matrix if both of the following conditions hold:...\n\nExample 20: \nLeetCode Problem #2320\nTitle: Count Number of Ways to Place Houses\nDescription:\nThere is a street with n * 2 plots, where there are n plots on each side of the street. The plots on each side are numbered from 1 to n. On each plot, a house can be placed. ", "expected_response": "Example 21: \nLeetCode Problem #2321\nTitle: Maximum Score Of Spliced Array\nDescription:\nYou are given two 0-indexed integer arrays nums1 and nums2, both of length n. \nExample 22: \nLeetCode Problem #2322\nTitle: Minimum Score After Removals on a Tree\nDescription:\nThere is an undirected connected tree with n nodes labeled from 0 to n - 1 and n - 1 edges. \nExample 23: \nLeetCode Problem #2325\nTitle: Decode the Message\nDescription:\nYou are given the strings key and message, which represent a cipher key and a secret message, respectively. The steps to decode message are as follows:...\n\nExample 24: \nLeetCode Problem #2326\nTitle: Spiral Matrix IV\nDescription:\nYou are given two integers m and n, which represent the dimensions of a matrix. \nExample 25: \nLeetCode Problem #2327\nTitle: Number of People Aware of a Secret\nDescription:\nOn day 1, one person discovers a secret. \nExample 26: \nLeetCode Problem #2328\nTitle: Number of Increasing Paths in a Grid\nDescription:\nYou are given an m x n integer matrix grid, where you can move from a cell to any adjacent cell in all 4 directions. \nExample 27: \nLeetCode Problem #2331\nTitle: Evaluate Boolean Binary Tree\nDescription:\nYou are given the root of a full binary tree with the following properties:...\n\nExample 28: \nLeetCode Problem #2332\nTitle: The Latest Time to Catch a Bus\nDescription:\nYou are given a 0-indexed integer array buses of length n, where buses[i] represents the departure time of the i th bus. You are also given a 0-indexed integer array passengers of length m, where passengers[j] represents the arrival time of the j th passenger. All bus departure times are unique. All passenger arrival times are unique. \nExample 29: \nLeetCode Problem #2333\nTitle: Minimum Sum of Squared Difference\nDescription:\nYou are given two positive 0-indexed integer arrays nums1 and nums2, both of length n. \nExample 30: \nLeetCode Problem #2334\nTitle: Subarray With Elements Greater Than Varying Threshold\nDescription:\nYou are given an integer array nums and an integer threshold. \nExample 31: \nLeetCode Problem #2335\nTitle: Minimum Amount of Time to Fill Cups\nDescription:\nYou have a water dispenser that can dispense cold, warm, and hot water. Every second, you can either fill up 2 cups with different types of water, or 1 cup of any type of water. \nExample 32: \nLeetCode Problem #2336\nTitle: Smallest Number in Infinite Set\nDescription:\nYou have a set which contains all positive integers [1, 2, 3, 4, 5,. . . ]. \nExample 33: \nLeetCode Problem #2337\nTitle: Move Pieces to Obtain a String\nDescription:\nYou are given two strings start and target, both of length n. Each string consists only of the characters 'L', 'R', and '_' where:...\n\nExample 34: \nLeetCode Problem #2338\nTitle: Count the Number of Ideal Arrays\nDescription:\nYou are given two integers n and maxValue, which are used to describe an ideal array. \nExample 35: \nLeetCode Problem #2341\nTitle: Maximum Number of Pairs in Array\nDescription:\nYou are given a 0-indexed integer array nums. In one operation, you may do the following:...\n\nExample 36: \nLeetCode Problem #2342\nTitle: Max Sum of a Pair With Equal Sum of Digits\nDescription:\nYou are given a 0-indexed array nums consisting of positive integers. You can choose two indices i and j, such that i != j, and the sum of digits of the number nums[i] is equal to that of nums[j]. \nExample 37: \nLeetCode Problem #2343\nTitle: Query Kth Smallest Trimmed Number\nDescription:\nYou are given a 0-indexed array of strings nums, where each string is of equal length and consists of only digits. \nExample 38: \nLeetCode Problem #2344\nTitle: Minimum Deletions to Make Array Divisible\nDescription:\nYou are given two positive integer arrays nums and numsDivide. You can delete any number of elements from nums. \nExample 39: \nLeetCode Problem #2347\nTitle: Best Poker Hand\nDescription:\nYou are given an integer array ranks and a character array suits. You have 5 cards where the i th card has a rank of ranks[i] and a suit of suits[i]. \nExample 40: \nLeetCode Problem #2348\nTitle: Number of Zero-Filled Subarrays\nDescription:\nGiven an integer array nums, return the number of subarrays filled with 0. ", "iloc": 1781, "frontend_question_id": 2349.0, "n_pass": 1, "response": "Example 21: \nLeetCode Problem #2321\nTitle: Maximum Points in a Plane\nDescription:\nYou are given an array points where points[i] = [x i, y i ] represents the coordinates of the i th point on a 2D plane. Find the maximum number of points that lie on the same straight line. \n\nExample 22: \nLeetCode Problem #2322\nTitle: Group Anagrams Together\nDescription:\nGiven an array of strings strs, group the anagrams together. Return the grouped anagrams in any order. \n\nExample 23: \nLeetCode Problem #2323\nTitle: Sort Characters By Frequency\nDescription:\nGiven a string s, sort it in decreasing order based on the frequency of the characters. If there are multiple valid solutions, return any of them. \n\nExample 24: \nLeetCode Problem #2324\nTitle: Maximal Square\nDescription:\nGiven an m x n binary matrix filled with 0's and 1's, find the largest square containing only 1's and return its area. \n\nExample 25: \nLeetCode Problem #2325\nTitle: Implement Trie (Prefix Tree)\nDescription:\nImplement a trie with insert, search, and startsWith methods. \n\nExample 26: \nLeetCode Problem #2326\nTitle: Maximum Subarray\nDescription:\nGiven an integer array nums, find the contiguous subarray (containing at least one number) which has the largest sum and return its sum. \n\nExample 27: \nLeetCode Problem #2327\nTitle: Unique Paths\nDescription:\nA robot is located at the top-left corner of a m x n grid. The robot can only move either down or right at any point in time. The robot is trying to reach the bottom-right corner of the grid. How many possible unique paths are there? \n\nExample 28: \nLeetCode Problem #2328\nTitle: Merge Intervals\nDescription:\nGiven an array of intervals where intervals[i] = [start i, end i ], merge all overlapping intervals, and return an array of the non-overlapping intervals that cover all the intervals in the input. \n\nExample 29: \nLeetCode Problem #2329\nTitle: Find the Duplicate Number\nDescription:\nGiven an array of integers nums containing n + 1 integers where each integer is in the range [1, n] inclusive, prove that at least one duplicate number must exist in nums. Assume that there is only one duplicate number, find the duplicate one. \n\nExample 30: \nLeetCode Problem #2330\nTitle: Maximum Depth of Binary Tree\nDescription:\nGiven the root of a binary tree, return its maximum depth. A binary tree's maximum depth is the number of nodes along the longest path from the root node down to the farthest leaf node. \n\nExample 31: \nLeetCode Problem #2331\nTitle: Longest Palindromic Substring\nDescription:\nGiven a string s, return the longest palindromic substring in s. \n\nExample 32: \nLeetCode Problem #2332\nTitle: Reverse Linked List\nDescription:\nGiven the head of a singly linked list, reverse the list, and return the reversed list. \n\nExample 33: \nLeetCode Problem #2333\nTitle: Implement Queue using Stacks\nDescription:\nImplement a first in first out (FIFO) queue using only two stacks. The implemented queue should support all the functions of a normal queue (push, peek, pop, and empty). \n\nExample 34: \nLeetCode Problem #2334\nTitle: Kth Largest Element in an Array\nDescription:\nGiven an integer array nums and an integer k, return the kth largest element in the array. Note that it is the kth largest element in the sorted order, not the kth distinct element. \n\nExample 35: \nLeetCode Problem #2335\nTitle: Best Time to Buy and Sell Stock\nDescription:\nYou are given an array prices where prices[i] is the price of a given stock on the ith day. You want to maximize your profit by choosing a single day to buy one stock and choosing a different day in the future to sell that stock. Return the maximum profit you can achieve from this transaction. If you cannot achieve any profit, return 0. \n\nExample 36: \nLeetCode Problem #2336\nTitle: Climbing Stairs\nDescription:\nYou are climbing a staircase. It takes n steps to reach the top. Each time you can either climb 1 or 2 steps. In how many distinct ways can you climb to the top? \n\nExample 37: \nLeetCode Problem #2337\nTitle: Valid Anagram\nDescription:\nGiven two strings s and t, return true if t is an anagram of s, and false otherwise. \n\nExample 38: \nLeetCode Problem #2338\nTitle: Binary Tree Inorder Traversal\nDescription:\nGiven the root of a binary tree, return the inorder traversal of its nodes' values. \n\nExample 39: \nLeetCode Problem #2339\nTitle: Valid Parentheses\nDescription:\nGiven a string s containing just the characters '(', ')', '{', '}', '[' and ']', determine if the input string is valid. \n\nExample 40: \nLeetCode Problem #2340\nTitle: Two Sum\nDescription:\nGiven an array of integers nums and an integer target, return indices of the two numbers such that they add up to target. You may assume that each input would have exactly one solution, and you may not use the same element twice.", "cleaned_response": " \nMaximum Points in a Plane\n\nYou are given an array points where points[i] = [x i, y i ] represents the coordinates of the i th point on a 2D plane. Find the maximum number of points that lie on the same straight line. \n\n \nGroup Anagrams Together\n\nGiven an array of strings strs, group the anagrams together. Return the grouped anagrams in any order. \n\n \nSort Characters By Frequency\n\nGiven a string s, sort it in decreasing order based on the frequency of the characters. If there are multiple valid solutions, return any of them. \n\n \nMaximal Square\n\nGiven an m x n binary matrix filled with 0's and 1's, find the largest square containing only 1's and return its area. \n\n \nImplement Trie (Prefix Tree)\n\nImplement a trie with insert, search, and startsWith methods. \n\n \nMaximum Subarray\n\nGiven an integer array nums, find the contiguous subarray (containing at least one number) which has the largest sum and return its sum. \n\n \nUnique Paths\n\nA robot is located at the top-left corner of a m x n grid. The robot can only move either down or right at any point in time. The robot is trying to reach the bottom-right corner of the grid. How many possible unique paths are there? \n\n \nMerge Intervals\n\nGiven an array of intervals where intervals[i] = [start i, end i ], merge all overlapping intervals, and return an array of the non-overlapping intervals that cover all the intervals in the input. \n\n \nFind the Duplicate Number\n\nGiven an array of integers nums containing n + 1 integers where each integer is in the range [1, n] inclusive, prove that at least one duplicate number must exist in nums. Assume that there is only one duplicate number, find the duplicate one. \n\n \nMaximum Depth of Binary Tree\n\nGiven the root of a binary tree, return its maximum depth. A binary tree's maximum depth is the number of nodes along the longest path from the root node down to the farthest leaf node. \n\n \nLongest Palindromic Substring\n\nGiven a string s, return the longest palindromic substring in s. \n\n \nReverse Linked List\n\nGiven the head of a singly linked list, reverse the list, and return the reversed list. \n\n \nImplement Queue using Stacks\n\nImplement a first in first out (FIFO) queue using only two stacks. The implemented queue should support all the functions of a normal queue (push, peek, pop, and empty). \n\n \nKth Largest Element in an Array\n\nGiven an integer array nums and an integer k, return the kth largest element in the array. Note that it is the kth largest element in the sorted order, not the kth distinct element. \n\n \nBest Time to Buy and Sell Stock\n\nYou are given an array prices where prices[i] is the price of a given stock on the ith day. You want to maximize your profit by choosing a single day to buy one stock and choosing a different day in the future to sell that stock. Return the maximum profit you can achieve from this transaction. If you cannot achieve any profit, return 0. \n\n \nClimbing Stairs\n\nYou are climbing a staircase. It takes n steps to reach the top. Each time you can either climb 1 or 2 steps. In how many distinct ways can you climb to the top? \n\n \nValid Anagram\n\nGiven two strings s and t, return true if t is an anagram of s, and false otherwise. \n\n \nBinary Tree Inorder Traversal\n\nGiven the root of a binary tree, return the inorder traversal of its nodes' values. \n\n \nValid Parentheses\n\nGiven a string s containing just the characters '(', ')', '{', '}', '[' and ']', determine if the input string is valid. \n\n \nTwo Sum\n\nGiven an array of integers nums and an integer target, return indices of the two numbers such that they add up to target. You may assume that each input would have exactly one solution, and you may not use the same element twice.", "similarity": 0.8363400580985909}
{"input_context": "Example 1: \nLeetCode Problem #2349\nTitle: Design a Number Container System\nDescription:\nDesign a number container system that can do the following:...\n\nExample 2: \nLeetCode Problem #2350\nTitle: Shortest Impossible Sequence of Rolls\nDescription:\nYou are given an integer array rolls of length n and an integer k. You roll a k sided dice numbered from 1 to k, n times, where the result of the i th roll is rolls[i]. \nExample 3: \nLeetCode Problem #2351\nTitle: First Letter to Appear Twice\nDescription:\nGiven a string s consisting of lowercase English letters, return the first letter to appear twice. \nExample 4: \nLeetCode Problem #2352\nTitle: Equal Row and Column Pairs\nDescription:\nGiven a 0-indexed n x n integer matrix grid, return the number of pairs (r i, c j ) such that row r i and column c j are equal. \nExample 5: \nLeetCode Problem #2353\nTitle: Design a Food Rating System\nDescription:\nDesign a food rating system that can do the following:...\n\nExample 6: \nLeetCode Problem #2354\nTitle: Number of Excellent Pairs\nDescription:\nYou are given a 0-indexed positive integer array nums and a positive integer k. \nExample 7: \nLeetCode Problem #2357\nTitle: Make Array Zero by Subtracting Equal Amounts\nDescription:\nYou are given a non-negative integer array nums. In one operation, you must:...\n\nExample 8: \nLeetCode Problem #2358\nTitle: Maximum Number of Groups Entering a Competition\nDescription:\nYou are given a positive integer array grades which represents the grades of students in a university. You would like to enter all these students into a competition in ordered non-empty groups, such that the ordering meets the following conditions:...\n\nExample 9: \nLeetCode Problem #2359\nTitle: Find Closest Node to Given Two Nodes\nDescription:\nYou are given a directed graph of n nodes numbered from 0 to n - 1, where each node has at most one outgoing edge. \nExample 10: \nLeetCode Problem #2360\nTitle: Longest Cycle in a Graph\nDescription:\nYou are given a directed graph of n nodes numbered from 0 to n - 1, where each node has at most one outgoing edge. \nExample 11: \nLeetCode Problem #2363\nTitle: Merge Similar Items\nDescription:\nYou are given two 2D integer arrays, items1 and items2, representing two sets of items. Each array items has the following properties:...\n\nExample 12: \nLeetCode Problem #2364\nTitle: Count Number of Bad Pairs\nDescription:\nYou are given a 0-indexed integer array nums. A pair of indices (i, j) is a bad pair if i < j and j - i != nums[j] - nums[i]. \nExample 13: \nLeetCode Problem #2365\nTitle: Task Scheduler II\nDescription:\nYou are given a 0-indexed array of positive integers tasks, representing tasks that need to be completed in order, where tasks[i] represents the type of the i th task. \nExample 14: \nLeetCode Problem #2366\nTitle: Minimum Replacements to Sort the Array\nDescription:\nYou are given a 0-indexed integer array nums. In one operation you can replace any element of the array with any two elements that sum to it. \nExample 15: \nLeetCode Problem #2367\nTitle: Number of Arithmetic Triplets\nDescription:\nYou are given a 0-indexed, strictly increasing integer array nums and a positive integer diff. A triplet (i, j, k) is an arithmetic triplet if the following conditions are met:...\n\nExample 16: \nLeetCode Problem #2368\nTitle: Reachable Nodes With Restrictions\nDescription:\nThere is an undirected tree with n nodes labeled from 0 to n - 1 and n - 1 edges. \nExample 17: \nLeetCode Problem #2369\nTitle: Check if There is a Valid Partition For The Array\nDescription:\nYou are given a 0-indexed integer array nums. You have to partition the array into one or more contiguous subarrays. \nExample 18: \nLeetCode Problem #2370\nTitle: Longest Ideal Subsequence\nDescription:\nYou are given a string s consisting of lowercase letters and an integer k. We call a string t ideal if the following conditions are satisfied:...\n\nExample 19: \nLeetCode Problem #2373\nTitle: Largest Local Values in a Matrix\nDescription:\nYou are given an n x n integer matrix grid. \nExample 20: \nLeetCode Problem #2374\nTitle: Node With Highest Edge Score\nDescription:\nYou are given a directed graph with n nodes labeled from 0 to n - 1, where each node has exactly one outgoing edge. ", "expected_response": "Example 21: \nLeetCode Problem #2375\nTitle: Construct Smallest Number From DI String\nDescription:\nYou are given a 0-indexed string pattern of length n consisting of the characters 'I' meaning increasing and 'D' meaning decreasing. \nExample 22: \nLeetCode Problem #2376\nTitle: Count Special Integers\nDescription:\nWe call a positive integer special if all of its digits are distinct. \nExample 23: \nLeetCode Problem #2379\nTitle: Minimum Recolors to Get K Consecutive Black Blocks\nDescription:\nYou are given a 0-indexed string blocks of length n, where blocks[i] is either 'W' or 'B', representing the color of the i th block. The characters 'W' and 'B' denote the colors white and black, respectively. \nExample 24: \nLeetCode Problem #2380\nTitle: Time Needed to Rearrange a Binary String\nDescription:\nYou are given a binary string s. In one second, all occurrences of \"01\" are simultaneously replaced with \"10\". This process repeats until no occurrences of \"01\" exist. \nExample 25: \nLeetCode Problem #2381\nTitle: Shifting Letters II\nDescription:\nYou are given a string s of lowercase English letters and a 2D integer array shifts where shifts[i] = [start i, end i, direction i ]. For every i, shift the characters in s from the index start i to the index end i ( inclusive ) forward if direction i = 1, or shift the characters backward if direction i = 0. \nExample 26: \nLeetCode Problem #2382\nTitle: Maximum Segment Sum After Removals\nDescription:\nYou are given two 0-indexed integer arrays nums and removeQueries, both of length n. For the i th query, the element in nums at the index removeQueries[i] is removed, splitting nums into different segments. \nExample 27: \nLeetCode Problem #2383\nTitle: Minimum Hours of Training to Win a Competition\nDescription:\nYou are entering a competition, and are given two positive integers initialEnergy and initialExperience denoting your initial energy and initial experience respectively. \nExample 28: \nLeetCode Problem #2384\nTitle: Largest Palindromic Number\nDescription:\nYou are given a string num consisting of digits only. \nExample 29: \nLeetCode Problem #2385\nTitle: Amount of Time for Binary Tree to Be Infected\nDescription:\nYou are given the root of a binary tree with unique values, and an integer start. At minute 0, an infection starts from the node with value start. \nExample 30: \nLeetCode Problem #2386\nTitle: Find the K-Sum of an Array\nDescription:\nYou are given an integer array nums and a positive integer k. You can choose any subsequence of the array and sum all of its elements together. \nExample 31: \nLeetCode Problem #2389\nTitle: Longest Subsequence With Limited Sum\nDescription:\nYou are given an integer array nums of length n, and an integer array queries of length m. \nExample 32: \nLeetCode Problem #2390\nTitle: Removing Stars From a String\nDescription:\nYou are given a string s, which contains stars *. \nExample 33: \nLeetCode Problem #2391\nTitle: Minimum Amount of Time to Collect Garbage\nDescription:\nYou are given a 0-indexed array of strings garbage where garbage[i] represents the assortment of garbage at the i th house. garbage[i] consists only of the characters 'M', 'P' and 'G' representing one unit of metal, paper and glass garbage respectively. Picking up one unit of any type of garbage takes 1 minute. \nExample 34: \nLeetCode Problem #2392\nTitle: Build a Matrix With Conditions\nDescription:\nYou are given a positive integer k. You are also given:...\n\nExample 35: \nLeetCode Problem #2395\nTitle: Find Subarrays With Equal Sum\nDescription:\nGiven a 0-indexed integer array nums, determine whether there exist two subarrays of length 2 with equal sum. Note that the two subarrays must begin at different indices. \nExample 36: \nLeetCode Problem #2396\nTitle: Strictly Palindromic Number\nDescription:\nAn integer n is strictly palindromic if, for every base b between 2 and n - 2 ( inclusive ), the string representation of the integer n in base b is palindromic. \nExample 37: \nLeetCode Problem #2397\nTitle: Maximum Rows Covered by Columns\nDescription:\nYou are given a 0-indexed m x n binary matrix matrix and an integer numSelect, which denotes the number of distinct columns you must select from matrix. \nExample 38: \nLeetCode Problem #2398\nTitle: Maximum Number of Robots Within Budget\nDescription:\nYou have n robots. You are given two 0-indexed integer arrays, chargeTimes and runningCosts, both of length n. The i th robot costs chargeTimes[i] units to charge and costs runningCosts[i] units to run. You are also given an integer budget. \nExample 39: \nLeetCode Problem #2399\nTitle: Check Distances Between Same Letters\nDescription:\nYou are given a 0-indexed string s consisting of only lowercase English letters, where each letter in s appears exactly twice. You are also given a 0-indexed integer array distance of length 26. \nExample 40: \nLeetCode Problem #2400\nTitle: Number of Ways to Reach a Position After Exactly k Steps\nDescription:\nYou are given two positive integers startPos and endPos. Initially, you are standing at position startPos on an infinite number line. With one step, you can move either one position to the left, or one position to the right. ", "iloc": 1821, "frontend_question_id": 2401.0, "n_pass": 1, "response": "Example 21: \nLeetCode Problem #2375\nTitle: Second Largest Element in an Array\nDescription:\nYou are given an integer array nums. Find the second largest element in the array.\n\nExample 22: \nLeetCode Problem #2376\nTitle: Sum of Two Numbers\nDescription:\nYou are given an integer array nums and an integer target. Find two numbers in the array that add up to the target.\n\nExample 23: \nLeetCode Problem #2377\nTitle: Maximum Subarray Sum\nDescription:\nYou are given an integer array nums. Find the maximum sum of any contiguous subarray in the array.\n\nExample 24: \nLeetCode Problem #2378\nTitle: Find All Duplicates in an Array\nDescription:\nYou are given an integer array nums. Find all the elements that appear twice in the array.\n\nExample 25: \nLeetCode Problem #2379\nTitle: Merge Intervals\nDescription:\nYou are given a list of intervals. Merge all overlapping intervals.\n\nExample 26: \nLeetCode Problem #2380\nTitle: Missing Number\nDescription:\nYou are given an integer array nums. Find the missing number in the range from 0 to n.\n\nExample 27: \nLeetCode Problem #2381\nTitle: Two Sum\nDescription:\nYou are given an integer array nums and an integer target. Find two numbers in the array that add up to the target.\n\nExample 28: \nLeetCode Problem #2382\nTitle: Valid Parentheses\nDescription:\nYou are given a string s containing parentheses. Determine if the parentheses are valid.\n\nExample 29: \nLeetCode Problem #2383\nTitle: Reverse Integer\nDescription:\nYou are given an integer num. Reverse the digits of the integer.\n\nExample 30: \nLeetCode Problem #2384\nTitle: Palindrome Number\nDescription:\nYou are given an integer num. Determine if the number is a palindrome.\n\nExample 31: \nLeetCode Problem #2385\nTitle: Longest Common Prefix\nDescription:\nYou are given an array of strings. Find the longest common prefix among the strings.\n\nExample 32: \nLeetCode Problem #2386\nTitle: Valid Sudoku\nDescription:\nYou are given a 9x9 Sudoku board. Determine if it is valid.\n\nExample 33: \nLeetCode Problem #2387\nTitle: Climbing Stairs\nDescription:\nYou are climbing a staircase that has n steps. Count the number of distinct ways you can climb to the top.\n\nExample 34: \nLeetCode Problem #2388\nTitle: Valid Anagram\nDescription:\nYou are given two strings s and t. Determine if t is an anagram of s.\n\nExample 35: \nLeetCode Problem #2389\nTitle: Majority Element\nDescription:\nYou are given an integer array nums. Find the majority element in the array.\n\nExample 36: \nLeetCode Problem #2390\nTitle: Move Zeroes\nDescription:\nYou are given an integer array nums. Move all the zeros to the end of the array without changing the relative order of the non-zero elements.\n\nExample 37: \nLeetCode Problem #2391\nTitle: Best Time to Buy and Sell Stock\nDescription:\nYou are given an array prices where prices[i] is the price of a given stock on the i-th day. Find the maximum profit you can achieve.\n\nExample 38: \nLeetCode Problem #2392\nTitle: Reverse String\nDescription:\nYou are given a string s. Reverse the string.\n\nExample 39: \nLeetCode Problem #2393\nTitle: Implement Stack using Queues\nDescription:\nImplement a stack using queues.\n\nExample 40: \nLeetCode Problem #2394\nTitle: Valid Palindrome\nDescription:\nYou are given a string s. Determine if it is a palindrome, considering only alphanumeric characters and ignoring cases.\n\nExample 41: \nLeetCode Problem #2395\nTitle: Binary Search\nDescription:\nYou are given a sorted array nums and an integer target. Perform a binary search to find the target.\n\nExample 42: \nLeetCode Problem #2396\nTitle: Power of Three\nDescription:\nYou are given an integer n. Determine if it is a power of three.\n\nExample 43: \nLeetCode Problem #2397\nTitle: Reverse Linked List\nDescription:\nYou are given the head of a singly linked list. Reverse the list.\n\nExample 44: \nLeetCode Problem #2398\nTitle: Intersection of Two Arrays\nDescription:\nYou are given two integer arrays nums1 and nums2. Find their intersection.\n\nExample 45: \nLeetCode Problem #2399\nTitle: Maximum Depth of Binary Tree\nDescription:\nYou are given the root of a binary tree. Find the maximum depth of the tree.\n\nExample 46: \nLeetCode Problem #2400\nTitle: Implement Queue using Stacks\nDescription:\nImplement a queue using stacks.\n\nExample 47: \nLeetCode Problem #2401\nTitle: Plus One\nDescription:\nYou are given an integer array digits. Add one to the number represented by the array.\n\nExample 48: \nLeetCode Problem #2402\nTitle: Sum of Two Numbers II\nDescription:\nYou are given an array nums and an integer target. Find two numbers in the array that add up to the target.\n\nExample 49: \nLeetCode Problem #2403\nTitle: Remove Duplicates from Sorted Array\nDescription:\nYou are given an integer array nums. Remove the duplicates in-place such that each element appears only once and returns the new length.\n\nExample 50: \nLeetCode Problem #2404\nTitle: Single Number\nDescription:\nYou are given a non-empty array of integers nums. Find the number that appears only once.", "cleaned_response": " \nSecond Largest Element in an Array\n\nYou are given an integer array nums. Find the second largest element in the array.\n\n \nSum of Two Numbers\n\nYou are given an integer array nums and an integer target. Find two numbers in the array that add up to the target.\n\n \nMaximum Subarray Sum\n\nYou are given an integer array nums. Find the maximum sum of any contiguous subarray in the array.\n\n \nFind All Duplicates in an Array\n\nYou are given an integer array nums. Find all the elements that appear twice in the array.\n\n \nMerge Intervals\n\nYou are given a list of intervals. Merge all overlapping intervals.\n\n \nMissing Number\n\nYou are given an integer array nums. Find the missing number in the range from 0 to n.\n\n \nTwo Sum\n\nYou are given an integer array nums and an integer target. Find two numbers in the array that add up to the target.\n\n \nValid Parentheses\n\nYou are given a string s containing parentheses. Determine if the parentheses are valid.\n\n \nReverse Integer\n\nYou are given an integer num. Reverse the digits of the integer.\n\n \nPalindrome Number\n\nYou are given an integer num. Determine if the number is a palindrome.\n\n \nLongest Common Prefix\n\nYou are given an array of strings. Find the longest common prefix among the strings.\n\n \nValid Sudoku\n\nYou are given a 9x9 Sudoku board. Determine if it is valid.\n\n \nClimbing Stairs\n\nYou are climbing a staircase that has n steps. Count the number of distinct ways you can climb to the top.\n\n \nValid Anagram\n\nYou are given two strings s and t. Determine if t is an anagram of s.\n\n \nMajority Element\n\nYou are given an integer array nums. Find the majority element in the array.\n\n \nMove Zeroes\n\nYou are given an integer array nums. Move all the zeros to the end of the array without changing the relative order of the non-zero elements.\n\n \nBest Time to Buy and Sell Stock\n\nYou are given an array prices where prices[i] is the price of a given stock on the i-th day. Find the maximum profit you can achieve.\n\n \nReverse String\n\nYou are given a string s. Reverse the string.\n\n \nImplement Stack using Queues\n\nImplement a stack using queues.\n\n \nValid Palindrome\n\nYou are given a string s. Determine if it is a palindrome, considering only alphanumeric characters and ignoring cases.\n\n \nBinary Search\n\nYou are given a sorted array nums and an integer target. Perform a binary search to find the target.\n\n \nPower of Three\n\nYou are given an integer n. Determine if it is a power of three.\n\n \nReverse Linked List\n\nYou are given the head of a singly linked list. Reverse the list.\n\n \nIntersection of Two Arrays\n\nYou are given two integer arrays nums1 and nums2. Find their intersection.\n\n \nMaximum Depth of Binary Tree\n\nYou are given the root of a binary tree. Find the maximum depth of the tree.\n\n \nImplement Queue using Stacks\n\nImplement a queue using stacks.\n\n \nPlus One\n\nYou are given an integer array digits. Add one to the number represented by the array.\n\n \nSum of Two Numbers II\n\nYou are given an array nums and an integer target. Find two numbers in the array that add up to the target.\n\n \nRemove Duplicates from Sorted Array\n\nYou are given an integer array nums. Remove the duplicates in-place such that each element appears only once and returns the new length.\n\n \nSingle Number\n\nYou are given a non-empty array of integers nums. Find the number that appears only once.", "similarity": 0.795531752821001}
{"input_context": "Example 1: \nLeetCode Problem #2401\nTitle: Longest Nice Subarray\nDescription:\nYou are given an array nums consisting of positive integers. \nExample 2: \nLeetCode Problem #2402\nTitle: Meeting Rooms III\nDescription:\nYou are given an integer n. There are n rooms numbered from 0 to n - 1. \nExample 3: \nLeetCode Problem #2404\nTitle: Most Frequent Even Element\nDescription:\nGiven an integer array nums, return the most frequent even element. \nExample 4: \nLeetCode Problem #2405\nTitle: Optimal Partition of String\nDescription:\nGiven a string s, partition the string into one or more substrings such that the characters in each substring are unique. That is, no letter appears in a single substring more than once. \nExample 5: \nLeetCode Problem #2406\nTitle: Divide Intervals Into Minimum Number of Groups\nDescription:\nYou are given a 2D integer array intervals where intervals[i] = [left i, right i ] represents the inclusive interval [left i, right i ]. \nExample 6: \nLeetCode Problem #2407\nTitle: Longest Increasing Subsequence II\nDescription:\nYou are given an integer array nums and an integer k. \nExample 7: \nLeetCode Problem #2409\nTitle: Count Days Spent Together\nDescription:\nAlice and Bob are traveling to Rome for separate business meetings. \nExample 8: \nLeetCode Problem #2410\nTitle: Maximum Matching of Players With Trainers\nDescription:\nYou are given a 0-indexed integer array players, where players[i] represents the ability of the i th player. You are also given a 0-indexed integer array trainers, where trainers[j] represents the training capacity of the j th trainer. \nExample 9: \nLeetCode Problem #2411\nTitle: Smallest Subarrays With Maximum Bitwise OR\nDescription:\nYou are given a 0-indexed array nums of length n, consisting of non-negative integers. For each index i from 0 to n - 1, you must determine the size of the minimum sized non-empty subarray of nums starting at i ( inclusive ) that has the maximum possible bitwise OR. \nExample 10: \nLeetCode Problem #2412\nTitle: Minimum Money Required Before Transactions\nDescription:\nYou are given a 0-indexed 2D integer array transactions, where transactions[i] = [cost i, cashback i ]. \nExample 11: \nLeetCode Problem #2413\nTitle: Smallest Even Multiple\nDescription:\nGiven a positive integer n, return the smallest positive integer that is a multiple of both 2 and n. \nExample 12: \nLeetCode Problem #2414\nTitle: Length of the Longest Alphabetical Continuous Substring\nDescription:\nAn alphabetical continuous string is a string consisting of consecutive letters in the alphabet. In other words, it is any substring of the string \"abcdefghijklmnopqrstuvwxyz\". \nExample 13: \nLeetCode Problem #2415\nTitle: Reverse Odd Levels of Binary Tree\nDescription:\nGiven the root of a perfect binary tree, reverse the node values at each odd level of the tree. \nExample 14: \nLeetCode Problem #2416\nTitle: Sum of Prefix Scores of Strings\nDescription:\nYou are given an array words of size n consisting of non-empty strings. \nExample 15: \nLeetCode Problem #2418\nTitle: Sort the People\nDescription:\nYou are given an array of strings names, and an array heights that consists of distinct positive integers. Both arrays are of length n. \nExample 16: \nLeetCode Problem #2419\nTitle: Longest Subarray With Maximum Bitwise AND\nDescription:\nYou are given an integer array nums of size n. \nExample 17: \nLeetCode Problem #2420\nTitle: Find All Good Indices\nDescription:\nYou are given a 0-indexed integer array nums of size n and a positive integer k. \nExample 18: \nLeetCode Problem #2421\nTitle: Number of Good Paths\nDescription:\nThere is a tree (i. e. a connected, undirected graph with no cycles) consisting of n nodes numbered from 0 to n - 1 and exactly n - 1 edges. \nExample 19: \nLeetCode Problem #2423\nTitle: Remove Letter To Equalize Frequency\nDescription:\nYou are given a 0-indexed string word, consisting of lowercase English letters. You need to select one index and remove the letter at that index from word so that the frequency of every letter present in word is equal. \nExample 20: \nLeetCode Problem #2424\nTitle: Longest Uploaded Prefix\nDescription:\nYou are given a stream of n videos, each represented by a distinct number from 1 to n that you need to \"upload\" to a server. You need to implement a data structure that calculates the length of the longest uploaded prefix at various points in the upload process. ", "expected_response": "Example 21: \nLeetCode Problem #2425\nTitle: Bitwise XOR of All Pairings\nDescription:\nYou are given two 0-indexed arrays, nums1 and nums2, consisting of non-negative integers. There exists another array, nums3, which contains the bitwise XOR of all pairings of integers between nums1 and nums2 (every integer in nums1 is paired with every integer in nums2 exactly once ). \nExample 22: \nLeetCode Problem #2426\nTitle: Number of Pairs Satisfying Inequality\nDescription:\nYou are given two 0-indexed integer arrays nums1 and nums2, each of size n, and an integer diff. Find the number of pairs (i, j) such that:...\n\nExample 23: \nLeetCode Problem #2427\nTitle: Number of Common Factors\nDescription:\nGiven two positive integers a and b, return the number of common factors of a and b. \nExample 24: \nLeetCode Problem #2428\nTitle: Maximum Sum of an Hourglass\nDescription:\nYou are given an m x n integer matrix grid. \nExample 25: \nLeetCode Problem #2429\nTitle: Minimize XOR\nDescription:\nGiven two positive integers num1 and num2, find the positive integer x such that:...\n\nExample 26: \nLeetCode Problem #2430\nTitle: Maximum Deletions on a String\nDescription:\nYou are given a string s consisting of only lowercase English letters. In one operation, you can:...\n\nExample 27: \nLeetCode Problem #2432\nTitle: The Employee That Worked on the Longest Task\nDescription:\nThere are n employees, each with a unique id from 0 to n - 1. \nExample 28: \nLeetCode Problem #2433\nTitle: Find The Original Array of Prefix Xor\nDescription:\nYou are given an integer array pref of size n. Find and return the array arr of size n that satisfies :...\n\nExample 29: \nLeetCode Problem #2434\nTitle: Using a Robot to Print the Lexicographically Smallest String\nDescription:\nYou are given a string s and a robot that currently holds an empty string t. Apply one of the following operations until s and t are both empty :...\n\nExample 30: \nLeetCode Problem #2435\nTitle: Paths in Matrix Whose Sum Is Divisible by K\nDescription:\nYou are given a 0-indexed m x n integer matrix grid and an integer k. You are currently at position (0, 0) and you want to reach position (m - 1, n - 1) moving only down or right. \nExample 31: \nLeetCode Problem #2437\nTitle: Number of Valid Clock Times\nDescription:\nYou are given a string of length 5 called time, representing the current time on a digital clock in the format \"hh:mm\". The earliest possible time is \"00:00\" and the latest possible time is \"23:59\". \nExample 32: \nLeetCode Problem #2438\nTitle: Range Product Queries of Powers\nDescription:\nGiven a positive integer n, there exists a 0-indexed array called powers, composed of the minimum number of powers of 2 that sum to n. The array is sorted in non-decreasing order, and there is only one way to form the array. \nExample 33: \nLeetCode Problem #2439\nTitle: Minimize Maximum of Array\nDescription:\nYou are given a 0-indexed array nums comprising of n non-negative integers. \nExample 34: \nLeetCode Problem #2440\nTitle: Create Components With Same Value\nDescription:\nThere is an undirected tree with n nodes labeled from 0 to n - 1. \nExample 35: \nLeetCode Problem #2441\nTitle: Largest Positive Integer That Exists With Its Negative\nDescription:\nGiven an integer array nums that does not contain any zeros, find the largest positive integer k such that -k also exists in the array. \nExample 36: \nLeetCode Problem #2442\nTitle: Count Number of Distinct Integers After Reverse Operations\nDescription:\nYou are given an array nums consisting of positive integers. \nExample 37: \nLeetCode Problem #2443\nTitle: Sum of Number and Its Reverse\nDescription:\nGiven a non-negative integer num, return true if num can be expressed as the sum of any non-negative integer and its reverse, or false otherwise. \nExample 38: \nLeetCode Problem #2444\nTitle: Count Subarrays With Fixed Bounds\nDescription:\nYou are given an integer array nums and two integers minK and maxK. \nExample 39: \nLeetCode Problem #2446\nTitle: Determine if Two Events Have Conflict\nDescription:\nYou are given two arrays of strings that represent two inclusive events that happened on the same day, event1 and event2, where:...\n\nExample 40: \nLeetCode Problem #2447\nTitle: Number of Subarrays With GCD Equal to K\nDescription:\nGiven an integer array nums and an integer k, return the number of subarrays of nums where the greatest common divisor of the subarray's elements is k. ", "iloc": 1861, "frontend_question_id": 2448.0, "n_pass": 1, "response": "Example 21: \nLeetCode Problem #2425\nTitle: Maximum Score of Removing Duplicates\nDescription:\nYou are given a string s consisting of lowercase English letters. You can perform the following operation any number of times: choose a non-empty substring from s and remove all occurrences of it from s. \nExample 22: \nLeetCode Problem #2426\nTitle: Group Anagrams Together\nDescription:\nYou are given an array of strings strs. \nExample 23: \nLeetCode Problem #2427\nTitle: Median of Two Sorted Arrays\nDescription:\nGiven two sorted arrays nums1 and nums2 of size m and n respectively, return the median of the two sorted arrays. \nExample 24: \nLeetCode Problem #2428\nTitle: Shortest Path With Largest Minimum Value\nDescription:\nYou are given a 2D integer matrix grid, where each grid[i][j] represents the height of the cell at position (i, j). \nExample 25: \nLeetCode Problem #2429\nTitle: Find Nearest Right Node in Binary Tree\nDescription:\nGiven the root of a binary tree and a node u in the tree, return the nearest node on the right of u (i.e., the next node on the same level as u but on the right side). \nExample 26: \nLeetCode Problem #2430\nTitle: Maximum Number of Visible Points\nDescription:\nYou are given an array points, an integer angle, and your location, where points[i] = [xi, yi] represents a point on the 2D plane. \nExample 27: \nLeetCode Problem #2431\nTitle: People Whose List of Favorite Companies Is Not a Subset of Another List\nDescription:\nA company group is a group of employees that works for the same company. \nExample 28: \nLeetCode Problem #2432\nTitle: Maximum Area of a Piece of Cake After Horizontal and Vertical Cuts\nDescription:\nYou are given a rectangular cake of size h x w and two arrays of integers horizontalCuts and verticalCuts where horizontalCuts[i] represents the distance from the top of the rectangular cake to the ith horizontal cut and similarly, verticalCuts[j] represents the distance from the left of the rectangular cake to the jth vertical cut. \nExample 29: \nLeetCode Problem #2433\nTitle: Maximum Difference Between Increasing Elements\nDescription:\nGiven a 0-indexed integer array nums of size n, find the maximum difference between nums[i] and nums[j] (i < j) such that nums[i] < nums[j]. \nExample 30: \nLeetCode Problem #2434\nTitle: Count of Matches in Tournament\nDescription:\nYou are given an integer n, the number of teams in a tournament that has strange rules. \n\nExample 31: \nLeetCode Problem #2435\nTitle: Maximum Product of the Length of Two Palindromic Subsequences\nDescription:\nYou are given a string s. \nExample 32: \nLeetCode Problem #2436\nTitle: Summon the Wraiths\nDescription:\nYou are given an array of integers nums and an integer target. \nExample 33: \nLeetCode Problem #2437\nTitle: Most Frequent Subtree Sum\nDescription:\nGiven the root of a tree, you are asked to find the most frequent subtree sum. \nExample 34: \nLeetCode Problem #2438\nTitle: Smallest String With Swaps\nDescription:\nYou are given a string s, and an array of pairs of indices in the string pairs where pairs[i] = [a i, b i ] indicates 2 indices(0-indexed) of the string. \nExample 35: \nLeetCode Problem #2439\nTitle: Maximum Number of Balloons\nDescription:\nGiven a string text, you want to use the characters of text to form as many instances of the word \"balloon\" as possible. \nExample 36: \nLeetCode Problem #2440\nTitle: Element Appearing More Than 25% In Sorted Array\nDescription:\nGiven an integer array sorted in non-decreasing order, there is exactly one integer in the array that occurs more than 25% of the time. \nExample 37: \nLeetCode Problem #2441\nTitle: Splitting a String Into Descending Consecutive Values\nDescription:\nGiven a string s, you can split s into two non-empty strings s1 and s2 where its concatenation is equal to s and the following conditions are satisfied: \nExample 38: \nLeetCode Problem #2442\nTitle: Check if One String Swap Can Make Strings Equal\nDescription:\nYou are given two strings s1 and s2 of equal length. \nExample 39: \nLeetCode Problem #2443\nTitle: Number of Good Ways to Split a String\nDescription:\nYou are given a string s, a split is called good if you can split s into 2 non-empty strings p and q where its concatenation is equal to s and the number of distinct letters in p is equal to the number of distinct letters in q. \nExample 40: \nLeetCode Problem #2444\nTitle: Color the Subtrees With the Same Color\nDescription:\nGiven the root of a binary tree, each node in the tree has a distinct value. \nExample 41: \nLeetCode Problem #2445\nTitle: Maximum Number of Removable Characters\nDescription:\nYou are given two strings s and p. \nExample 42: \nLeetCode Problem #2446\nTitle: Find Minimum Time to Finish All Jobs\nDescription:\nYou are given an integer array jobs, where jobs[i] is the amount of time it takes to complete the ith job. \nExample 43: \nLeetCode Problem #2447\nTitle: All Elements in Two Binary Search Trees\nDescription:\nGiven two binary search trees root1 and root2. \nExample 44: \nLeetCode Problem #2448\nTitle: Number of Ways to Split a String\nDescription:\nYou are given a binary string s. \nExample 45: \nLeetCode Problem #2449\nTitle: Word Subsets\nDescription:\nYou are given two string arrays words1 and words2. \nExample 46: \nLeetCode Problem #2450\nTitle: Construct Target Array With Multiple Sums\nDescription:\nYou are given an array target of n integers. \nExample 47: \nLeetCode Problem #2451\nTitle: Find Nodes That Can Be Visited Exactly Once\nDescription:\nThere are n nodes in an undirected graph, numbered from 0 to n - 1, and an array edges where edges[i] = [ai, bi] indicates that there is an edge between nodes ai and bi in the graph. \nExample 48: \nLeetCode Problem #2452\nTitle: Maximum Alternating Subsequence Sum\nDescription:\nThe alternating sum of a 0-indexed array is defined as the sum of the elements at even indices minus the sum o", "cleaned_response": " \nMaximum Score of Removing Duplicates\n\nYou are given a string s consisting of lowercase English letters. You can perform the following operation any number of times: choose a non-empty substring from s and remove all occurrences of it from s. \n \nGroup Anagrams Together\n\nYou are given an array of strings strs. \n \nMedian of Two Sorted Arrays\n\nGiven two sorted arrays nums1 and nums2 of size m and n respectively, return the median of the two sorted arrays. \n \nShortest Path With Largest Minimum Value\n\nYou are given a 2D integer matrix grid, where each grid[i][j] represents the height of the cell at position (i, j). \n \nFind Nearest Right Node in Binary Tree\n\nGiven the root of a binary tree and a node u in the tree, return the nearest node on the right of u (i.e., the next node on the same level as u but on the right side). \n \nMaximum Number of Visible Points\n\nYou are given an array points, an integer angle, and your location, where points[i] = [xi, yi] represents a point on the 2D plane. \n \nPeople Whose List of Favorite Companies Is Not a Subset of Another List\n\nA company group is a group of employees that works for the same company. \n \nMaximum Area of a Piece of Cake After Horizontal and Vertical Cuts\n\nYou are given a rectangular cake of size h x w and two arrays of integers horizontalCuts and verticalCuts where horizontalCuts[i] represents the distance from the top of the rectangular cake to the ith horizontal cut and similarly, verticalCuts[j] represents the distance from the left of the rectangular cake to the jth vertical cut. \n \nMaximum Difference Between Increasing Elements\n\nGiven a 0-indexed integer array nums of size n, find the maximum difference between nums[i] and nums[j] (i < j) such that nums[i] < nums[j]. \n \nCount of Matches in Tournament\n\nYou are given an integer n, the number of teams in a tournament that has strange rules. \n\n \nMaximum Product of the Length of Two Palindromic Subsequences\n\nYou are given a string s. \n \nSummon the Wraiths\n\nYou are given an array of integers nums and an integer target. \n \nMost Frequent Subtree Sum\n\nGiven the root of a tree, you are asked to find the most frequent subtree sum. \n \nSmallest String With Swaps\n\nYou are given a string s, and an array of pairs of indices in the string pairs where pairs[i] = [a i, b i ] indicates 2 indices(0-indexed) of the string. \n \nMaximum Number of Balloons\n\nGiven a string text, you want to use the characters of text to form as many instances of the word \"balloon\" as possible. \n \nElement Appearing More Than 25% In Sorted Array\n\nGiven an integer array sorted in non-decreasing order, there is exactly one integer in the array that occurs more than 25% of the time. \n \nSplitting a String Into Descending Consecutive Values\n\nGiven a string s, you can split s into two non-empty strings s1 and s2 where its concatenation is equal to s and the following conditions are satisfied: \n \nCheck if One String Swap Can Make Strings Equal\n\nYou are given two strings s1 and s2 of equal length. \n \nNumber of Good Ways to Split a String\n\nYou are given a string s, a split is called good if you can split s into 2 non-empty strings p and q where its concatenation is equal to s and the number of distinct letters in p is equal to the number of distinct letters in q. \n \nColor the Subtrees With the Same Color\n\nGiven the root of a binary tree, each node in the tree has a distinct value. \n \nMaximum Number of Removable Characters\n\nYou are given two strings s and p. \n \nFind Minimum Time to Finish All Jobs\n\nYou are given an integer array jobs, where jobs[i] is the amount of time it takes to complete the ith job. \n \nAll Elements in Two Binary Search Trees\n\nGiven two binary search trees root1 and root2. \n \nNumber of Ways to Split a String\n\nYou are given a binary string s. \n \nWord Subsets\n\nYou are given two string arrays words1 and words2. \n \nConstruct Target Array With Multiple Sums\n\nYou are given an array target of n integers. \n \nFind Nodes That Can Be Visited Exactly Once\n\nThere are n nodes in an undirected graph, numbered from 0 to n - 1, and an array edges where edges[i] = [ai, bi] indicates that there is an edge between nodes ai and bi in the graph. \n \nMaximum Alternating Subsequence Sum\n\nThe alternating sum of a 0-indexed array is defined as the sum of the elements at even indices minus the sum o", "similarity": 0.8188191079889968}
{"input_context": "Example 1: \nLeetCode Problem #2448\nTitle: Minimum Cost to Make Array Equal\nDescription:\nYou are given two 0-indexed arrays nums and cost consisting each of n positive integers. \nExample 2: \nLeetCode Problem #2449\nTitle: Minimum Number of Operations to Make Arrays Similar\nDescription:\nYou are given two positive integer arrays nums and target, of the same length. \nExample 3: \nLeetCode Problem #2451\nTitle: Odd String Difference\nDescription:\nYou are given an array of equal-length strings words. Assume that the length of each string is n. \nExample 4: \nLeetCode Problem #2452\nTitle: Words Within Two Edits of Dictionary\nDescription:\nYou are given two string arrays, queries and dictionary. All words in each array comprise of lowercase English letters and have the same length. \nExample 5: \nLeetCode Problem #2453\nTitle: Destroy Sequential Targets\nDescription:\nYou are given a 0-indexed array nums consisting of positive integers, representing targets on a number line. You are also given an integer space. \nExample 6: \nLeetCode Problem #2454\nTitle: Next Greater Element IV\nDescription:\nYou are given a 0-indexed array of non-negative integers nums. For each integer in nums, you must find its respective second greater integer. \nExample 7: \nLeetCode Problem #2455\nTitle: Average Value of Even Numbers That Are Divisible by Three\nDescription:\nGiven an integer array nums of positive integers, return the average value of all even integers that are divisible by 3. \nExample 8: \nLeetCode Problem #2456\nTitle: Most Popular Video Creator\nDescription:\nYou are given two string arrays creators and ids, and an integer array views, all of length n. The i th video on a platform was created by creator[i], has an id of ids[i], and has views[i] views. \nExample 9: \nLeetCode Problem #2457\nTitle: Minimum Addition to Make Integer Beautiful\nDescription:\nYou are given two positive integers n and target. \nExample 10: \nLeetCode Problem #2458\nTitle: Height of Binary Tree After Subtree Removal Queries\nDescription:\nYou are given the root of a binary tree with n nodes. Each node is assigned a unique value from 1 to n. You are also given an array queries of size m. \nExample 11: \nLeetCode Problem #2460\nTitle: Apply Operations to an Array\nDescription:\nYou are given a 0-indexed array nums of size n consisting of non-negative integers. \nExample 12: \nLeetCode Problem #2461\nTitle: Maximum Sum of Distinct Subarrays With Length K\nDescription:\nYou are given an integer array nums and an integer k. Find the maximum subarray sum of all the subarrays of nums that meet the following conditions:...\n\nExample 13: \nLeetCode Problem #2462\nTitle: Total Cost to Hire K Workers\nDescription:\nYou are given a 0-indexed integer array costs where costs[i] is the cost of hiring the i th worker. \nExample 14: \nLeetCode Problem #2463\nTitle: Minimum Total Distance Traveled\nDescription:\nThere are some robots and factories on the X-axis. You are given an integer array robot where robot[i] is the position of the i th robot. You are also given a 2D integer array factory where factory[j] = [position j, limit j ] indicates that position j is the position of the j th factory and that the j th factory can repair at most limit j robots. \nExample 15: \nLeetCode Problem #2465\nTitle: Number of Distinct Averages\nDescription:\nYou are given a 0-indexed integer array nums of even length. \nExample 16: \nLeetCode Problem #2466\nTitle: Count Ways To Build Good Strings\nDescription:\nGiven the integers zero, one, low, and high, we can construct a string by starting with an empty string, and then at each step perform either of the following:...\n\nExample 17: \nLeetCode Problem #2467\nTitle: Most Profitable Path in a Tree\nDescription:\nThere is an undirected tree with n nodes labeled from 0 to n - 1, rooted at node 0. You are given a 2D integer array edges of length n - 1 where edges[i] = [a i, b i ] indicates that there is an edge between nodes a i and b i in the tree. \nExample 18: \nLeetCode Problem #2468\nTitle: Split Message Based on Limit\nDescription:\nYou are given a string, message, and a positive integer, limit. \nExample 19: \nLeetCode Problem #2469\nTitle: Convert the Temperature\nDescription:\nYou are given a non-negative floating point number rounded to two decimal places celsius, that denotes the temperature in Celsius. \nExample 20: \nLeetCode Problem #2470\nTitle: Number of Subarrays With LCM Equal to K\nDescription:\nGiven an integer array nums and an integer k, return the number of subarrays of nums where the least common multiple of the subarray's elements is k. ", "expected_response": "Example 21: \nLeetCode Problem #2471\nTitle: Minimum Number of Operations to Sort a Binary Tree by Level\nDescription:\nYou are given the root of a binary tree with unique values. \nExample 22: \nLeetCode Problem #2472\nTitle: Maximum Number of Non-overlapping Palindrome Substrings\nDescription:\nYou are given a string s and a positive integer k. \nExample 23: \nLeetCode Problem #2475\nTitle: Number of Unequal Triplets in Array\nDescription:\nYou are given a 0-indexed array of positive integers nums. Find the number of triplets (i, j, k) that meet the following conditions:...\n\nExample 24: \nLeetCode Problem #2476\nTitle: Closest Nodes Queries in a Binary Search Tree\nDescription:\nYou are given the root of a binary search tree and an array queries of size n consisting of positive integers. \nExample 25: \nLeetCode Problem #2477\nTitle: Minimum Fuel Cost to Report to the Capital\nDescription:\nThere is a tree (i. e. , a connected, undirected graph with no cycles) structure country network consisting of n cities numbered from 0 to n - 1 and exactly n - 1 roads. The capital city is city 0. You are given a 2D integer array roads where roads[i] = [a i, b i ] denotes that there exists a bidirectional road connecting cities a i and b i. \nExample 26: \nLeetCode Problem #2478\nTitle: Number of Beautiful Partitions\nDescription:\nYou are given a string s that consists of the digits '1' to '9' and two integers k and minLength. \nExample 27: \nLeetCode Problem #2481\nTitle: Minimum Cuts to Divide a Circle\nDescription:\nA valid cut in a circle can be:...\n\nExample 28: \nLeetCode Problem #2482\nTitle: Difference Between Ones and Zeros in Row and Column\nDescription:\nYou are given a 0-indexed m x n binary matrix grid. \nExample 29: \nLeetCode Problem #2483\nTitle: Minimum Penalty for a Shop\nDescription:\nYou are given the customer visit log of a shop represented by a 0-indexed string customers consisting only of characters 'N' and 'Y' :...\n\nExample 30: \nLeetCode Problem #2484\nTitle: Count Palindromic Subsequences\nDescription:\nGiven a string of digits s, return the number of palindromic subsequences of s having length 5. Since the answer may be very large, return it modulo 10e9 + 7. \nExample 31: \nLeetCode Problem #2485\nTitle: Find the Pivot Integer\nDescription:\nGiven a positive integer n, find the pivot integer x such that:...\n\nExample 32: \nLeetCode Problem #2486\nTitle: Append Characters to String to Make Subsequence\nDescription:\nYou are given two strings s and t consisting of only lowercase English letters. \nExample 33: \nLeetCode Problem #2487\nTitle: Remove Nodes From Linked List\nDescription:\nYou are given the head of a linked list. \nExample 34: \nLeetCode Problem #2488\nTitle: Count Subarrays With Median K\nDescription:\nYou are given an array nums of size n consisting of distinct integers from 1 to n and a positive integer k. \nExample 35: \nLeetCode Problem #2490\nTitle: Circular Sentence\nDescription:\nA sentence is a list of words that are separated by a single space with no leading or trailing spaces. \nExample 36: \nLeetCode Problem #2491\nTitle: Divide Players Into Teams of Equal Skill\nDescription:\nYou are given a positive integer array skill of even length n where skill[i] denotes the skill of the i th player. Divide the players into n / 2 teams of size 2 such that the total skill of each team is equal. \nExample 37: \nLeetCode Problem #2492\nTitle: Minimum Score of a Path Between Two Cities\nDescription:\nYou are given a positive integer n representing n cities numbered from 1 to n. You are also given a 2D array roads where roads[i] = [a i, b i, distance i ] indicates that there is a bidirectional road between cities a i and b i with a distance equal to distance i. The cities graph is not necessarily connected. \nExample 38: \nLeetCode Problem #2493\nTitle: Divide Nodes Into the Maximum Number of Groups\nDescription:\nYou are given a positive integer n representing the number of nodes in an undirected graph. The nodes are labeled from 1 to n. \nExample 39: \nLeetCode Problem #2496\nTitle: Maximum Value of a String in an Array\nDescription:\nThe value of an alphanumeric string can be defined as:...\n\nExample 40: \nLeetCode Problem #2497\nTitle: Maximum Star Sum of a Graph\nDescription:\nThere is an undirected graph consisting of n nodes numbered from 0 to n - 1. You are given a 0-indexed integer array vals of length n where vals[i] denotes the value of the i th node. ", "iloc": 1901, "frontend_question_id": 2498.0, "n_pass": 1, "response": "Example 21: \nLeetCode Problem #2471\nTitle: Sum of Absolute Differences in a Sorted Array\nDescription:\nYou are given an array of integers nums sorted in non-decreasing order. \n\nExample 22: \nLeetCode Problem #2472\nTitle: Maximum Sum Obtained of Any Permutation\nDescription:\nYou are given an integer array nums of length n. \n\nExample 23: \nLeetCode Problem #2473\nTitle: Minimum Distance to the Target Element\nDescription:\nGiven an integer array nums and two integers start and target, return the minimum number of steps needed to move from start to target. \n\nExample 24: \nLeetCode Problem #2474\nTitle: Maximum Average Subarray II\nDescription:\nYou are given an integer array nums of length n. \n\nExample 25: \nLeetCode Problem #2475\nTitle: Next Similar Number\nDescription:\nGiven a positive integer n, find the smallest integer greater than n that can be formed by rearranging its digits. \n\nExample 26: \nLeetCode Problem #2476\nTitle: Make Two Arrays Equal by Reversing Sub-arrays\nDescription:\nYou are given two integer arrays target and arr of the same length. \n\nExample 27: \nLeetCode Problem #2477\nTitle: Maximum Score of a Good Subarray\nDescription:\nYou are given an integer array nums of length n. \n\nExample 28: \nLeetCode Problem #2478\nTitle: Find the Middle Index in Array\nDescription:\nGiven a 0-indexed integer array nums, find the leftmost middle index (i.e., the smallest index such that the sum of elements from the left side of it is equal to the sum of elements from the right side of it). \n\nExample 29: \nLeetCode Problem #2479\nTitle: Shuffle String\nDescription:\nGiven a string s and an integer array indices of the same length, rearrange the characters of s so that the character at the ith position moves to indices[i] in the rearranged string. \n\nExample 30: \nLeetCode Problem #2480\nTitle: Count Special Quadruplets\nDescription:\nGiven a 0-indexed integer array nums, return the number of distinct quadruplets (a, b, c, d) such that:\n  - nums[a] + nums[b] + nums[c] == nums[d], and\n  - a < b < c < d.", "cleaned_response": " \nSum of Absolute Differences in a Sorted Array\n\nYou are given an array of integers nums sorted in non-decreasing order. \n\n \nMaximum Sum Obtained of Any Permutation\n\nYou are given an integer array nums of length n. \n\n \nMinimum Distance to the Target Element\n\nGiven an integer array nums and two integers start and target, return the minimum number of steps needed to move from start to target. \n\n \nMaximum Average Subarray II\n\nYou are given an integer array nums of length n. \n\n \nNext Similar Number\n\nGiven a positive integer n, find the smallest integer greater than n that can be formed by rearranging its digits. \n\n \nMake Two Arrays Equal by Reversing Sub-arrays\n\nYou are given two integer arrays target and arr of the same length. \n\n \nMaximum Score of a Good Subarray\n\nYou are given an integer array nums of length n. \n\n \nFind the Middle Index in Array\n\nGiven a 0-indexed integer array nums, find the leftmost middle index (i.e., the smallest index such that the sum of elements from the left side of it is equal to the sum of elements from the right side of it). \n\n \nShuffle String\n\nGiven a string s and an integer array indices of the same length, rearrange the characters of s so that the character at the ith position moves to indices[i] in the rearranged string. \n\n \nCount Special Quadruplets\n\nGiven a 0-indexed integer array nums, return the number of distinct quadruplets (a, b, c, d) such that:\n  - nums[a] + nums[b] + nums[c] == nums[d], and\n  - a < b < c < d.", "similarity": 0.8231098338230222}
{"input_context": "Example 1: \nLeetCode Problem #2498\nTitle: Frog Jump II\nDescription:\nYou are given a 0-indexed integer array stones sorted in strictly increasing order representing the positions of stones in a river. \nExample 2: \nLeetCode Problem #2499\nTitle: Minimum Total Cost to Make Arrays Unequal\nDescription:\nYou are given two 0-indexed integer arrays nums1 and nums2, of equal length n. \nExample 3: \nLeetCode Problem #2500\nTitle: Delete Greatest Value in Each Row\nDescription:\nYou are given an m x n matrix grid consisting of positive integers. \nExample 4: \nLeetCode Problem #2501\nTitle: Longest Square Streak in an Array\nDescription:\nYou are given an integer array nums. A subsequence of nums is called a square streak if:...\n\nExample 5: \nLeetCode Problem #2502\nTitle: Design Memory Allocator\nDescription:\nYou are given an integer n representing the size of a 0-indexed memory array. All memory units are initially free. \nExample 6: \nLeetCode Problem #2503\nTitle: Maximum Number of Points From Grid Queries\nDescription:\nYou are given an m x n integer matrix grid and an array queries of size k. \nExample 7: \nLeetCode Problem #2506\nTitle: Count Pairs Of Similar Strings\nDescription:\nYou are given a 0-indexed string array words. \nExample 8: \nLeetCode Problem #2507\nTitle: Smallest Value After Replacing With Sum of Prime Factors\nDescription:\nYou are given a positive integer n. \nExample 9: \nLeetCode Problem #2508\nTitle: Add Edges to Make Degrees of All Nodes Even\nDescription:\nThere is an undirected graph consisting of n nodes numbered from 1 to n. You are given the integer n and a 2D array edges where edges[i] = [a i, b i ] indicates that there is an edge between nodes a i and b i. The graph can be disconnected. \nExample 10: \nLeetCode Problem #2509\nTitle: Cycle Length Queries in a Tree\nDescription:\nYou are given an integer n. There is a complete binary tree with 2 n - 1 nodes. The root of that tree is the node with the value 1, and every node with a value val in the range [1, 2 n - 1 - 1] has two children where:...\n\nExample 11: \nLeetCode Problem #2511\nTitle: Maximum Enemy Forts That Can Be Captured\nDescription:\nYou are given a 0-indexed integer array forts of length n representing the positions of several forts. forts[i] can be -1, 0, or 1 where:...\n\nExample 12: \nLeetCode Problem #2512\nTitle: Reward Top K Students\nDescription:\nYou are given two string arrays positive_feedback and negative_feedback, containing the words denoting positive and negative feedback, respectively. Note that no word is both positive and negative. \nExample 13: \nLeetCode Problem #2513\nTitle: Minimize the Maximum of Two Arrays\nDescription:\nWe have two arrays arr1 and arr2 which are initially empty. You need to add positive integers to them such that they satisfy all the following conditions:...\n\nExample 14: \nLeetCode Problem #2514\nTitle: Count Anagrams\nDescription:\nYou are given a string s containing one or more words. Every consecutive pair of words is separated by a single space ' '. \nExample 15: \nLeetCode Problem #2515\nTitle: Shortest Distance to Target String in a Circular Array\nDescription:\nYou are given a 0-indexed circular string array words and a string target. A circular array means that the array's end connects to the array's beginning. \nExample 16: \nLeetCode Problem #2516\nTitle: Take K of Each Character From Left and Right\nDescription:\nYou are given a string s consisting of the characters 'a', 'b', and 'c' and a non-negative integer k. Each minute, you may take either the leftmost character of s, or the rightmost character of s. \nExample 17: \nLeetCode Problem #2517\nTitle: Maximum Tastiness of Candy Basket\nDescription:\nYou are given an array of positive integers price where price[i] denotes the price of the i th candy and a positive integer k. \nExample 18: \nLeetCode Problem #2518\nTitle: Number of Great Partitions\nDescription:\nYou are given an array nums consisting of positive integers and an integer k. \nExample 19: \nLeetCode Problem #2520\nTitle: Count the Digits That Divide a Number\nDescription:\nGiven an integer num, return the number of digits in num that divide num. \nExample 20: \nLeetCode Problem #2521\nTitle: Distinct Prime Factors of Product of Array\nDescription:\nGiven an array of positive integers nums, return the number of distinct prime factors in the product of the elements of nums. ", "expected_response": "Example 21: \nLeetCode Problem #2522\nTitle: Partition String Into Substrings With Values at Most K\nDescription:\nYou are given a string s consisting of digits from 1 to 9 and an integer k. \nExample 22: \nLeetCode Problem #2523\nTitle: Closest Prime Numbers in Range\nDescription:\nGiven two positive integers left and right, find the two integers num1 and num2 such that:...\n\nExample 23: \nLeetCode Problem #2525\nTitle: Categorize Box According to Criteria\nDescription:\nGiven four integers length, width, height, and mass, representing the dimensions and mass of a box, respectively, return a string representing the category of the box. \nExample 24: \nLeetCode Problem #2526\nTitle: Find Consecutive Integers from a Data Stream\nDescription:\nFor a stream of integers, implement a data structure that checks if the last k integers parsed in the stream are equal to value. \nExample 25: \nLeetCode Problem #2527\nTitle: Find Xor-Beauty of Array\nDescription:\nYou are given a 0-indexed integer array nums. \nExample 26: \nLeetCode Problem #2528\nTitle: Maximize the Minimum Powered City\nDescription:\nYou are given a 0-indexed integer array stations of length n, where stations[i] represents the number of power stations in the i th city. \nExample 27: \nLeetCode Problem #2529\nTitle: Maximum Count of Positive Integer and Negative Integer\nDescription:\nGiven an array nums sorted in non-decreasing order, return the maximum between the number of positive integers and the number of negative integers. \nExample 28: \nLeetCode Problem #2530\nTitle: Maximal Score After Applying K Operations\nDescription:\nYou are given a 0-indexed integer array nums and an integer k. You have a starting score of 0. \nExample 29: \nLeetCode Problem #2531\nTitle: Make Number of Distinct Characters Equal\nDescription:\nYou are given two 0-indexed strings word1 and word2. \nExample 30: \nLeetCode Problem #2532\nTitle: Time to Cross a Bridge\nDescription:\nThere are k workers who want to move n boxes from an old warehouse to a new one. You are given the two integers n and k, and a 2D integer array time of size k x 4 where time[i] = [leftToRight i, pickOld i, rightToLeft i, putNew i ]. \nExample 31: \nLeetCode Problem #2535\nTitle: Difference Between Element Sum and Digit Sum of an Array\nDescription:\nYou are given a positive integer array nums. \nExample 32: \nLeetCode Problem #2536\nTitle: Increment Submatrices by One\nDescription:\nYou are given a positive integer n, indicating that we initially have an n x n 0-indexed integer matrix mat filled with zeroes. \nExample 33: \nLeetCode Problem #2537\nTitle: Count the Number of Good Subarrays\nDescription:\nGiven an integer array nums and an integer k, return the number of good subarrays of nums. \nExample 34: \nLeetCode Problem #2538\nTitle: Difference Between Maximum and Minimum Price Sum\nDescription:\nThere exists an undirected and initially unrooted tree with n nodes indexed from 0 to n - 1. You are given the integer n and a 2D integer array edges of length n - 1, where edges[i] = [a i, b i ] indicates that there is an edge between nodes a i and b i in the tree. \nExample 35: \nLeetCode Problem #2540\nTitle: Minimum Common Value\nDescription:\nGiven two integer arrays nums1 and nums2, sorted in non-decreasing order, return the minimum integer common to both arrays. If there is no common integer amongst nums1 and nums2, return -1. \nExample 36: \nLeetCode Problem #2541\nTitle: Minimum Operations to Make Array Equal II\nDescription:\nYou are given two integer arrays nums1 and nums2 of equal length n and an integer k. You can perform the following operation on nums1 :...\n\nExample 37: \nLeetCode Problem #2542\nTitle: Maximum Subsequence Score\nDescription:\nYou are given two 0-indexed integer arrays nums1 and nums2 of equal length n and a positive integer k. You must choose a subsequence of indices from nums1 of length k. \nExample 38: \nLeetCode Problem #2543\nTitle: Check if Point Is Reachable\nDescription:\nThere exists an infinitely large grid. You are currently at point (1, 1), and you need to reach the point (targetX, targetY) using a finite number of steps. \nExample 39: \nLeetCode Problem #2544\nTitle: Alternating Digit Sum\nDescription:\nYou are given a positive integer n. Each digit of n has a sign according to the following rules:...\n\nExample 40: \nLeetCode Problem #2545\nTitle: Sort the Students by Their Kth Score\nDescription:\nThere is a class with m students and n exams. You are given a 0-indexed m x n integer matrix score, where each row represents one student and score[i][j] denotes the score the i th student got in the j th exam. The matrix score contains distinct integers only. ", "iloc": 1941, "frontend_question_id": 2546.0, "n_pass": 1, "response": "Example 21: \nLeetCode Problem #2522\nTitle: Longest Subsequence with Odd Sum\nDescription:\nYou are given an array nums of integers. A subsequence of nums is considered valid if it has an odd sum. \n\nExample 22: \nLeetCode Problem #2523\nTitle: Find the Minimum Difference Between Maximum and Minimum Values\nDescription:\nYou are given an array nums of integers. Find the minimum difference between the maximum and minimum values of any subarray of nums. \n\nExample 23: \nLeetCode Problem #2524\nTitle: Smallest String With Swaps\nDescription:\nYou are given a string s and an array of pairs of indices in the string. You can swap any two characters in s at most once. \n\nExample 24: \nLeetCode Problem #2525\nTitle: Longest Subarray with at Most K Distinct Elements\nDescription:\nYou are given an array nums of integers and an integer k. Find the length of the longest subarray that contains at most k distinct elements. \n\nExample 25: \nLeetCode Problem #2526\nTitle: Count Reversals to Make String Balanced\nDescription:\nYou are given a string s consisting of characters ']' and '['. A string is considered balanced if by repeatedly reversing its contiguous substrings of the form \"][\", we can make the string empty. \n\nExample 26: \nLeetCode Problem #2527\nTitle: Maximum Product of Two Distinct Elements in an Array\nDescription:\nYou are given an array nums of integers. Find the maximum product of two distinct elements in nums. \n\nExample 27: \nLeetCode Problem #2528\nTitle: Minimum Number of Steps to Make Arrays Equal\nDescription:\nYou are given two arrays nums1 and nums2 of equal length n. Your task is to make both arrays equal by performing the minimum number of steps. \n\nExample 28: \nLeetCode Problem #2529\nTitle: Sum of All Greater Values in a BST\nDescription:\nYou are given the root of a binary search tree (BST). Return the sum of all values greater than the given node's value in the BST. \n\nExample 29: \nLeetCode Problem #2530\nTitle: Count Words That Can Be Formed by Characters\nDescription:\nYou are given an array of strings words and a string chars. Return the sum of lengths of all the words in words that can be formed using the characters in chars. \n\nExample 30: \nLeetCode Problem #2531\nTitle: Smallest Missing Value in Subsequences\nDescription:\nYou are given an array nums of distinct positive integers and an array requests where requests[i] = [starti, endi].", "cleaned_response": " \nLongest Subsequence with Odd Sum\n\nYou are given an array nums of integers. A subsequence of nums is considered valid if it has an odd sum. \n\n \nFind the Minimum Difference Between Maximum and Minimum Values\n\nYou are given an array nums of integers. Find the minimum difference between the maximum and minimum values of any subarray of nums. \n\n \nSmallest String With Swaps\n\nYou are given a string s and an array of pairs of indices in the string. You can swap any two characters in s at most once. \n\n \nLongest Subarray with at Most K Distinct Elements\n\nYou are given an array nums of integers and an integer k. Find the length of the longest subarray that contains at most k distinct elements. \n\n \nCount Reversals to Make String Balanced\n\nYou are given a string s consisting of characters ']' and '['. A string is considered balanced if by repeatedly reversing its contiguous substrings of the form \"][\", we can make the string empty. \n\n \nMaximum Product of Two Distinct Elements in an Array\n\nYou are given an array nums of integers. Find the maximum product of two distinct elements in nums. \n\n \nMinimum Number of Steps to Make Arrays Equal\n\nYou are given two arrays nums1 and nums2 of equal length n. Your task is to make both arrays equal by performing the minimum number of steps. \n\n \nSum of All Greater Values in a BST\n\nYou are given the root of a binary search tree (BST). Return the sum of all values greater than the given node's value in the BST. \n\n \nCount Words That Can Be Formed by Characters\n\nYou are given an array of strings words and a string chars. Return the sum of lengths of all the words in words that can be formed using the characters in chars. \n\n \nSmallest Missing Value in Subsequences\n\nYou are given an array nums of distinct positive integers and an array requests where requests[i] = [starti, endi].", "similarity": 0.8414134920025271}
{"input_context": "Example 1: \nLeetCode Problem #2546\nTitle: Apply Bitwise Operations to Make Strings Equal\nDescription:\nYou are given two 0-indexed binary strings s and target of the same length n. You can do the following operation on s any number of times:...\n\nExample 2: \nLeetCode Problem #2547\nTitle: Minimum Cost to Split an Array\nDescription:\nYou are given an integer array nums and an integer k. \nExample 3: \nLeetCode Problem #2549\nTitle: Count Distinct Numbers on Board\nDescription:\nYou are given a positive integer n, that is initially placed on a board. Every day, for 10e9 days, you perform the following procedure:...\n\nExample 4: \nLeetCode Problem #2550\nTitle: Count Collisions of Monkeys on a Polygon\nDescription:\nThere is a regular convex polygon with n vertices. The vertices are labeled from 0 to n - 1 in a clockwise direction, and each vertex has exactly one monkey. The following figure shows a convex polygon of 6 vertices. \nExample 5: \nLeetCode Problem #2551\nTitle: Put Marbles in Bags\nDescription:\nYou have k bags. You are given a 0-indexed integer array weights where weights[i] is the weight of the i th marble. You are also given the integer k. \nExample 6: \nLeetCode Problem #2552\nTitle: Count Increasing Quadruplets\nDescription:\nGiven a 0-indexed integer array nums of size n containing all numbers from 1 to n, return the number of increasing quadruplets. \nExample 7: \nLeetCode Problem #2553\nTitle: Separate the Digits in an Array\nDescription:\nGiven an array of positive integers nums, return an array answer that consists of the digits of each integer in nums after separating them in the same order they appear in nums. \nExample 8: \nLeetCode Problem #2554\nTitle: Maximum Number of Integers to Choose From a Range I\nDescription:\nYou are given an integer array banned and two integers n and maxSum. You are choosing some number of integers following the below rules:...\n\nExample 9: \nLeetCode Problem #2555\nTitle: Maximize Win From Two Segments\nDescription:\nThere are some prizes on the X-axis. You are given an integer array prizePositions that is sorted in non-decreasing order, where prizePositions[i] is the position of the i th prize. There could be different prizes at the same position on the line. You are also given an integer k. \nExample 10: \nLeetCode Problem #2556\nTitle: Disconnect Path in a Binary Matrix by at Most One Flip\nDescription:\nYou are given a 0-indexed m x n binary matrix grid. You can move from a cell (row, col) to any of the cells (row + 1, col) or (row, col + 1) that has the value 1. The matrix is disconnected if there is no path from (0, 0) to (m - 1, n - 1). \nExample 11: \nLeetCode Problem #2558\nTitle: Take Gifts From the Richest Pile\nDescription:\nYou are given an integer array gifts denoting the number of gifts in various piles. Every second, you do the following:...\n\nExample 12: \nLeetCode Problem #2559\nTitle: Count Vowel Strings in Ranges\nDescription:\nYou are given a 0-indexed array of strings words and a 2D array of integers queries. \nExample 13: \nLeetCode Problem #2560\nTitle: House Robber IV\nDescription:\nThere are several consecutive houses along a street, each of which has some money inside. There is also a robber, who wants to steal money from the homes, but he refuses to steal from adjacent homes. \nExample 14: \nLeetCode Problem #2561\nTitle: Rearranging Fruits\nDescription:\nYou have two fruit baskets containing n fruits each. You are given two 0-indexed integer arrays basket1 and basket2 representing the cost of fruit in each basket. You want to make both baskets equal. To do so, you can use the following operation as many times as you want:...\n\nExample 15: \nLeetCode Problem #2562\nTitle: Find the Array Concatenation Value\nDescription:\nYou are given a 0-indexed integer array nums. \nExample 16: \nLeetCode Problem #2563\nTitle: Count the Number of Fair Pairs\nDescription:\nGiven a 0-indexed integer array nums of size n and two integers lower and upper, return the number of fair pairs. \nExample 17: \nLeetCode Problem #2564\nTitle: Substring XOR Queries\nDescription:\nYou are given a binary string s, and a 2D integer array queries where queries[i] = [first i, second i ]. \nExample 18: \nLeetCode Problem #2565\nTitle: Subsequence With the Minimum Score\nDescription:\nYou are given two strings s and t. \nExample 19: \nLeetCode Problem #2566\nTitle: Maximum Difference by Remapping a Digit\nDescription:\nYou are given an integer num. You know that Danny Mittal will sneakily remap one of the 10 possible digits ( 0 to 9 ) to another digit. \nExample 20: \nLeetCode Problem #2567\nTitle: Minimum Score by Changing Two Elements\nDescription:\nYou are given a 0-indexed integer array nums. ", "expected_response": "Example 21: \nLeetCode Problem #2568\nTitle: Minimum Impossible OR\nDescription:\nYou are given a 0-indexed integer array nums. \nExample 22: \nLeetCode Problem #2569\nTitle: Handling Sum Queries After Update\nDescription:\nYou are given two 0-indexed arrays nums1 and nums2 and a 2D array queries of queries. There are three types of queries:...\n\nExample 23: \nLeetCode Problem #2570\nTitle: Merge Two 2D Arrays by Summing Values\nDescription:\nYou are given two 2D integer arrays nums1 and nums2. \nExample 24: \nLeetCode Problem #2571\nTitle: Minimum Operations to Reduce an Integer to 0\nDescription:\nYou are given a positive integer n, you can do the following operation any number of times:...\n\nExample 25: \nLeetCode Problem #2572\nTitle: Count the Number of Square-Free Subsets\nDescription:\nYou are given a positive integer 0-indexed array nums. \nExample 26: \nLeetCode Problem #2573\nTitle: Find the String with LCP\nDescription:\nWe define the lcp matrix of any 0-indexed string word of n lowercase English letters as an n x n grid such that:...\n\nExample 27: \nLeetCode Problem #2574\nTitle: Left and Right Sum Differences\nDescription:\nGiven a 0-indexed integer array nums, find a 0-indexed integer array answer where:...\n\nExample 28: \nLeetCode Problem #2575\nTitle: Find the Divisibility Array of a String\nDescription:\nYou are given a 0-indexed string word of length n consisting of digits, and a positive integer m. \nExample 29: \nLeetCode Problem #2576\nTitle: Find the Maximum Number of Marked Indices\nDescription:\nYou are given a 0-indexed integer array nums. \nExample 30: \nLeetCode Problem #2577\nTitle: Minimum Time to Visit a Cell In a Grid\nDescription:\nYou are given a m x n matrix grid consisting of non-negative integers where grid[row][col] represents the minimum time required to be able to visit the cell (row, col), which means you can visit the cell (row, col) only when the time you visit it is greater than or equal to grid[row][col]. \nExample 31: \nLeetCode Problem #2578\nTitle: Split With Minimum Sum\nDescription:\nGiven a positive integer num, split it into two non-negative integers num1 and num2 such that:...\n\nExample 32: \nLeetCode Problem #2579\nTitle: Count Total Number of Colored Cells\nDescription:\nThere exists an infinitely large two-dimensional grid of uncolored unit cells. You are given a positive integer n, indicating that you must do the following routine for n minutes:...\n\nExample 33: \nLeetCode Problem #2580\nTitle: Count Ways to Group Overlapping Ranges\nDescription:\nYou are given a 2D integer array ranges where ranges[i] = [start i, end i ] denotes that all integers between start i and end i (both inclusive ) are contained in the i th range. \nExample 34: \nLeetCode Problem #2581\nTitle: Count Number of Possible Root Nodes\nDescription:\nAlice has an undirected tree with n nodes labeled from 0 to n - 1. The tree is represented as a 2D integer array edges of length n - 1 where edges[i] = [a i, b i ] indicates that there is an edge between nodes a i and b i in the tree. \nExample 35: \nLeetCode Problem #2582\nTitle: Pass the Pillow\nDescription:\nThere are n people standing in a line labeled from 1 to n. The first person in the line is holding a pillow initially. Every second, the person holding the pillow passes it to the next person standing in the line. Once the pillow reaches the end of the line, the direction changes, and people continue passing the pillow in the opposite direction. \nExample 36: \nLeetCode Problem #2583\nTitle: Kth Largest Sum in a Binary Tree\nDescription:\nYou are given the root of a binary tree and a positive integer k. \nExample 37: \nLeetCode Problem #2584\nTitle: Split the Array to Make Coprime Products\nDescription:\nYou are given a 0-indexed integer array nums of length n. \nExample 38: \nLeetCode Problem #2585\nTitle: Number of Ways to Earn Points\nDescription:\nThere is a test that has n types of questions. You are given an integer target and a 0-indexed 2D integer array types where types[i] = [count i, marks i ] indicates that there are count i questions of the i th type, and each one of them is worth marks i points. \nExample 39: \nLeetCode Problem #2586\nTitle: Count the Number of Vowel Strings in Range\nDescription:\nYou are given a 0-indexed array of string words and two integers left and right. \nExample 40: \nLeetCode Problem #2587\nTitle: Rearrange Array to Maximize Prefix Score\nDescription:\nYou are given a 0-indexed integer array nums. You can rearrange the elements of nums to any order (including the given order). ", "iloc": 1981, "frontend_question_id": 2588.0, "n_pass": 1, "response": "Example 21: \nLeetCode Problem #2568\nTitle: Maximum Sum of 3 Non-Overlapping Subarrays\nDescription:\nGiven an integer array nums and an integer k, find three non-overlapping subarrays of length k with maximum sum. Return the sum of those three subarrays.\n\nExample 22: \nLeetCode Problem #2569\nTitle: Minimum Distance to Type a Word Using Two-Finger Typing\nDescription:\nYou have a keyboard layout as shown above in the XY plane, where each English uppercase letter is located at some coordinate. For example, the letter A is located at coordinate (0,0), the letter B is located at coordinate (0,1),...\n \nExample 23: \nLeetCode Problem #2570\nTitle: Salary Problems\nDescription:\nYou are given an integer array salaries where salaries[i] is the salary of the i-th employee (0-indexed). You work for a company with n employees, and the salaries are in sorted order from the minimum salary to the maximum salary. \n\nExample 24: \nLeetCode Problem #2571\nTitle: Minimum Operations to Reduce X to Zero\nDescription:\nYou are given an integer array nums and an integer x. In one operation, you can either remove the leftmost or the rightmost element from the array nums and subtract its value from x. Note that this modifies the array for future operations. \n\nExample 25: \nLeetCode Problem #2572\nTitle: Count Nice Pairs in an Array\nDescription:\nYou are given an integer array nums. Define the nice index pairs in the array as pairs (i, j) where 0 <= i < j < nums.length and nums[i] + nums[j] is divisible by k. Return the number of nice index pairs you can find in the array.\n\nExample 26: \nLeetCode Problem #2573\nTitle: Maximum Number of Non-Negative Products\nDescription:\nYou are given a 0-indexed integer array nums. You are asked to find the maximum number of non-negative integers you can choose such that the product of any three integers is positive. Return the maximum number of non-negative integers you can choose.\n \nExample 27: \nLeetCode Problem #2574\nTitle: Lucky Numbers in a Matrix\nDescription:\nGiven a m x n integer matrix grid, return a list of all lucky numbers in the matrix. A lucky number is an element of the matrix such that it is the minimum element in its row and maximum in its column.\n\nExample 28: \nLeetCode Problem #2575\nTitle: Minimum Operations to Make Rows Equal\nDescription:\nYou are given a 2D integer array matrix of size m x n, consisting of non-negative integers. You are also given an integer rowSum and an integer colSum.\n\nExample 29: \nLeetCode Problem #2576\nTitle: Replace All Digits with Characters\nDescription:\nYou are given a 0-indexed string s that has lowercase English letters in its odd indices and digits in its even indices. There is a function shift(c, x), where c is a character and x is a digit, that returns the x-th character after c in the English alphabet.\n  \nExample 30: \nLeetCode Problem #2577\nTitle: Maximize Palindrome Length From Subsequences\nDescription:\nYou are given two strings a and b. You need to maximize the length of the palindrome that can be obtained from a + b by choosing some subsequences of a and b and concatenating them.", "cleaned_response": " \nMaximum Sum of 3 Non-Overlapping Subarrays\n\nGiven an integer array nums and an integer k, find three non-overlapping subarrays of length k with maximum sum. Return the sum of those three subarrays.\n\n \nMinimum Distance to Type a Word Using Two-Finger Typing\n\nYou have a keyboard layout as shown above in the XY plane, where each English uppercase letter is located at some coordinate. For example, the letter A is located at coordinate (0,0), the letter B is located at coordinate (0,1),...\n \n \nSalary Problems\n\nYou are given an integer array salaries where salaries[i] is the salary of the i-th employee (0-indexed). You work for a company with n employees, and the salaries are in sorted order from the minimum salary to the maximum salary. \n\n \nMinimum Operations to Reduce X to Zero\n\nYou are given an integer array nums and an integer x. In one operation, you can either remove the leftmost or the rightmost element from the array nums and subtract its value from x. Note that this modifies the array for future operations. \n\n \nCount Nice Pairs in an Array\n\nYou are given an integer array nums. Define the nice index pairs in the array as pairs (i, j) where 0 <= i < j < nums.length and nums[i] + nums[j] is divisible by k. Return the number of nice index pairs you can find in the array.\n\n \nMaximum Number of Non-Negative Products\n\nYou are given a 0-indexed integer array nums. You are asked to find the maximum number of non-negative integers you can choose such that the product of any three integers is positive. Return the maximum number of non-negative integers you can choose.\n \n \nLucky Numbers in a Matrix\n\nGiven a m x n integer matrix grid, return a list of all lucky numbers in the matrix. A lucky number is an element of the matrix such that it is the minimum element in its row and maximum in its column.\n\n \nMinimum Operations to Make Rows Equal\n\nYou are given a 2D integer array matrix of size m x n, consisting of non-negative integers. You are also given an integer rowSum and an integer colSum.\n\n \nReplace All Digits with Characters\n\nYou are given a 0-indexed string s that has lowercase English letters in its odd indices and digits in its even indices. There is a function shift(c, x), where c is a character and x is a digit, that returns the x-th character after c in the English alphabet.\n  \n \nMaximize Palindrome Length From Subsequences\n\nYou are given two strings a and b. You need to maximize the length of the palindrome that can be obtained from a + b by choosing some subsequences of a and b and concatenating them.", "similarity": 0.8704358521574822}
{"input_context": "Example 1: \nLeetCode Problem #2588\nTitle: Count the Number of Beautiful Subarrays\nDescription:\nYou are given a 0-indexed integer array nums. In one operation, you can:...\n\nExample 2: \nLeetCode Problem #2589\nTitle: Minimum Time to Complete All Tasks\nDescription:\nThere is a computer that can run an unlimited number of tasks at the same time. You are given a 2D integer array tasks where tasks[i] = [start i, end i, duration i ] indicates that the i th task should run for a total of duration i seconds (not necessarily continuous) within the inclusive time range [start i, end i ]. \nExample 3: \nLeetCode Problem #2591\nTitle: Distribute Money to Maximum Children\nDescription:\nYou are given an integer money denoting the amount of money (in dollars) that you have and another integer children denoting the number of children that you must distribute the money to. \nExample 4: \nLeetCode Problem #2592\nTitle: Maximize Greatness of an Array\nDescription:\nYou are given a 0-indexed integer array nums. You are allowed to permute nums into a new array perm of your choosing. \nExample 5: \nLeetCode Problem #2593\nTitle: Find Score of an Array After Marking All Elements\nDescription:\nYou are given an array nums consisting of positive integers. \nExample 6: \nLeetCode Problem #2594\nTitle: Minimum Time to Repair Cars\nDescription:\nYou are given an integer array ranks representing the ranks of some mechanics. ranks i is the rank of the i th mechanic. A mechanic with a rank r can repair n cars in r * n 2 minutes. \nExample 7: \nLeetCode Problem #2595\nTitle: Number of Even and Odd Bits\nDescription:\nYou are given a positive integer n. \nExample 8: \nLeetCode Problem #2596\nTitle: Check Knight Tour Configuration\nDescription:\nThere is a knight on an n x n chessboard. In a valid configuration, the knight starts at the top-left cell of the board and visits every cell on the board exactly once. \nExample 9: \nLeetCode Problem #2597\nTitle: The Number of Beautiful Subsets\nDescription:\nYou are given an array nums of positive integers and a positive integer k. \nExample 10: \nLeetCode Problem #2598\nTitle: Smallest Missing Non-negative Integer After Operations\nDescription:\nYou are given a 0-indexed integer array nums and an integer value. \nExample 11: \nLeetCode Problem #2600\nTitle: K Items With the Maximum Sum\nDescription:\nThere is a bag that consists of items, each item has a number 1, 0, or -1 written on it. \nExample 12: \nLeetCode Problem #2601\nTitle: Prime Subtraction Operation\nDescription:\nYou are given a 0-indexed integer array nums of length n. \nExample 13: \nLeetCode Problem #2602\nTitle: Minimum Operations to Make All Array Elements Equal\nDescription:\nYou are given an array nums consisting of positive integers. \nExample 14: \nLeetCode Problem #2603\nTitle: Collect Coins in a Tree\nDescription:\nThere exists an undirected and unrooted tree with n nodes indexed from 0 to n - 1. You are given an integer n and a 2D integer array edges of length n - 1, where edges[i] = [a i, b i ] indicates that there is an edge between nodes a i and b i in the tree. You are also given an array coins of size n where coins[i] can be either 0 or 1, where 1 indicates the presence of a coin in the vertex i. \nExample 15: \nLeetCode Problem #2605\nTitle: Form Smallest Number From Two Digit Arrays\nDescription:\nGiven two arrays of unique digits nums1 and nums2, return the smallest number that contains at least one digit from each array. \nExample 16: \nLeetCode Problem #2606\nTitle: Find the Substring With Maximum Cost\nDescription:\nYou are given a string s, a string chars of distinct characters and an integer array vals of the same length as chars. \nExample 17: \nLeetCode Problem #2607\nTitle: Make K-Subarray Sums Equal\nDescription:\nYou are given a 0-indexed integer array arr and an integer k. The array arr is circular. In other words, the first element of the array is the next element of the last element, and the last element of the array is the previous element of the first element. \nExample 18: \nLeetCode Problem #2608\nTitle: Shortest Cycle in a Graph\nDescription:\nThere is a bi-directional graph with n vertices, where each vertex is labeled from 0 to n - 1. The edges in the graph are represented by a given 2D integer array edges, where edges[i] = [u i, v i ] denotes an edge between vertex u i and vertex v i. Every vertex pair is connected by at most one edge, and no vertex has an edge to itself. \nExample 19: \nLeetCode Problem #2609\nTitle: Find the Longest Balanced Substring of a Binary String\nDescription:\nYou are given a binary string s consisting only of zeroes and ones. \nExample 20: \nLeetCode Problem #2610\nTitle: Convert an Array Into a 2D Array With Conditions\nDescription:\nYou are given an integer array nums. You need to create a 2D array from nums satisfying the following conditions:...\n", "expected_response": "Example 21: \nLeetCode Problem #2611\nTitle: Mice and Cheese\nDescription:\nThere are two mice and n different types of cheese, each type of cheese should be eaten by exactly one mouse. \nExample 22: \nLeetCode Problem #2612\nTitle: Minimum Reverse Operations\nDescription:\nYou are given an integer n and an integer p in the range [ 0, n - 1]. Representing a 0-indexed array arr of length n where all positions are set to 0 's, except position p which is set to 1. \nExample 23: \nLeetCode Problem #2614\nTitle: Prime In Diagonal\nDescription:\nYou are given a 0-indexed two-dimensional integer array nums. \nExample 24: \nLeetCode Problem #2615\nTitle: Sum of Distances\nDescription:\nYou are given a 0-indexed integer array nums. There exists an array arr of length nums.length, where arr[i] is the sum of |i - j| over all j such that nums[j] == nums[i] and j != i. If there is no such j, set arr[i] to be 0. \nExample 25: \nLeetCode Problem #2616\nTitle: Minimize the Maximum Difference of Pairs\nDescription:\nYou are given a 0-indexed integer array nums and an integer p. Find p pairs of indices of nums such that the maximum difference amongst all the pairs is minimized. Also, ensure no index appears more than once amongst the p pairs. \nExample 26: \nLeetCode Problem #2617\nTitle: Minimum Number of Visited Cells in a Grid\nDescription:\nYou are given a 0-indexed m x n integer matrix grid. Your initial position is at the top-left cell (0, 0). \nExample 27: \nLeetCode Problem #2639\nTitle: Find the Width of Columns of a Grid\nDescription:\nYou are given a 0-indexed m x n integer matrix grid. The width of a column is the maximum length of its integers. \nExample 28: \nLeetCode Problem #2640\nTitle: Find the Score of All Prefixes of an Array\nDescription:\nWe define the conversion array conver of an array arr as follows:...\n\nExample 29: \nLeetCode Problem #2641\nTitle: Cousins in Binary Tree II\nDescription:\nGiven the root of a binary tree, replace the value of each node in the tree with the sum of all its cousins' values. \nExample 30: \nLeetCode Problem #2642\nTitle: Design Graph With Shortest Path Calculator\nDescription:\nThere is a directed weighted graph that consists of n nodes numbered from 0 to n - 1. The edges of the graph are initially represented by the given array edges where edges[i] = [from i, to i, edgeCost i ] meaning that there is an edge from from i to to i with the cost edgeCost i. \nExample 31: \nLeetCode Problem #2643\nTitle: Row With Maximum Ones\nDescription:\nGiven a m x n binary matrix mat, find the 0-indexed position of the row that contains the maximum count of ones, and the number of ones in that row. \nExample 32: \nLeetCode Problem #2644\nTitle: Find the Maximum Divisibility Score\nDescription:\nYou are given two 0-indexed integer arrays nums and divisors. \nExample 33: \nLeetCode Problem #2645\nTitle: Minimum Additions to Make Valid String\nDescription:\nGiven a string word to which you can insert letters \"a\", \"b\" or \"c\" anywhere and any number of times, return the minimum number of letters that must be inserted so that word becomes valid. \nExample 34: \nLeetCode Problem #2646\nTitle: Minimize the Total Price of the Trips\nDescription:\nThere exists an undirected and unrooted tree with n nodes indexed from 0 to n - 1. You are given the integer n and a 2D integer array edges of length n - 1, where edges[i] = [a i, b i ] indicates that there is an edge between nodes a i and b i in the tree. \nExample 35: \nLeetCode Problem #2651\nTitle: Calculate Delayed Arrival Time\nDescription:\nYou are given a positive integer arrivalTime denoting the arrival time of a train in hours, and another positive integer delayedTime denoting the amount of delay in hours. \nExample 36: \nLeetCode Problem #2652\nTitle: Sum Multiples\nDescription:\nGiven a positive integer n, find the sum of all integers in the range [1, n] inclusive that are divisible by 3, 5, or 7. \nExample 37: \nLeetCode Problem #2653\nTitle: Sliding Subarray Beauty\nDescription:\nGiven an integer array nums containing n integers, find the beauty of each subarray of size k. \nExample 38: \nLeetCode Problem #2654\nTitle: Minimum Number of Operations to Make All Array Elements Equal to 1\nDescription:\nYou are given a 0-indexed array nums consisiting of positive integers. You can do the following operation on the array any number of times:...\n\nExample 39: \nLeetCode Problem #2656\nTitle: Maximum Sum With Exactly K Elements \nDescription:\nYou are given a 0-indexed integer array nums and an integer k. Your task is to perform the following operation exactly k times in order to maximize your score:...\n\nExample 40: \nLeetCode Problem #2657\nTitle: Find the Prefix Common Array of Two Arrays\nDescription:\nYou are given two 0-indexed integer permutations A and B of length n. ", "iloc": 2021, "frontend_question_id": 2658.0, "n_pass": 1, "response": "Example 21: \nLeetCode Problem #2611\nTitle: Find the Maximum XOR of Two Numbers in an Array\nDescription:\nGiven an integer array nums, return the maximum XOR value of any two different elements in the array. \n\nExample 22: \nLeetCode Problem #2612\nTitle: Minimum Number of Removals to Make Mountain Array\nDescription:\nGiven an integer array nums, return the minimum number of elements to be removed to make it a mountain array. \n\nExample 23: \nLeetCode Problem #2613\nTitle: Count Pairs of Numbers With a Given Difference\nDescription:\nGiven an integer array nums and an integer k, return the number of pairs (i, j) where 0 <= i < j < nums.length and |nums[i] - nums[j]| == k.\n\nExample 24: \nLeetCode Problem #2614\nTitle: Check if All Characters Have Equal Number of Occurrences\nDescription:\nGiven a string s, return true if s can be modified into a valid palindrome by deleting at most one character, and false otherwise. \n\nExample 25: \nLeetCode Problem #2615\nTitle: Number of Substrings With Only 1 Different Letter\nDescription:\nGiven a string s, return the number of substrings that have exactly one different letter than the rest of the string. \n\nExample 26: \nLeetCode Problem #2616\nTitle: Check if the Sentence Is Pangram\nDescription:\nA pangram is a sentence where every letter of the English alphabet appears at least once. Given a string s, return true if s is a pangram, or false otherwise. \n\nExample 27: \nLeetCode Problem #2617\nTitle: Minimum Number of Swaps to Make the Binary String Alternating\nDescription:\nGiven a binary string s, return the minimum number of swaps to make it alternating, or -1 if it is impossible. \n\nExample 28: \nLeetCode Problem #2618\nTitle: Maximum Difference Between Increasing Elements\nDescription:\nYou are given an integer array nums. Return the maximum difference between any two adjacent elements in the sorted version of the array. \n\nExample 29: \nLeetCode Problem #2619\nTitle: Number of Substrings With All vowels\nDescription:\nGiven a string s, return the number of substrings with length at least 3 that consists only of vowels. \n\nExample 30: \nLeetCode Problem #2620\nTitle: Count Pairs of Elements With the Same Sum\nDescription:\nGiven two integer arrays nums1 and nums2, return the number of pairs (i, j) where 0 <= i < nums1.length and 0 <= j < nums2.length and nums1[i] + nums2[j] == k.", "cleaned_response": " \nFind the Maximum XOR of Two Numbers in an Array\n\nGiven an integer array nums, return the maximum XOR value of any two different elements in the array. \n\n \nMinimum Number of Removals to Make Mountain Array\n\nGiven an integer array nums, return the minimum number of elements to be removed to make it a mountain array. \n\n \nCount Pairs of Numbers With a Given Difference\n\nGiven an integer array nums and an integer k, return the number of pairs (i, j) where 0 <= i < j < nums.length and |nums[i] - nums[j]| == k.\n\n \nCheck if All Characters Have Equal Number of Occurrences\n\nGiven a string s, return true if s can be modified into a valid palindrome by deleting at most one character, and false otherwise. \n\n \nNumber of Substrings With Only 1 Different Letter\n\nGiven a string s, return the number of substrings that have exactly one different letter than the rest of the string. \n\n \nCheck if the Sentence Is Pangram\n\nA pangram is a sentence where every letter of the English alphabet appears at least once. Given a string s, return true if s is a pangram, or false otherwise. \n\n \nMinimum Number of Swaps to Make the Binary String Alternating\n\nGiven a binary string s, return the minimum number of swaps to make it alternating, or -1 if it is impossible. \n\n \nMaximum Difference Between Increasing Elements\n\nYou are given an integer array nums. Return the maximum difference between any two adjacent elements in the sorted version of the array. \n\n \nNumber of Substrings With All vowels\n\nGiven a string s, return the number of substrings with length at least 3 that consists only of vowels. \n\n \nCount Pairs of Elements With the Same Sum\n\nGiven two integer arrays nums1 and nums2, return the number of pairs (i, j) where 0 <= i < nums1.length and 0 <= j < nums2.length and nums1[i] + nums2[j] == k.", "similarity": 0.8322082255348888}
{"input_context": "Example 1: \nLeetCode Problem #2658\nTitle: Maximum Number of Fish in a Grid\nDescription:\nYou are given a 0-indexed 2D matrix grid of size m x n, where (r, c) represents:...\n\nExample 2: \nLeetCode Problem #2659\nTitle: Make Array Empty\nDescription:\nYou are given an integer array nums containing distinct numbers, and you can perform the following operations until the array is empty :...\n\nExample 3: \nLeetCode Problem #2660\nTitle: Determine the Winner of a Bowling Game\nDescription:\nYou are given two 0-indexed integer arrays player1 and player2, that represent the number of pins that player 1 and player 2 hit in a bowling game, respectively. \nExample 4: \nLeetCode Problem #2661\nTitle: First Completely Painted Row or Column\nDescription:\nYou are given a 0-indexed integer array arr, and an m x n integer matrix mat. arr and mat both contain all the integers in the range [1, m * n]. \nExample 5: \nLeetCode Problem #2662\nTitle: Minimum Cost of a Path With Special Roads\nDescription:\nYou are given an array start where start = [startX, startY] represents your initial position (startX, startY) in a 2D space. You are also given the array target where target = [targetX, targetY] represents your target position (targetX, targetY). \nExample 6: \nLeetCode Problem #2663\nTitle: Lexicographically Smallest Beautiful String\nDescription:\nA string is beautiful if:...\n\nExample 7: \nLeetCode Problem #2670\nTitle: Find the Distinct Difference Array\nDescription:\nYou are given a 0-indexed array nums of length n. \nExample 8: \nLeetCode Problem #2671\nTitle: Frequency Tracker\nDescription:\nDesign a data structure that keeps track of the values in it and answers some queries regarding their frequencies. \nExample 9: \nLeetCode Problem #2672\nTitle: Number of Adjacent Elements With the Same Color\nDescription:\nThere is a 0-indexed array nums of length n. Initially, all elements are uncolored (has a value of 0 ). \nExample 10: \nLeetCode Problem #2673\nTitle: Make Costs of Paths Equal in a Binary Tree\nDescription:\nYou are given an integer n representing the number of nodes in a perfect binary tree consisting of nodes numbered from 1 to n. The root of the tree is node 1 and each node i in the tree has two children where the left child is the node 2 * i and the right child is 2 * i + 1. \nExample 11: \nLeetCode Problem #2678\nTitle: Number of Senior Citizens\nDescription:\nYou are given a 0-indexed array of strings details. Each element of details provides information about a given passenger compressed into a string of length 15. The system is such that:...\n\nExample 12: \nLeetCode Problem #2679\nTitle: Sum in a Matrix\nDescription:\nYou are given a 0-indexed 2D integer array nums. Initially, your score is 0. Perform the following operations until the matrix becomes empty:...\n\nExample 13: \nLeetCode Problem #2680\nTitle: Maximum OR\nDescription:\nYou are given a 0-indexed integer array nums of length n and an integer k. In an operation, you can choose an element and multiply it by 2. \nExample 14: \nLeetCode Problem #2681\nTitle: Power of Heroes\nDescription:\nYou are given a 0-indexed integer array nums representing the strength of some heroes. The power of a group of heroes is defined as follows:...\n\nExample 15: \nLeetCode Problem #2682\nTitle: Find the Losers of the Circular Game\nDescription:\nThere are n friends that are playing a game. The friends are sitting in a circle and are numbered from 1 to n in clockwise order. More formally, moving clockwise from the i th friend brings you to the (i+1) th friend for 1 <= i < n, and moving clockwise from the n th friend brings you to the 1 st friend. \nExample 16: \nLeetCode Problem #2683\nTitle: Neighboring Bitwise XOR\nDescription:\nA 0-indexed array derived with length n is derived by computing the bitwise XOR (\u2295) of adjacent values in a binary array original of length n. \nExample 17: \nLeetCode Problem #2684\nTitle: Maximum Number of Moves in a Grid\nDescription:\nYou are given a 0-indexed m x n matrix grid consisting of positive integers. \nExample 18: \nLeetCode Problem #2685\nTitle: Count the Number of Complete Components\nDescription:\nYou are given an integer n. There is an undirected graph with n vertices, numbered from 0 to n - 1. You are given a 2D integer array edges where edges[i] = [a i, b i ] denotes that there exists an undirected edge connecting vertices a i and b i. \nExample 19: \nLeetCode Problem #2696\nTitle: Minimum String Length After Removing Substrings\nDescription:\nYou are given a string s consisting only of uppercase English letters. \nExample 20: \nLeetCode Problem #2697\nTitle: Lexicographically Smallest Palindrome\nDescription:\nYou are given a string s consisting of lowercase English letters, and you are allowed to perform operations on it. In one operation, you can replace a character in s with another lowercase English letter. ", "expected_response": "Example 21: \nLeetCode Problem #2698\nTitle: Find the Punishment Number of an Integer\nDescription:\nGiven a positive integer n, return the punishment number of n. \nExample 22: \nLeetCode Problem #2699\nTitle: Modify Graph Edge Weights\nDescription:\nYou are given an undirected weighted connected graph containing n nodes labeled from 0 to n - 1, and an integer array edges where edges[i] = [a i, b i, w i ] indicates that there is an edge between nodes a i and b i with weight w i. \nExample 23: \nLeetCode Problem #2706\nTitle: Buy Two Chocolates\nDescription:\nYou are given an integer array prices representing the prices of various chocolates in a store. You are also given a single integer money, which represents your initial amount of money. \nExample 24: \nLeetCode Problem #2707\nTitle: Extra Characters in a String\nDescription:\nYou are given a 0-indexed string s and a dictionary of words dictionary. You have to break s into one or more non-overlapping substrings such that each substring is present in dictionary. There may be some extra characters in s which are not present in any of the substrings. \nExample 25: \nLeetCode Problem #2708\nTitle: Maximum Strength of a Group\nDescription:\nYou are given a 0-indexed integer array nums representing the score of students in an exam. The teacher would like to form one non-empty group of students with maximal strength, where the strength of a group of students of indices i 0, i 1, i 2,. . . , i k is defined as nums[i 0 ] * nums[i 1 ] * nums[i 2 ] *. . . * nums[i k \u200b]. \nExample 26: \nLeetCode Problem #2709\nTitle: Greatest Common Divisor Traversal\nDescription:\nYou are given a 0-indexed integer array nums, and you are allowed to traverse between its indices. You can traverse between index i and index j, i != j, if and only if gcd(nums[i], nums[j]) > 1, where gcd is the greatest common divisor. \nExample 27: \nLeetCode Problem #2710\nTitle: Remove Trailing Zeros From a String\nDescription:\nGiven a positive integer num represented as a string, return the integer num without trailing zeros as a string. \nExample 28: \nLeetCode Problem #2711\nTitle: Difference of Number of Distinct Values on Diagonals\nDescription:\nGiven a 0-indexed 2D grid of size m x n, you should find the matrix answer of size m x n. \nExample 29: \nLeetCode Problem #2712\nTitle: Minimum Cost to Make All Characters Equal\nDescription:\nYou are given a 0-indexed binary string s of length n on which you can apply two types of operations:...\n\nExample 30: \nLeetCode Problem #2713\nTitle: Maximum Strictly Increasing Cells in a Matrix\nDescription:\nGiven a 1-indexed m x n integer matrix mat, you can select any cell in the matrix as your starting cell. \nExample 31: \nLeetCode Problem #2716\nTitle: Minimize String Length\nDescription:\nGiven a 0-indexed string s, repeatedly perform the following operation any number of times:...\n\nExample 32: \nLeetCode Problem #2717\nTitle: Semi-Ordered Permutation\nDescription:\nYou are given a 0-indexed permutation of n integers nums. \nExample 33: \nLeetCode Problem #2718\nTitle: Sum of Matrix After Queries\nDescription:\nYou are given an integer n and a 0-indexed 2D array queries where queries[i] = [type i, index i, val i ]. \nExample 34: \nLeetCode Problem #2719\nTitle: Count of Integers\nDescription:\nYou are given two numeric strings num1 and num2 and two integers max_sum and min_sum. We denote an integer x to be good if:...\n\nExample 35: \nLeetCode Problem #2729\nTitle: Check if The Number is Fascinating\nDescription:\nYou are given an integer n that consists of exactly 3 digits. \nExample 36: \nLeetCode Problem #2730\nTitle: Find the Longest Semi-Repetitive Substring\nDescription:\nYou are given a 0-indexed string s that consists of digits from 0 to 9. \nExample 37: \nLeetCode Problem #2731\nTitle: Movement of Robots\nDescription:\nSome robots are standing on an infinite number line with their initial coordinates given by a 0-indexed integer array nums and will start moving once given the command to move. The robots will move a unit distance each second. \nExample 38: \nLeetCode Problem #2732\nTitle: Find a Good Subset of the Matrix\nDescription:\nYou are given a 0-indexed m x n binary matrix grid. \nExample 39: \nLeetCode Problem #2733\nTitle: Neither Minimum nor Maximum\nDescription:\nGiven an integer array nums containing distinct positive integers, find and return any number from the array that is neither the minimum nor the maximum value in the array, or -1 if there is no such number. \nExample 40: \nLeetCode Problem #2734\nTitle: Lexicographically Smallest String After Substring Operation\nDescription:\nYou are given a string s consisting of only lowercase English letters. In one operation, you can do the following:...\n", "iloc": 2061, "frontend_question_id": 2735.0, "n_pass": 1, "response": "Example 21: \nLeetCode Problem #2698\nTitle: Longest Equal Substring\nDescription:\nGiven a string s, find the length of the longest substring that consists of equal characters.\n\nExample 22: \nLeetCode Problem #2699\nTitle: Rotate Image\nDescription:\nYou are given an n x n 2D matrix representing an image, rotate the image by 90 degrees (clockwise).\n\nExample 23: \nLeetCode Problem #2700\nTitle: Maximum Sum of Non-Adjacent Subsequence\nDescription:\nGiven an integer array nums, find the maximum sum of a subsequence where the subsequence does not contain adjacent elements.\n\nExample 24: \nLeetCode Problem #2701\nTitle: Minimum Meeting Rooms\nDescription:\nGiven an array of meeting time intervals intervals where intervals[i] = [starti, endi], return the minimum number of conference rooms required.\n\nExample 25: \nLeetCode Problem #2702\nTitle: Jump Game III\nDescription:\nGiven an array of non-negative integers arr, you are initially positioned at start index of the array. When you jump from index i to index j (i < j), you have to pay arr[i] steps to reach arr[j]. Return the minimum number of jumps required to reach the last index.\n\nExample 26: \nLeetCode Problem #2703\nTitle: Best Team With No Conflicts\nDescription:\nYou are given two arrays scores and ages of the same length, consisting of n elements each. You are also given an integer minAge and an integer maxAge.\n\nExample 27: \nLeetCode Problem #2704\nTitle: Determine if Two Strings Are Close\nDescription:\nTwo strings are considered close if you can attain one from the other using the following operations:\n\nExample 28: \nLeetCode Problem #2705\nTitle: Longest Increasing Subsequence\nDescription:\nGiven an integer array nums, return the length of the longest strictly increasing subsequence.\n\nExample 29: \nLeetCode Problem #2706\nTitle: Search Suggestions System\nDescription:\nGiven an array of strings products and a string searchWord. We want to design a system that suggests at most three product names from products after each character of searchWord is typed. \n\nExample 30:\nLeetCode Problem #2707\nTitle: Maximum Average Subtree\nDescription:\nYou are given the root of a binary tree. Find the maximum average value of any subtree of that tree.\n", "cleaned_response": " \nLongest Equal Substring\n\nGiven a string s, find the length of the longest substring that consists of equal characters.\n\n \nRotate Image\n\nYou are given an n x n 2D matrix representing an image, rotate the image by 90 degrees (clockwise).\n\n \nMaximum Sum of Non-Adjacent Subsequence\n\nGiven an integer array nums, find the maximum sum of a subsequence where the subsequence does not contain adjacent elements.\n\n \nMinimum Meeting Rooms\n\nGiven an array of meeting time intervals intervals where intervals[i] = [starti, endi], return the minimum number of conference rooms required.\n\n \nJump Game III\n\nGiven an array of non-negative integers arr, you are initially positioned at start index of the array. When you jump from index i to index j (i < j), you have to pay arr[i] steps to reach arr[j]. Return the minimum number of jumps required to reach the last index.\n\n \nBest Team With No Conflicts\n\nYou are given two arrays scores and ages of the same length, consisting of n elements each. You are also given an integer minAge and an integer maxAge.\n\n \nDetermine if Two Strings Are Close\n\nTwo strings are considered close if you can attain one from the other using the following operations:\n\n \nLongest Increasing Subsequence\n\nGiven an integer array nums, return the length of the longest strictly increasing subsequence.\n\n \nSearch Suggestions System\n\nGiven an array of strings products and a string searchWord. We want to design a system that suggests at most three product names from products after each character of searchWord is typed. \n\n\nMaximum Average Subtree\n\nYou are given the root of a binary tree. Find the maximum average value of any subtree of that tree.\n", "similarity": 0.7841919368318706}
{"input_context": "Example 1: \nLeetCode Problem #2735\nTitle: Collecting Chocolates\nDescription:\nYou are given a 0-indexed integer array nums of size n representing the cost of collecting different chocolates. The cost of collecting the chocolate at the index i is nums[i]. Each chocolate is of a different type, and initially, the chocolate at the index i is of i th type. \nExample 2: \nLeetCode Problem #2736\nTitle: Maximum Sum Queries\nDescription:\nYou are given two 0-indexed integer arrays nums1 and nums2, each of length n, and a 1-indexed 2D array queries where queries[i] = [x i, y i ]. \nExample 3: \nLeetCode Problem #2739\nTitle: Total Distance Traveled\nDescription:\nA truck has two fuel tanks. You are given two integers, mainTank representing the fuel present in the main tank in liters and additionalTank representing the fuel present in the additional tank in liters. \nExample 4: \nLeetCode Problem #2740\nTitle: Find the Value of the Partition\nDescription:\nYou are given a positive integer array nums. \nExample 5: \nLeetCode Problem #2741\nTitle: Special Permutations\nDescription:\nYou are given a 0-indexed integer array nums containing n distinct positive integers. A permutation of nums is called special if:...\n\nExample 6: \nLeetCode Problem #2742\nTitle: Painting the Walls\nDescription:\nYou are given two 0-indexed integer arrays, cost and time, of size n representing the costs and the time taken to paint n different walls respectively. There are two painters available:...\n\nExample 7: \nLeetCode Problem #2744\nTitle: Find Maximum Number of String Pairs\nDescription:\nYou are given a 0-indexed array words consisting of distinct strings. \nExample 8: \nLeetCode Problem #2745\nTitle: Construct the Longest New String\nDescription:\nYou are given three integers x, y, and z. \nExample 9: \nLeetCode Problem #2746\nTitle: Decremental String Concatenation\nDescription:\nYou are given a 0-indexed array words containing n strings. \nExample 10: \nLeetCode Problem #2747\nTitle: Count Zero Request Servers\nDescription:\nYou are given an integer n denoting the total number of servers and a 2D 0-indexed integer array logs, where logs[i] = [server_id, time] denotes that the server with id server_id received a request at time time. \nExample 11: \nLeetCode Problem #2748\nTitle: Number of Beautiful Pairs\nDescription:\nYou are given a 0-indexed integer array nums. A pair of indices i, j where 0 <= i < j < nums.length is called beautiful if the first digit of nums[i] and the last digit of nums[j] are coprime. \nExample 12: \nLeetCode Problem #2749\nTitle: Minimum Operations to Make the Integer Zero\nDescription:\nYou are given two integers num1 and num2. \nExample 13: \nLeetCode Problem #2750\nTitle: Ways to Split Array Into Good Subarrays\nDescription:\nYou are given a binary array nums. \nExample 14: \nLeetCode Problem #2751\nTitle: Robot Collisions\nDescription:\nThere are n 1-indexed robots, each having a position on a line, health, and movement direction. \nExample 15: \nLeetCode Problem #2760\nTitle: Longest Even Odd Subarray With Threshold\nDescription:\nYou are given a 0-indexed integer array nums and an integer threshold. \nExample 16: \nLeetCode Problem #2761\nTitle: Prime Pairs With Target Sum\nDescription:\nYou are given an integer n. We say that two integers x and y form a prime number pair if:...\n\nExample 17: \nLeetCode Problem #2762\nTitle: Continuous Subarrays\nDescription:\nYou are given a 0-indexed integer array nums. A subarray of nums is called continuous if:...\n\nExample 18: \nLeetCode Problem #2763\nTitle: Sum of Imbalance Numbers of All Subarrays\nDescription:\nThe imbalance number of a 0-indexed integer array arr of length n is defined as the number of indices in sarr = sorted(arr) such that:...\n\nExample 19: \nLeetCode Problem #2765\nTitle: Longest Alternating Subarray\nDescription:\nYou are given a 0-indexed integer array nums. A subarray s of length m is called alternating if:...\n\nExample 20: \nLeetCode Problem #2766\nTitle: Relocate Marbles\nDescription:\nYou are given a 0-indexed integer array nums representing the initial positions of some marbles. You are also given two 0-indexed integer arrays moveFrom and moveTo of equal length. ", "expected_response": "Example 21: \nLeetCode Problem #2767\nTitle: Partition String Into Minimum Beautiful Substrings\nDescription:\nGiven a binary string s, partition the string into one or more substrings such that each substring is beautiful. \nExample 22: \nLeetCode Problem #2768\nTitle: Number of Black Blocks\nDescription:\nYou are given two integers m and n representing the dimensions of a 0-indexed m x n grid. \nExample 23: \nLeetCode Problem #2769\nTitle: Find the Maximum Achievable Number\nDescription:\nYou are given two integers, num and t. \nExample 24: \nLeetCode Problem #2770\nTitle: Maximum Number of Jumps to Reach the Last Index\nDescription:\nYou are given a 0-indexed array nums of n integers and an integer target. \nExample 25: \nLeetCode Problem #2771\nTitle: Longest Non-decreasing Subarray From Two Arrays\nDescription:\nYou are given two 0-indexed integer arrays nums1 and nums2 of length n. \nExample 26: \nLeetCode Problem #2772\nTitle: Apply Operations to Make All Array Elements Equal to Zero\nDescription:\nYou are given a 0-indexed integer array nums and a positive integer k. \nExample 27: \nLeetCode Problem #2778\nTitle: Sum of Squares of Special Elements \nDescription:\nYou are given a 1-indexed integer array nums of length n. \nExample 28: \nLeetCode Problem #2779\nTitle: Maximum Beauty of an Array After Applying Operation\nDescription:\nYou are given a 0-indexed array nums and a non-negative integer k. \nExample 29: \nLeetCode Problem #2780\nTitle: Minimum Index of a Valid Split\nDescription:\nAn element x of an integer array arr of length m is dominant if freq(x) * 2 > m, where freq(x) is the number of occurrences of x in arr. Note that this definition implies that arr can have at most one dominant element. \nExample 30: \nLeetCode Problem #2781\nTitle: Length of the Longest Valid Substring\nDescription:\nYou are given a string word and an array of strings forbidden. \nExample 31: \nLeetCode Problem #2784\nTitle: Check if Array is Good\nDescription:\nYou are given an integer array nums. We consider an array good if it is a permutation of an array base[n]. \nExample 32: \nLeetCode Problem #2785\nTitle: Sort Vowels in a String\nDescription:\nGiven a 0-indexed string s, permute s to get a new string t such that:...\n\nExample 33: \nLeetCode Problem #2786\nTitle: Visit Array Positions to Maximize Score\nDescription:\nYou are given a 0-indexed integer array nums and a positive integer x. \nExample 34: \nLeetCode Problem #2787\nTitle: Ways to Express an Integer as Sum of Powers\nDescription:\nGiven two positive integers n and x. \nExample 35: \nLeetCode Problem #2788\nTitle: Split Strings by Separator\nDescription:\nGiven an array of strings words and a character separator, split each string in words by separator. \nExample 36: \nLeetCode Problem #2789\nTitle: Largest Element in an Array after Merge Operations\nDescription:\nYou are given a 0-indexed array nums consisting of positive integers. \nExample 37: \nLeetCode Problem #2790\nTitle: Maximum Number of Groups With Increasing Length\nDescription:\nYou are given a 0-indexed array usageLimits of length n. \nExample 38: \nLeetCode Problem #2791\nTitle: Count Paths That Can Form a Palindrome in a Tree\nDescription:\nYou are given a tree (i. e. a connected, undirected graph that has no cycles) rooted at node 0 consisting of n nodes numbered from 0 to n - 1. The tree is represented by a 0-indexed array parent of size n, where parent[i] is the parent of node i. Since node 0 is the root, parent[0] == -1. \nExample 39: \nLeetCode Problem #2798\nTitle: Number of Employees Who Met the Target\nDescription:\nThere are n employees in a company, numbered from 0 to n - 1. Each employee i has worked for hours[i] hours in the company. \nExample 40: \nLeetCode Problem #2799\nTitle: Count Complete Subarrays in an Array\nDescription:\nYou are given an array nums consisting of positive integers. ", "iloc": 2101, "frontend_question_id": 2800.0, "n_pass": 1, "response": "Example 21: \nLeetCode Problem #2767\nTitle: Count Maximum Substrings\nDescription:\nYou are given a string s consisting of lowercase English letters. A substring of s is defined as a contiguous sequence of characters. \n\nExample 22: \nLeetCode Problem #2768\nTitle: Maximum Area of Island\nDescription:\nYou are given a 2D grid of size m x n representing an island. An island is a group of 1's (representing land) connected 4-directionally (horizontal or vertical). \n\nExample 23: \nLeetCode Problem #2769\nTitle: Valid Parentheses Concatenation\nDescription:\nYou are given a string s containing parentheses '(' and ')'. \n\nExample 24: \nLeetCode Problem #2770\nTitle: N-ary Tree Postorder Traversal\nDescription:\nYou are given an n-ary tree root where each node in the tree has at most n children, and an empty list res. \n\nExample 25: \nLeetCode Problem #2771\nTitle: Unique Paths III\nDescription:\nYou are given a m x n grid grid of integers. \n\nExample 26: \nLeetCode Problem #2772\nTitle: Color the Grid\nDescription:\nYou are given two integers m and n. \n\nExample 27: \nLeetCode Problem #2773\nTitle: Alphabet Board Path\nDescription:\nYou are given a string target representing the number you want to input. \n\nExample 28: \nLeetCode Problem #2774\nTitle: Island Perimeter\nDescription:\nYou are given a 2D grid of size m x n where each cell has a value of 0 or 1. \n\nExample 29: \nLeetCode Problem #2775\nTitle: Find N Unique Integers Sum up to Zero\nDescription:\nGiven an integer n, return any array containing n unique integers such that they add up to 0. \n\nExample 30: \nLeetCode Problem #2776\nTitle: Sort the Matrix Diagonally\nDescription:\nYou are given an m x n matrix mat of integers. \n\nExample 31: \nLeetCode Problem #2777\nTitle: Count Good Meals\nDescription:\nYou are given an integer array deliciousness. \n\nExample 32: \nLeetCode Problem #2778\nTitle: Sort Colors\nDescription:\nYou are given an array nums with n objects colored red, white, or blue. \n\nExample 33: \nLeetCode Problem #2779\nTitle: Single Number III\nDescription:\nYou are given an integer array nums. \n\nExample 34: \nLeetCode Problem #2780\nTitle: Meeting Rooms II\nDescription:\nGiven an array of meeting time intervals intervals where intervals[i] = [start i, end i ], return the minimum number of conference rooms required. \n\nExample 35: \nLeetCode Problem #2781\nTitle: Reverse Words in a String\nDescription:\nGiven an input string s, reverse the order of the words. \n\nExample 36: \nLeetCode Problem #2782\nTitle: Kth Largest Element in an Array\nDescription:\nGiven an integer array nums and an integer k, return the kth largest element in the array. \n\nExample 37: \nLeetCode Problem #2783\nTitle: Palindrome Linked List\nDescription:\nGiven the head of a singly linked list, return true if it is a palindrome. \n\nExample 38: \nLeetCode Problem #2784\nTitle: Reverse Nodes in k-Group\nDescription:\nGiven a linked list, reverse the nodes of a linked list k at a time and return its modified list. \n\nExample 39: \nLeetCode Problem #2785\nTitle: Intersection of Two Linked Lists\nDescription:\nGiven the heads of two singly linked-lists headA and headB, return the node at which the two lists intersect. \n\nExample 40: \nLeetCode Problem #2786\nTitle: Distinct Subsequences\nDescription:\nGiven two strings s and t, return the number of distinct subsequences of s which equals t.", "cleaned_response": " \nCount Maximum Substrings\n\nYou are given a string s consisting of lowercase English letters. A substring of s is defined as a contiguous sequence of characters. \n\n \nMaximum Area of Island\n\nYou are given a 2D grid of size m x n representing an island. An island is a group of 1's (representing land) connected 4-directionally (horizontal or vertical). \n\n \nValid Parentheses Concatenation\n\nYou are given a string s containing parentheses '(' and ')'. \n\n \nN-ary Tree Postorder Traversal\n\nYou are given an n-ary tree root where each node in the tree has at most n children, and an empty list res. \n\n \nUnique Paths III\n\nYou are given a m x n grid grid of integers. \n\n \nColor the Grid\n\nYou are given two integers m and n. \n\n \nAlphabet Board Path\n\nYou are given a string target representing the number you want to input. \n\n \nIsland Perimeter\n\nYou are given a 2D grid of size m x n where each cell has a value of 0 or 1. \n\n \nFind N Unique Integers Sum up to Zero\n\nGiven an integer n, return any array containing n unique integers such that they add up to 0. \n\n \nSort the Matrix Diagonally\n\nYou are given an m x n matrix mat of integers. \n\n \nCount Good Meals\n\nYou are given an integer array deliciousness. \n\n \nSort Colors\n\nYou are given an array nums with n objects colored red, white, or blue. \n\n \nSingle Number III\n\nYou are given an integer array nums. \n\n \nMeeting Rooms II\n\nGiven an array of meeting time intervals intervals where intervals[i] = [start i, end i ], return the minimum number of conference rooms required. \n\n \nReverse Words in a String\n\nGiven an input string s, reverse the order of the words. \n\n \nKth Largest Element in an Array\n\nGiven an integer array nums and an integer k, return the kth largest element in the array. \n\n \nPalindrome Linked List\n\nGiven the head of a singly linked list, return true if it is a palindrome. \n\n \nReverse Nodes in k-Group\n\nGiven a linked list, reverse the nodes of a linked list k at a time and return its modified list. \n\n \nIntersection of Two Linked Lists\n\nGiven the heads of two singly linked-lists headA and headB, return the node at which the two lists intersect. \n\n \nDistinct Subsequences\n\nGiven two strings s and t, return the number of distinct subsequences of s which equals t.", "similarity": 0.8660537208616368}
